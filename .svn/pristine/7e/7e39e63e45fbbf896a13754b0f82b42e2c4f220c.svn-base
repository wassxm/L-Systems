<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:33 CET 2023 -->
<title>GLAutoDrawableDelegate (JOGL API -- 2.4 Specification)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GLAutoDrawableDelegate (JOGL API -- 2.4 Specification)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLAutoDrawableDelegate.html" target="_top">Frames</a></li>
<li><a href="GLAutoDrawableDelegate.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl</a></div>
<h2 title="Class GLAutoDrawableDelegate" class="title">Class GLAutoDrawableDelegate</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>jogamp.opengl.GLAutoDrawableBase</li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.GLAutoDrawableDelegate</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><code><a href="../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurfaceHolder.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink">NativeSurfaceHolder</a></code>, <code><a href="FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code>, <code><a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code>, <code><a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code>, <code><a href="GLSharedContextSetter.html" title="interface in com.jogamp.opengl">GLSharedContextSetter</a></code>, <code><a href="GLStateKeeper.html" title="interface in com.jogamp.opengl">GLStateKeeper</a></code></dd>
</dl>
<hr>
<pre>public class <span class="typeNameLabel">GLAutoDrawableDelegate</span>
extends jogamp.opengl.GLAutoDrawableBase
implements <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></pre>
<div class="block">Fully functional <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> implementation
 utilizing already created <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> and <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> instances.
 <p>
 Since no native windowing system events are being processed, it is recommended
 to handle at least the <code>window events</code>:
 <ul>
   <li><code>repaint</code> using <a href="#windowRepaintOp()"><code>windowRepaintOp()</code></a></li>
   <li><code>resize</code> using <code>#windowResizedOp()</code></li>
 </ul>
 and setup a <code>custom toolkit destruction</code> issuing <a href="#windowDestroyNotifyOp()"><code>windowDestroyNotifyOp()</code></a>.
 </p>
 <p>
 See example <code>TestGLAutoDrawableDelegateNEWT</code>.
 </p>
 <p>
 <a name="contextSharing"><h5>OpenGL Context Sharing</h5></a>
 To share a <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> see the following note in the documentation overview:
 <a href="../../../overview-summary.html#SHARING">context sharing</a>
 as well as <a href="GLSharedContextSetter.html" title="interface in com.jogamp.opengl"><code>GLSharedContextSetter</code></a>.
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<ul class="blockList">
<li class="blockList"><a id="nested.classes.inherited.from.class.com.jogamp.opengl.GLStateKeeper">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from interface&nbsp;com.jogamp.opengl.<a href="GLStateKeeper.html" title="interface in com.jogamp.opengl">GLStateKeeper</a></h3>
<code><a href="GLStateKeeper.Listener.html" title="interface in com.jogamp.opengl">GLStateKeeper.Listener</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.jogamp.opengl.GLAutoDrawableBase">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;jogamp.opengl.GLAutoDrawableBase</h3>
<code>DEBUG</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.jogamp.opengl.FPSCounter">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;com.jogamp.opengl.<a href="FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></h3>
<code><a href="FPSCounter.html#DEFAULT_FRAMES_PER_INTERVAL">DEFAULT_FRAMES_PER_INTERVAL</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.jogamp.opengl.GLAutoDrawable">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;com.jogamp.opengl.<a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></h3>
<code><a href="GLAutoDrawable.html#SCREEN_CHANGE_ACTION_ENABLED">SCREEN_CHANGE_ACTION_ENABLED</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(com.jogamp.opengl.GLDrawable,com.jogamp.opengl.GLContext,java.lang.Object,boolean,com.jogamp.common.util.locks.RecursiveLock)">GLAutoDrawableDelegate</a></span>&#8203;(<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;drawable,
                      <a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;context,
                      <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;upstreamWidget,
                      boolean&nbsp;ownDevice,
                      <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink">RecursiveLock</a>&nbsp;lock)</code></th>
<td class="colLast">
<div class="block">
 The <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> can be assigned later manually via <a href="GLAutoDrawable.html#setContext(com.jogamp.opengl.GLContext,boolean)"><code>setContext(ctx)</code></a>
 <i>or</i> it will be created <i>lazily</i> at the 1st <a href="GLAutoDrawable.html#display()"><code>display()</code></a> method call.<br>
 <i>Lazy</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> creation will take a shared <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> into account
 which has been set <code>directly</code>
 or <code>via another GLAutoDrawable</code>.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#destroy()">destroy</a></span>()</code></th>
<td class="colLast">
<div class="block">Destroys all resources associated with this GLAutoDrawable,
      inclusive the GLContext.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#display()">display</a></span>()</code></th>
<td class="colLast">
<div class="block">
 Causes OpenGL rendering to be performed for this GLAutoDrawable
 in the following order:
 
      Calling <a href="GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a> for all
          registered <a href="GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFactory()">getFactory</a></span>()</code></th>
<td class="colLast">
<div class="block">Return the <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> being used to create this instance.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink">RecursiveLock</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getUpstreamLock()">getUpstreamLock</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the recursive lock object of the <a href="GLAutoDrawable.html#getUpstreamWidget()"><code>upstream widget</code></a>
 to synchronize multithreaded access on top of <a href="../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.lockSurface()</code></a>.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getUpstreamWidget()">getUpstreamWidget</a></span>()</code></th>
<td class="colLast">
<div class="block">Method <i>may</i> return the upstream UI toolkit object
 holding this <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> instance, if exist.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setUpstreamWidget(java.lang.Object)">setUpstreamWidget</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;newUpstreamWidget)</code></th>
<td class="colLast">
<div class="block">Set the upstream UI toolkit object.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#swapBuffers()">swapBuffers</a></span>()</code></th>
<td class="colLast">
<div class="block">Swaps the front and back buffers of this drawable.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#windowDestroyNotifyOp()">windowDestroyNotifyOp</a></span>()</code></th>
<td class="colLast">
<div class="block">Implementation to handle destroy notifications from the windowing system.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#windowRepaintOp()">windowRepaintOp</a></span>()</code></th>
<td class="colLast">
<div class="block">Default implementation to handle repaint events from the windowing system</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#windowResizedOp(int,int)">windowResizedOp</a></span>&#8203;(int&nbsp;newWidth,
               int&nbsp;newHeight)</code></th>
<td class="colLast">
<div class="block">Handling resize events from the windowing system.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.jogamp.opengl.GLAutoDrawableBase">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;jogamp.opengl.GLAutoDrawableBase</h3>
<code>addGLEventListener, addGLEventListener, areAllGLEventListenerInitialized, clearPreservedGLState, createContext, defaultSwapBuffers, disposeGLEventListener, flushGLRunnables, getAnimator, getAutoSwapBufferMode, getChosenGLCapabilities, getContext, getContextCreationFlags, getDelegatedDrawable, getExclusiveContextThread, getFPSStartTime, getGL, getGLEventListener, getGLEventListenerCount, getGLEventListenerInitState, getGLProfile, getHandle, getLastFPS, getLastFPSPeriod, getLastFPSUpdateTime, getNativeSurface, getPreservedGLState, getRequestedGLCapabilities, getSurfaceHeight, getSurfaceWidth, getTotalFPS, getTotalFPSDuration, getTotalFPSFrames, getUpdateFPSFrames, invoke, invoke, invokeOnCurrentThread, invokeOnNewThread, isGLOriented, isGLStatePreservationSupported, isRealized, isThreadGLCapable, preserveGLStateAtDestroy, removeGLEventListener, resetFPSCounter, setAnimator, setAutoSwapBufferMode, setContext, setContextCreationFlags, setExclusiveContextThread, setGL, setGLEventListenerInitState, setGLStateKeeperListener, setRealized, setSharedAutoDrawable, setSharedContext, setUpdateFPSFrames</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.opengl.GLAutoDrawable">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.opengl.<a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></h3>
<code><a href="GLAutoDrawable.html#addGLEventListener(int,com.jogamp.opengl.GLEventListener)">addGLEventListener</a>, <a href="GLAutoDrawable.html#addGLEventListener(com.jogamp.opengl.GLEventListener)">addGLEventListener</a>, <a href="GLAutoDrawable.html#areAllGLEventListenerInitialized()">areAllGLEventListenerInitialized</a>, <a href="GLAutoDrawable.html#createContext(com.jogamp.opengl.GLContext)">createContext</a>, <a href="GLAutoDrawable.html#disposeGLEventListener(com.jogamp.opengl.GLEventListener,boolean)">disposeGLEventListener</a>, <a href="GLAutoDrawable.html#flushGLRunnables()">flushGLRunnables</a>, <a href="GLAutoDrawable.html#getAnimator()">getAnimator</a>, <a href="GLAutoDrawable.html#getAutoSwapBufferMode()">getAutoSwapBufferMode</a>, <a href="GLAutoDrawable.html#getContext()">getContext</a>, <a href="GLAutoDrawable.html#getContextCreationFlags()">getContextCreationFlags</a>, <a href="GLAutoDrawable.html#getDelegatedDrawable()">getDelegatedDrawable</a>, <a href="GLAutoDrawable.html#getExclusiveContextThread()">getExclusiveContextThread</a>, <a href="GLAutoDrawable.html#getGL()">getGL</a>, <a href="GLAutoDrawable.html#getGLEventListener(int)">getGLEventListener</a>, <a href="GLAutoDrawable.html#getGLEventListenerCount()">getGLEventListenerCount</a>, <a href="GLAutoDrawable.html#getGLEventListenerInitState(com.jogamp.opengl.GLEventListener)">getGLEventListenerInitState</a>, <a href="GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)">invoke</a>, <a href="GLAutoDrawable.html#invoke(boolean,java.util.List)">invoke</a>, <a href="GLAutoDrawable.html#isThreadGLCapable()">isThreadGLCapable</a>, <a href="GLAutoDrawable.html#removeGLEventListener(com.jogamp.opengl.GLEventListener)">removeGLEventListener</a>, <a href="GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)">setAnimator</a>, <a href="GLAutoDrawable.html#setAutoSwapBufferMode(boolean)">setAutoSwapBufferMode</a>, <a href="GLAutoDrawable.html#setContext(com.jogamp.opengl.GLContext,boolean)">setContext</a>, <a href="GLAutoDrawable.html#setContextCreationFlags(int)">setContextCreationFlags</a>, <a href="GLAutoDrawable.html#setExclusiveContextThread(java.lang.Thread)">setExclusiveContextThread</a>, <a href="GLAutoDrawable.html#setGL(com.jogamp.opengl.GL)">setGL</a>, <a href="GLAutoDrawable.html#setGLEventListenerInitState(com.jogamp.opengl.GLEventListener,boolean)">setGLEventListenerInitState</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.opengl.GLDrawable">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.opengl.<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></h3>
<code><a href="GLDrawable.html#getChosenGLCapabilities()">getChosenGLCapabilities</a>, <a href="GLDrawable.html#getGLProfile()">getGLProfile</a>, <a href="GLDrawable.html#getHandle()">getHandle</a>, <a href="GLDrawable.html#getNativeSurface()">getNativeSurface</a>, <a href="GLDrawable.html#getRequestedGLCapabilities()">getRequestedGLCapabilities</a>, <a href="GLDrawable.html#getSurfaceHeight()">getSurfaceHeight</a>, <a href="GLDrawable.html#getSurfaceWidth()">getSurfaceWidth</a>, <a href="GLDrawable.html#isGLOriented()">isGLOriented</a>, <a href="GLDrawable.html#isRealized()">isRealized</a>, <a href="GLDrawable.html#setRealized(boolean)">setRealized</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(com.jogamp.opengl.GLDrawable,com.jogamp.opengl.GLContext,java.lang.Object,boolean,com.jogamp.common.util.locks.RecursiveLock)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>GLAutoDrawableDelegate</h4>
<pre>public&nbsp;GLAutoDrawableDelegate&#8203;(<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;drawable,
                              <a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;context,
                              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;upstreamWidget,
                              boolean&nbsp;ownDevice,
                              <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink">RecursiveLock</a>&nbsp;lock)</pre>
<div class="block"><p>
 The <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> can be assigned later manually via <a href="GLAutoDrawable.html#setContext(com.jogamp.opengl.GLContext,boolean)"><code>setContext(ctx)</code></a>
 <i>or</i> it will be created <i>lazily</i> at the 1st <a href="GLAutoDrawable.html#display()"><code>display()</code></a> method call.<br>
 <i>Lazy</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> creation will take a shared <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> into account
 which has been set <code>directly</code>
 or <code>via another GLAutoDrawable</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>drawable</code> - a valid <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>, may not be <a href="GLDrawable.html#isRealized()"><code>realized</code></a> yet.</dd>
<dd><code>context</code> - a valid <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>,
                may not have been made current (created) yet,
                may not be associated w/ <code>drawable<code> yet,
                may be <code>null</code> for lazy initialization at 1st <a href="#display()"><code>display()</code></a>.</dd>
<dd><code>upstreamWidget</code> - optional UI element holding this instance, see <a href="#getUpstreamWidget()"><code>getUpstreamWidget()</code></a>.</dd>
<dd><code>ownDevice</code> - pass <code>true</code> if <a href="../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/AbstractGraphicsDevice.html?is-external=true#close()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>AbstractGraphicsDevice.close()</code></a> shall be issued,
                  otherwise pass <code>false</code>. Closing the device is required in case
                  the drawable is created w/ it's own new instance, e.g. offscreen drawables,
                  and no further lifecycle handling is applied.</dd>
<dd><code>lock</code> - optional custom <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink"><code>RecursiveLock</code></a>.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="windowRepaintOp()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>windowRepaintOp</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;windowRepaintOp()</pre>
<div class="block">Default implementation to handle repaint events from the windowing system</div>
</li>
</ul>
<a id="windowResizedOp(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>windowResizedOp</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;windowResizedOp&#8203;(int&nbsp;newWidth,
                                  int&nbsp;newHeight)</pre>
<div class="block">Handling resize events from the windowing system.
 <p>
 Implementation:
 <ul>
   <li>resizes <code>the GLDrawable</code>, if offscreen,</li>
   <li>triggers a pending <a href="GLEventListener.html#reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)"><code>reshape events</code></a>, and</li>
   <li>issues a <a href="#display()"><code>display()</code></a> call, if no animator is present.</li>
 </ul>
 </p>
 <p>
 All required locks are being claimed.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newWidth</code> - new width in pixel units</dd>
<dd><code>newWidth</code> - new height in pixel units</dd>
</dl>
</li>
</ul>
<a id="windowDestroyNotifyOp()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>windowDestroyNotifyOp</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;windowDestroyNotifyOp()</pre>
<div class="block">Implementation to handle destroy notifications from the windowing system.

 <p>
 If the <a href="../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface</code></a> does not implement <a href="../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/WindowClosingProtocol.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>WindowClosingProtocol</code></a>
 or <a href="../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/WindowClosingProtocol.WindowClosingMode.html?is-external=true#DISPOSE_ON_CLOSE" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>WindowClosingProtocol.WindowClosingMode.DISPOSE_ON_CLOSE</code></a> is enabled (default),
 a thread safe destruction is being induced.
 </p></div>
</li>
</ul>
<a id="getUpstreamLock()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getUpstreamLock</h4>
<pre class="methodSignature">public final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink">RecursiveLock</a>&nbsp;getUpstreamLock()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="GLAutoDrawable.html#getUpstreamLock()">GLAutoDrawable</a></code></span></div>
<div class="block">Returns the recursive lock object of the <a href="GLAutoDrawable.html#getUpstreamWidget()"><code>upstream widget</code></a>
 to synchronize multithreaded access on top of <a href="../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.lockSurface()</code></a>.
 <p>
 See <a href="#locking">GLAutoDrawable Locking</a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="GLAutoDrawable.html#getUpstreamLock()">getUpstreamLock</a></code>&nbsp;in interface&nbsp;<code><a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getUpstreamWidget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getUpstreamWidget</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;getUpstreamWidget()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="GLAutoDrawable.html#getUpstreamWidget()">GLAutoDrawable</a></code></span></div>
<div class="block">Method <i>may</i> return the upstream UI toolkit object
 holding this <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> instance, if exist.
 <p>
 Currently known Java UI toolkits and it's known return types are:

 <table border="1">
     <tr><td>Toolkit</td>  <td>GLAutoDrawable Implementation</td>            <td>~</td>      <td>Return Type of getUpstreamWidget()</td</tr>
     <tr><td>NEWT</td>     <td><code>GLWindow</code></td>  <td>has a</td>  <td><code>Window</code></td</tr>
     <tr><td>SWT</td>      <td><a href="swt/GLCanvas.html" title="class in com.jogamp.opengl.swt"><code>GLCanvas</code></a></td>   <td>is a</td>   <td><code>Canvas</code></td</tr>
     <tr><td>AWT</td>      <td><a href="awt/GLCanvas.html" title="class in com.jogamp.opengl.awt"><code>GLCanvas</code></a></td>  <td>is a</td>   <td><a href="http://docs.oracle.com/javase/6/docs/api/java/awt/Canvas.html?is-external=true" title="class or interface in java.awt" class="externalLink"><code>Canvas</code></a></td</tr>
     <tr><td>AWT</td>      <td><a href="awt/GLJPanel.html" title="class in com.jogamp.opengl.awt"><code>GLJPanel</code></a></td>  <td>is a</td>   <td><a href="http://docs.oracle.com/javase/6/docs/api/javax/swing/JPanel.html?is-external=true" title="class or interface in javax.swing" class="externalLink"><code>JPanel</code></a></td</tr>
 </table>
 However, the result may be other object types than the listed above
 due to new supported toolkits.
 </p>
 <p>
 This method may also return <code>null</code> if no UI toolkit is being used,
 as common for offscreen rendering.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="GLAutoDrawable.html#getUpstreamWidget()">getUpstreamWidget</a></code>&nbsp;in interface&nbsp;<code><a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="setUpstreamWidget(java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setUpstreamWidget</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setUpstreamWidget&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;newUpstreamWidget)</pre>
<div class="block">Set the upstream UI toolkit object.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getUpstreamWidget()"><code>getUpstreamWidget()</code></a></dd>
</dl>
</li>
</ul>
<a id="destroy()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>destroy</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;destroy()</pre>
<div class="block">Destroys all resources associated with this GLAutoDrawable,
      inclusive the GLContext.
      If a window is attached to it's implementation, it shall be closed.
      Causes disposing of all OpenGL resources
      by calling <a href="GLEventListener.html#dispose(com.jogamp.opengl.GLAutoDrawable)"><code>dispose(..)</code></a> for all
      registered <a href="GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s. Called automatically by the
      window system toolkit upon receiving a destroy notification. This
      routine may be called manually.
 <p>
 This implementation calls <code>GLAutoDrawableBase.defaultDestroy()</code>.
 </p>
 <p>
 User still needs to destroy the upstream window, which details are hidden from this aspect.
 This can be performed by overriding <a href="#destroyImplInLock()"><code>destroyImplInLock()</code></a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="GLAutoDrawable.html#destroy()">destroy</a></code>&nbsp;in interface&nbsp;<code><a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="display()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>display</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;display()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="GLAutoDrawable.html#display()">GLAutoDrawable</a></code></span></div>
<div class="block"><p>
 Causes OpenGL rendering to be performed for this GLAutoDrawable
 in the following order:
 <ul>
     <li> Calling <a href="GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a> for all
          registered <a href="GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s. </li>
     <li> Executes all one-shot <a href="GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>,
          enqueued via <a href="GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>GLAutoDrawable.invoke(boolean, GLRunnable)</code></a>.</li>
 </ul></p>
 <p>
 May be called periodically by a running <a href="GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> implementation,<br>
 which must register itself with <a href="GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)"><code>GLAutoDrawable.setAnimator(com.jogamp.opengl.GLAnimatorControl)</code></a>.</p>
 <p>
 Called automatically by the window system toolkit upon receiving a repaint() request, <br>
 except an <a href="GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> implementation <a href="GLAnimatorControl.html#isAnimating()"><code>GLAnimatorControl.isAnimating()</code></a>.</p>
 <p>
 This routine may also be called manually for better control over the
 rendering process. It is legal to call another GLAutoDrawable's
 display method from within the <a href="GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a> callback.</p>
 <p>
 In case of a new generated OpenGL context,
 the implementation shall call <a href="GLEventListener.html#init(com.jogamp.opengl.GLAutoDrawable)"><code>init(..)</code></a> for all
 registered <a href="GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s <i>before</i> making the
 actual <a href="GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a> calls,
 in case this has not been done yet.</p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="GLAutoDrawable.html#display()">display</a></code>&nbsp;in interface&nbsp;<code><a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)"><code>GLAutoDrawable.setAnimator(com.jogamp.opengl.GLAnimatorControl)</code></a></dd>
</dl>
</li>
</ul>
<a id="getFactory()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFactory</h4>
<pre class="methodSignature">public final&nbsp;<a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a>&nbsp;getFactory()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="GLDrawable.html#getFactory()">GLDrawable</a></code></span></div>
<div class="block">Return the <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> being used to create this instance.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="GLDrawable.html#getFactory()">getFactory</a></code>&nbsp;in interface&nbsp;<code><a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="swapBuffers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>swapBuffers</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;swapBuffers()
                       throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="GLDrawable.html#swapBuffers()">GLDrawable</a></code></span></div>
<div class="block">Swaps the front and back buffers of this drawable. For <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> implementations, when automatic buffer swapping
      is enabled (as is the default), this method is called
      automatically and should not be called by the end user.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="GLDrawable.html#swapBuffers()">swapBuffers</a></code>&nbsp;in interface&nbsp;<code><a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code></dd>
</dl>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="GLDrawable.html#toString()">toString</a></code>&nbsp;in interface&nbsp;<code><a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>jogamp.opengl.GLAutoDrawableBase</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLAutoDrawableDelegate.html" target="_top">Frames</a></li>
<li><a href="GLAutoDrawableDelegate.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
