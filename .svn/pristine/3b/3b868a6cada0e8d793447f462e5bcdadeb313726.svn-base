<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:28:57 CET 2023 -->
<title>JavaLexer (GlueGen Runtime Documentation)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="JavaLexer (GlueGen Runtime Documentation)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":10,"i36":10,"i37":10,"i38":10,"i39":10,"i40":10,"i41":10,"i42":10,"i43":10,"i44":10,"i45":10,"i46":10,"i47":10,"i48":10,"i49":10,"i50":10,"i51":10,"i52":10,"i53":10,"i54":10,"i55":10,"i56":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/gluegen/jgram/JavaLexer.html" target="_top">Frames</a></li>
<li><a href="JavaLexer.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.gluegen.jgram</a></div>
<h2 title="Class JavaLexer" class="title">Class JavaLexer</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>antlr.CharScanner</li>
<li>
<ul class="inheritance">
<li>com.jogamp.gluegen.jgram.JavaLexer</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><code>antlr.TokenStream</code>, <code><a href="JavaTokenTypes.html" title="interface in com.jogamp.gluegen.jgram">JavaTokenTypes</a></code></dd>
</dl>
<hr>
<pre>public class <span class="typeNameLabel">JavaLexer</span>
extends antlr.CharScanner
implements <a href="JavaTokenTypes.html" title="interface in com.jogamp.gluegen.jgram">JavaTokenTypes</a>, antlr.TokenStream</pre>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_0">_tokenSet_0</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_1">_tokenSet_1</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_2">_tokenSet_2</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_3">_tokenSet_3</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_4">_tokenSet_4</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_5">_tokenSet_5</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.antlr.CharScanner">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;antlr.CharScanner</h3>
<code>_returnToken, caseSensitive, caseSensitiveLiterals, commitToPath, EOF_CHAR, hashString, inputState, literals, saveConsumedInput, tabsize, text, tokenObjectClass, traceDepth</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.jogamp.gluegen.jgram.JavaTokenTypes">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;com.jogamp.gluegen.jgram.<a href="JavaTokenTypes.html" title="interface in com.jogamp.gluegen.jgram">JavaTokenTypes</a></h3>
<code><a href="JavaTokenTypes.html#ABSTRACT">ABSTRACT</a>, <a href="JavaTokenTypes.html#ARRAY_DECLARATOR">ARRAY_DECLARATOR</a>, <a href="JavaTokenTypes.html#ARRAY_INIT">ARRAY_INIT</a>, <a href="JavaTokenTypes.html#ASSIGN">ASSIGN</a>, <a href="JavaTokenTypes.html#BAND">BAND</a>, <a href="JavaTokenTypes.html#BAND_ASSIGN">BAND_ASSIGN</a>, <a href="JavaTokenTypes.html#BLOCK">BLOCK</a>, <a href="JavaTokenTypes.html#BNOT">BNOT</a>, <a href="JavaTokenTypes.html#BOR">BOR</a>, <a href="JavaTokenTypes.html#BOR_ASSIGN">BOR_ASSIGN</a>, <a href="JavaTokenTypes.html#BSR">BSR</a>, <a href="JavaTokenTypes.html#BSR_ASSIGN">BSR_ASSIGN</a>, <a href="JavaTokenTypes.html#BXOR">BXOR</a>, <a href="JavaTokenTypes.html#BXOR_ASSIGN">BXOR_ASSIGN</a>, <a href="JavaTokenTypes.html#CASE_GROUP">CASE_GROUP</a>, <a href="JavaTokenTypes.html#CHAR_LITERAL">CHAR_LITERAL</a>, <a href="JavaTokenTypes.html#CLASS_DEF">CLASS_DEF</a>, <a href="JavaTokenTypes.html#COLON">COLON</a>, <a href="JavaTokenTypes.html#COMMA">COMMA</a>, <a href="JavaTokenTypes.html#CTOR_CALL">CTOR_CALL</a>, <a href="JavaTokenTypes.html#CTOR_DEF">CTOR_DEF</a>, <a href="JavaTokenTypes.html#DEC">DEC</a>, <a href="JavaTokenTypes.html#DIV">DIV</a>, <a href="JavaTokenTypes.html#DIV_ASSIGN">DIV_ASSIGN</a>, <a href="JavaTokenTypes.html#DOT">DOT</a>, <a href="JavaTokenTypes.html#ELIST">ELIST</a>, <a href="JavaTokenTypes.html#EMPTY_STAT">EMPTY_STAT</a>, <a href="JavaTokenTypes.html#EOF">EOF</a>, <a href="JavaTokenTypes.html#EQUAL">EQUAL</a>, <a href="JavaTokenTypes.html#ESC">ESC</a>, <a href="JavaTokenTypes.html#EXPONENT">EXPONENT</a>, <a href="JavaTokenTypes.html#EXPR">EXPR</a>, <a href="JavaTokenTypes.html#EXTENDS_CLAUSE">EXTENDS_CLAUSE</a>, <a href="JavaTokenTypes.html#FINAL">FINAL</a>, <a href="JavaTokenTypes.html#FLOAT_SUFFIX">FLOAT_SUFFIX</a>, <a href="JavaTokenTypes.html#FOR_CONDITION">FOR_CONDITION</a>, <a href="JavaTokenTypes.html#FOR_INIT">FOR_INIT</a>, <a href="JavaTokenTypes.html#FOR_ITERATOR">FOR_ITERATOR</a>, <a href="JavaTokenTypes.html#GE">GE</a>, <a href="JavaTokenTypes.html#GT">GT</a>, <a href="JavaTokenTypes.html#HEX_DIGIT">HEX_DIGIT</a>, <a href="JavaTokenTypes.html#IDENT">IDENT</a>, <a href="JavaTokenTypes.html#IMPLEMENTS_CLAUSE">IMPLEMENTS_CLAUSE</a>, <a href="JavaTokenTypes.html#IMPORT">IMPORT</a>, <a href="JavaTokenTypes.html#INC">INC</a>, <a href="JavaTokenTypes.html#INDEX_OP">INDEX_OP</a>, <a href="JavaTokenTypes.html#INSTANCE_INIT">INSTANCE_INIT</a>, <a href="JavaTokenTypes.html#INTERFACE_DEF">INTERFACE_DEF</a>, <a href="JavaTokenTypes.html#LABELED_STAT">LABELED_STAT</a>, <a href="JavaTokenTypes.html#LAND">LAND</a>, <a href="JavaTokenTypes.html#LBRACK">LBRACK</a>, <a href="JavaTokenTypes.html#LCURLY">LCURLY</a>, <a href="JavaTokenTypes.html#LE">LE</a>, <a href="JavaTokenTypes.html#LITERAL_boolean">LITERAL_boolean</a>, <a href="JavaTokenTypes.html#LITERAL_break">LITERAL_break</a>, <a href="JavaTokenTypes.html#LITERAL_byte">LITERAL_byte</a>, <a href="JavaTokenTypes.html#LITERAL_case">LITERAL_case</a>, <a href="JavaTokenTypes.html#LITERAL_catch">LITERAL_catch</a>, <a href="JavaTokenTypes.html#LITERAL_char">LITERAL_char</a>, <a href="JavaTokenTypes.html#LITERAL_class">LITERAL_class</a>, <a href="JavaTokenTypes.html#LITERAL_continue">LITERAL_continue</a>, <a href="JavaTokenTypes.html#LITERAL_default">LITERAL_default</a>, <a href="JavaTokenTypes.html#LITERAL_do">LITERAL_do</a>, <a href="JavaTokenTypes.html#LITERAL_double">LITERAL_double</a>, <a href="JavaTokenTypes.html#LITERAL_else">LITERAL_else</a>, <a href="JavaTokenTypes.html#LITERAL_extends">LITERAL_extends</a>, <a href="JavaTokenTypes.html#LITERAL_false">LITERAL_false</a>, <a href="JavaTokenTypes.html#LITERAL_finally">LITERAL_finally</a>, <a href="JavaTokenTypes.html#LITERAL_float">LITERAL_float</a>, <a href="JavaTokenTypes.html#LITERAL_for">LITERAL_for</a>, <a href="JavaTokenTypes.html#LITERAL_if">LITERAL_if</a>, <a href="JavaTokenTypes.html#LITERAL_implements">LITERAL_implements</a>, <a href="JavaTokenTypes.html#LITERAL_import">LITERAL_import</a>, <a href="JavaTokenTypes.html#LITERAL_instanceof">LITERAL_instanceof</a>, <a href="JavaTokenTypes.html#LITERAL_int">LITERAL_int</a>, <a href="JavaTokenTypes.html#LITERAL_interface">LITERAL_interface</a>, <a href="JavaTokenTypes.html#LITERAL_long">LITERAL_long</a>, <a href="JavaTokenTypes.html#LITERAL_native">LITERAL_native</a>, <a href="JavaTokenTypes.html#LITERAL_new">LITERAL_new</a>, <a href="JavaTokenTypes.html#LITERAL_null">LITERAL_null</a>, <a href="JavaTokenTypes.html#LITERAL_package">LITERAL_package</a>, <a href="JavaTokenTypes.html#LITERAL_private">LITERAL_private</a>, <a href="JavaTokenTypes.html#LITERAL_protected">LITERAL_protected</a>, <a href="JavaTokenTypes.html#LITERAL_public">LITERAL_public</a>, <a href="JavaTokenTypes.html#LITERAL_return">LITERAL_return</a>, <a href="JavaTokenTypes.html#LITERAL_short">LITERAL_short</a>, <a href="JavaTokenTypes.html#LITERAL_static">LITERAL_static</a>, <a href="JavaTokenTypes.html#LITERAL_super">LITERAL_super</a>, <a href="JavaTokenTypes.html#LITERAL_switch">LITERAL_switch</a>, <a href="JavaTokenTypes.html#LITERAL_synchronized">LITERAL_synchronized</a>, <a href="JavaTokenTypes.html#LITERAL_this">LITERAL_this</a>, <a href="JavaTokenTypes.html#LITERAL_threadsafe">LITERAL_threadsafe</a>, <a href="JavaTokenTypes.html#LITERAL_throw">LITERAL_throw</a>, <a href="JavaTokenTypes.html#LITERAL_throws">LITERAL_throws</a>, <a href="JavaTokenTypes.html#LITERAL_transient">LITERAL_transient</a>, <a href="JavaTokenTypes.html#LITERAL_true">LITERAL_true</a>, <a href="JavaTokenTypes.html#LITERAL_try">LITERAL_try</a>, <a href="JavaTokenTypes.html#LITERAL_void">LITERAL_void</a>, <a href="JavaTokenTypes.html#LITERAL_volatile">LITERAL_volatile</a>, <a href="JavaTokenTypes.html#LITERAL_while">LITERAL_while</a>, <a href="JavaTokenTypes.html#LNOT">LNOT</a>, <a href="JavaTokenTypes.html#LOR">LOR</a>, <a href="JavaTokenTypes.html#LPAREN">LPAREN</a>, <a href="JavaTokenTypes.html#LT">LT</a>, <a href="JavaTokenTypes.html#METHOD_CALL">METHOD_CALL</a>, <a href="JavaTokenTypes.html#METHOD_DEF">METHOD_DEF</a>, <a href="JavaTokenTypes.html#MINUS">MINUS</a>, <a href="JavaTokenTypes.html#MINUS_ASSIGN">MINUS_ASSIGN</a>, <a href="JavaTokenTypes.html#ML_COMMENT">ML_COMMENT</a>, <a href="JavaTokenTypes.html#MOD">MOD</a>, <a href="JavaTokenTypes.html#MOD_ASSIGN">MOD_ASSIGN</a>, <a href="JavaTokenTypes.html#MODIFIERS">MODIFIERS</a>, <a href="JavaTokenTypes.html#NOT_EQUAL">NOT_EQUAL</a>, <a href="JavaTokenTypes.html#NULL_TREE_LOOKAHEAD">NULL_TREE_LOOKAHEAD</a>, <a href="JavaTokenTypes.html#NUM_DOUBLE">NUM_DOUBLE</a>, <a href="JavaTokenTypes.html#NUM_FLOAT">NUM_FLOAT</a>, <a href="JavaTokenTypes.html#NUM_INT">NUM_INT</a>, <a href="JavaTokenTypes.html#NUM_LONG">NUM_LONG</a>, <a href="JavaTokenTypes.html#OBJBLOCK">OBJBLOCK</a>, <a href="JavaTokenTypes.html#PACKAGE_DEF">PACKAGE_DEF</a>, <a href="JavaTokenTypes.html#PARAMETER_DEF">PARAMETER_DEF</a>, <a href="JavaTokenTypes.html#PARAMETERS">PARAMETERS</a>, <a href="JavaTokenTypes.html#PLUS">PLUS</a>, <a href="JavaTokenTypes.html#PLUS_ASSIGN">PLUS_ASSIGN</a>, <a href="JavaTokenTypes.html#POST_DEC">POST_DEC</a>, <a href="JavaTokenTypes.html#POST_INC">POST_INC</a>, <a href="JavaTokenTypes.html#QUESTION">QUESTION</a>, <a href="JavaTokenTypes.html#RBRACK">RBRACK</a>, <a href="JavaTokenTypes.html#RCURLY">RCURLY</a>, <a href="JavaTokenTypes.html#RPAREN">RPAREN</a>, <a href="JavaTokenTypes.html#SEMI">SEMI</a>, <a href="JavaTokenTypes.html#SL">SL</a>, <a href="JavaTokenTypes.html#SL_ASSIGN">SL_ASSIGN</a>, <a href="JavaTokenTypes.html#SL_COMMENT">SL_COMMENT</a>, <a href="JavaTokenTypes.html#SLIST">SLIST</a>, <a href="JavaTokenTypes.html#SR">SR</a>, <a href="JavaTokenTypes.html#SR_ASSIGN">SR_ASSIGN</a>, <a href="JavaTokenTypes.html#STAR">STAR</a>, <a href="JavaTokenTypes.html#STAR_ASSIGN">STAR_ASSIGN</a>, <a href="JavaTokenTypes.html#STATIC_INIT">STATIC_INIT</a>, <a href="JavaTokenTypes.html#STRICTFP">STRICTFP</a>, <a href="JavaTokenTypes.html#STRING_LITERAL">STRING_LITERAL</a>, <a href="JavaTokenTypes.html#SUPER_CTOR_CALL">SUPER_CTOR_CALL</a>, <a href="JavaTokenTypes.html#TYPE">TYPE</a>, <a href="JavaTokenTypes.html#TYPECAST">TYPECAST</a>, <a href="JavaTokenTypes.html#UNARY_MINUS">UNARY_MINUS</a>, <a href="JavaTokenTypes.html#UNARY_PLUS">UNARY_PLUS</a>, <a href="JavaTokenTypes.html#VARIABLE_DEF">VARIABLE_DEF</a>, <a href="JavaTokenTypes.html#WS">WS</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(antlr.InputBuffer)">JavaLexer</a></span>&#8203;(antlr.InputBuffer&nbsp;ib)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(antlr.LexerSharedInputState)">JavaLexer</a></span>&#8203;(antlr.LexerSharedInputState&nbsp;state)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(java.io.InputStream)">JavaLexer</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io" class="externalLink">InputStream</a>&nbsp;in)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(java.io.Reader)">JavaLexer</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io" class="externalLink">Reader</a>&nbsp;in)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mASSIGN(boolean)">mASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mBAND(boolean)">mBAND</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mBAND_ASSIGN(boolean)">mBAND_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mBNOT(boolean)">mBNOT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mBOR(boolean)">mBOR</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mBOR_ASSIGN(boolean)">mBOR_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mBSR(boolean)">mBSR</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mBSR_ASSIGN(boolean)">mBSR_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mBXOR(boolean)">mBXOR</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mBXOR_ASSIGN(boolean)">mBXOR_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mCHAR_LITERAL(boolean)">mCHAR_LITERAL</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mCOLON(boolean)">mCOLON</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mCOMMA(boolean)">mCOMMA</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mDEC(boolean)">mDEC</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mDIV(boolean)">mDIV</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mDIV_ASSIGN(boolean)">mDIV_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mEQUAL(boolean)">mEQUAL</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mESC(boolean)">mESC</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mEXPONENT(boolean)">mEXPONENT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mFLOAT_SUFFIX(boolean)">mFLOAT_SUFFIX</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mGE(boolean)">mGE</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mGT(boolean)">mGT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mHEX_DIGIT(boolean)">mHEX_DIGIT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mIDENT(boolean)">mIDENT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mINC(boolean)">mINC</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mLAND(boolean)">mLAND</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mLBRACK(boolean)">mLBRACK</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mLCURLY(boolean)">mLCURLY</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mLE(boolean)">mLE</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mLNOT(boolean)">mLNOT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mLOR(boolean)">mLOR</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mLPAREN(boolean)">mLPAREN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mLT(boolean)">mLT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mMINUS(boolean)">mMINUS</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mMINUS_ASSIGN(boolean)">mMINUS_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mML_COMMENT(boolean)">mML_COMMENT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mMOD(boolean)">mMOD</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mMOD_ASSIGN(boolean)">mMOD_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mNOT_EQUAL(boolean)">mNOT_EQUAL</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mNUM_INT(boolean)">mNUM_INT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mPLUS(boolean)">mPLUS</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mPLUS_ASSIGN(boolean)">mPLUS_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mQUESTION(boolean)">mQUESTION</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mRBRACK(boolean)">mRBRACK</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mRCURLY(boolean)">mRCURLY</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mRPAREN(boolean)">mRPAREN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mSEMI(boolean)">mSEMI</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mSL(boolean)">mSL</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mSL_ASSIGN(boolean)">mSL_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mSL_COMMENT(boolean)">mSL_COMMENT</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i50" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mSR(boolean)">mSR</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i51" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mSR_ASSIGN(boolean)">mSR_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i52" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mSTAR(boolean)">mSTAR</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i53" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mSTAR_ASSIGN(boolean)">mSTAR_ASSIGN</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i54" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mSTRING_LITERAL(boolean)">mSTRING_LITERAL</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i55" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mWS(boolean)">mWS</a></span>&#8203;(boolean&nbsp;_createToken)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i56" class="altColor">
<td class="colFirst"><code>antlr.Token</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#nextToken()">nextToken</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.antlr.CharScanner">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;antlr.CharScanner</h3>
<code>append, append, commit, consume, consumeUntil, consumeUntil, getCaseSensitive, getCaseSensitiveLiterals, getColumn, getCommitToPath, getFilename, getInputBuffer, getInputState, getLine, getTabSize, getText, getTokenObject, LA, makeToken, mark, match, match, match, matchNot, matchRange, newline, panic, panic, reportError, reportError, reportWarning, resetText, rewind, setCaseSensitive, setColumn, setCommitToPath, setFilename, setInputState, setLine, setTabSize, setText, setTokenObjectClass, tab, testLiteralsTable, testLiteralsTable, toLower, traceIn, traceIndent, traceOut, uponEOF</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang" class="externalLink">clone</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang" class="externalLink">finalize</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="_tokenSet_0">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenSet_0</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_0</pre>
</li>
</ul>
<a id="_tokenSet_1">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenSet_1</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_1</pre>
</li>
</ul>
<a id="_tokenSet_2">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenSet_2</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_2</pre>
</li>
</ul>
<a id="_tokenSet_3">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenSet_3</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_3</pre>
</li>
</ul>
<a id="_tokenSet_4">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenSet_4</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_4</pre>
</li>
</ul>
<a id="_tokenSet_5">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>_tokenSet_5</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_5</pre>
</li>
</ul>
</li>
</ul>
</section>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(java.io.InputStream)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>JavaLexer</h4>
<pre>public&nbsp;JavaLexer&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io" class="externalLink">InputStream</a>&nbsp;in)</pre>
</li>
</ul>
<a id="&lt;init&gt;(java.io.Reader)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>JavaLexer</h4>
<pre>public&nbsp;JavaLexer&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io" class="externalLink">Reader</a>&nbsp;in)</pre>
</li>
</ul>
<a id="&lt;init&gt;(antlr.InputBuffer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>JavaLexer</h4>
<pre>public&nbsp;JavaLexer&#8203;(antlr.InputBuffer&nbsp;ib)</pre>
</li>
</ul>
<a id="&lt;init&gt;(antlr.LexerSharedInputState)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>JavaLexer</h4>
<pre>public&nbsp;JavaLexer&#8203;(antlr.LexerSharedInputState&nbsp;state)</pre>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="nextToken()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>nextToken</h4>
<pre class="methodSignature">public&nbsp;antlr.Token&nbsp;nextToken()
                      throws antlr.TokenStreamException</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>nextToken</code>&nbsp;in interface&nbsp;<code>antlr.TokenStream</code></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mQUESTION(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mQUESTION</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mQUESTION&#8203;(boolean&nbsp;_createToken)
                     throws antlr.RecognitionException,
                            antlr.CharStreamException,
                            antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mLPAREN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mLPAREN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mLPAREN&#8203;(boolean&nbsp;_createToken)
                   throws antlr.RecognitionException,
                          antlr.CharStreamException,
                          antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mRPAREN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mRPAREN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mRPAREN&#8203;(boolean&nbsp;_createToken)
                   throws antlr.RecognitionException,
                          antlr.CharStreamException,
                          antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mLBRACK(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mLBRACK</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mLBRACK&#8203;(boolean&nbsp;_createToken)
                   throws antlr.RecognitionException,
                          antlr.CharStreamException,
                          antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mRBRACK(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mRBRACK</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mRBRACK&#8203;(boolean&nbsp;_createToken)
                   throws antlr.RecognitionException,
                          antlr.CharStreamException,
                          antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mLCURLY(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mLCURLY</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mLCURLY&#8203;(boolean&nbsp;_createToken)
                   throws antlr.RecognitionException,
                          antlr.CharStreamException,
                          antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mRCURLY(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mRCURLY</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mRCURLY&#8203;(boolean&nbsp;_createToken)
                   throws antlr.RecognitionException,
                          antlr.CharStreamException,
                          antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mCOLON(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mCOLON</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mCOLON&#8203;(boolean&nbsp;_createToken)
                  throws antlr.RecognitionException,
                         antlr.CharStreamException,
                         antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mCOMMA(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mCOMMA</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mCOMMA&#8203;(boolean&nbsp;_createToken)
                  throws antlr.RecognitionException,
                         antlr.CharStreamException,
                         antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mASSIGN&#8203;(boolean&nbsp;_createToken)
                   throws antlr.RecognitionException,
                          antlr.CharStreamException,
                          antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mEQUAL(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mEQUAL</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mEQUAL&#8203;(boolean&nbsp;_createToken)
                  throws antlr.RecognitionException,
                         antlr.CharStreamException,
                         antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mLNOT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mLNOT</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mLNOT&#8203;(boolean&nbsp;_createToken)
                 throws antlr.RecognitionException,
                        antlr.CharStreamException,
                        antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mBNOT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mBNOT</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mBNOT&#8203;(boolean&nbsp;_createToken)
                 throws antlr.RecognitionException,
                        antlr.CharStreamException,
                        antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mNOT_EQUAL(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mNOT_EQUAL</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mNOT_EQUAL&#8203;(boolean&nbsp;_createToken)
                      throws antlr.RecognitionException,
                             antlr.CharStreamException,
                             antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mDIV(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mDIV</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mDIV&#8203;(boolean&nbsp;_createToken)
                throws antlr.RecognitionException,
                       antlr.CharStreamException,
                       antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mDIV_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mDIV_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mDIV_ASSIGN&#8203;(boolean&nbsp;_createToken)
                       throws antlr.RecognitionException,
                              antlr.CharStreamException,
                              antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mPLUS(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mPLUS</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mPLUS&#8203;(boolean&nbsp;_createToken)
                 throws antlr.RecognitionException,
                        antlr.CharStreamException,
                        antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mPLUS_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mPLUS_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mPLUS_ASSIGN&#8203;(boolean&nbsp;_createToken)
                        throws antlr.RecognitionException,
                               antlr.CharStreamException,
                               antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mINC(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mINC</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mINC&#8203;(boolean&nbsp;_createToken)
                throws antlr.RecognitionException,
                       antlr.CharStreamException,
                       antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mMINUS(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mMINUS</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mMINUS&#8203;(boolean&nbsp;_createToken)
                  throws antlr.RecognitionException,
                         antlr.CharStreamException,
                         antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mMINUS_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mMINUS_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mMINUS_ASSIGN&#8203;(boolean&nbsp;_createToken)
                         throws antlr.RecognitionException,
                                antlr.CharStreamException,
                                antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mDEC(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mDEC</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mDEC&#8203;(boolean&nbsp;_createToken)
                throws antlr.RecognitionException,
                       antlr.CharStreamException,
                       antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mSTAR(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mSTAR</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mSTAR&#8203;(boolean&nbsp;_createToken)
                 throws antlr.RecognitionException,
                        antlr.CharStreamException,
                        antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mSTAR_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mSTAR_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mSTAR_ASSIGN&#8203;(boolean&nbsp;_createToken)
                        throws antlr.RecognitionException,
                               antlr.CharStreamException,
                               antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mMOD(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mMOD</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mMOD&#8203;(boolean&nbsp;_createToken)
                throws antlr.RecognitionException,
                       antlr.CharStreamException,
                       antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mMOD_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mMOD_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mMOD_ASSIGN&#8203;(boolean&nbsp;_createToken)
                       throws antlr.RecognitionException,
                              antlr.CharStreamException,
                              antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mSR(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mSR</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mSR&#8203;(boolean&nbsp;_createToken)
               throws antlr.RecognitionException,
                      antlr.CharStreamException,
                      antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mSR_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mSR_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mSR_ASSIGN&#8203;(boolean&nbsp;_createToken)
                      throws antlr.RecognitionException,
                             antlr.CharStreamException,
                             antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mBSR(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mBSR</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mBSR&#8203;(boolean&nbsp;_createToken)
                throws antlr.RecognitionException,
                       antlr.CharStreamException,
                       antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mBSR_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mBSR_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mBSR_ASSIGN&#8203;(boolean&nbsp;_createToken)
                       throws antlr.RecognitionException,
                              antlr.CharStreamException,
                              antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mGE(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mGE</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mGE&#8203;(boolean&nbsp;_createToken)
               throws antlr.RecognitionException,
                      antlr.CharStreamException,
                      antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mGT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mGT</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mGT&#8203;(boolean&nbsp;_createToken)
               throws antlr.RecognitionException,
                      antlr.CharStreamException,
                      antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mSL(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mSL</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mSL&#8203;(boolean&nbsp;_createToken)
               throws antlr.RecognitionException,
                      antlr.CharStreamException,
                      antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mSL_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mSL_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mSL_ASSIGN&#8203;(boolean&nbsp;_createToken)
                      throws antlr.RecognitionException,
                             antlr.CharStreamException,
                             antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mLE(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mLE</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mLE&#8203;(boolean&nbsp;_createToken)
               throws antlr.RecognitionException,
                      antlr.CharStreamException,
                      antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mLT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mLT</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mLT&#8203;(boolean&nbsp;_createToken)
               throws antlr.RecognitionException,
                      antlr.CharStreamException,
                      antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mBXOR(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mBXOR</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mBXOR&#8203;(boolean&nbsp;_createToken)
                 throws antlr.RecognitionException,
                        antlr.CharStreamException,
                        antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mBXOR_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mBXOR_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mBXOR_ASSIGN&#8203;(boolean&nbsp;_createToken)
                        throws antlr.RecognitionException,
                               antlr.CharStreamException,
                               antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mBOR(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mBOR</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mBOR&#8203;(boolean&nbsp;_createToken)
                throws antlr.RecognitionException,
                       antlr.CharStreamException,
                       antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mBOR_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mBOR_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mBOR_ASSIGN&#8203;(boolean&nbsp;_createToken)
                       throws antlr.RecognitionException,
                              antlr.CharStreamException,
                              antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mLOR(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mLOR</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mLOR&#8203;(boolean&nbsp;_createToken)
                throws antlr.RecognitionException,
                       antlr.CharStreamException,
                       antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mBAND(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mBAND</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mBAND&#8203;(boolean&nbsp;_createToken)
                 throws antlr.RecognitionException,
                        antlr.CharStreamException,
                        antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mBAND_ASSIGN(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mBAND_ASSIGN</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mBAND_ASSIGN&#8203;(boolean&nbsp;_createToken)
                        throws antlr.RecognitionException,
                               antlr.CharStreamException,
                               antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mLAND(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mLAND</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mLAND&#8203;(boolean&nbsp;_createToken)
                 throws antlr.RecognitionException,
                        antlr.CharStreamException,
                        antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mSEMI(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mSEMI</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mSEMI&#8203;(boolean&nbsp;_createToken)
                 throws antlr.RecognitionException,
                        antlr.CharStreamException,
                        antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mWS(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mWS</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mWS&#8203;(boolean&nbsp;_createToken)
               throws antlr.RecognitionException,
                      antlr.CharStreamException,
                      antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mSL_COMMENT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mSL_COMMENT</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mSL_COMMENT&#8203;(boolean&nbsp;_createToken)
                       throws antlr.RecognitionException,
                              antlr.CharStreamException,
                              antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mML_COMMENT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mML_COMMENT</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mML_COMMENT&#8203;(boolean&nbsp;_createToken)
                       throws antlr.RecognitionException,
                              antlr.CharStreamException,
                              antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mCHAR_LITERAL(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mCHAR_LITERAL</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mCHAR_LITERAL&#8203;(boolean&nbsp;_createToken)
                         throws antlr.RecognitionException,
                                antlr.CharStreamException,
                                antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mESC(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mESC</h4>
<pre class="methodSignature">protected final&nbsp;void&nbsp;mESC&#8203;(boolean&nbsp;_createToken)
                   throws antlr.RecognitionException,
                          antlr.CharStreamException,
                          antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mSTRING_LITERAL(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mSTRING_LITERAL</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mSTRING_LITERAL&#8203;(boolean&nbsp;_createToken)
                           throws antlr.RecognitionException,
                                  antlr.CharStreamException,
                                  antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mHEX_DIGIT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mHEX_DIGIT</h4>
<pre class="methodSignature">protected final&nbsp;void&nbsp;mHEX_DIGIT&#8203;(boolean&nbsp;_createToken)
                         throws antlr.RecognitionException,
                                antlr.CharStreamException,
                                antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mIDENT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mIDENT</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mIDENT&#8203;(boolean&nbsp;_createToken)
                  throws antlr.RecognitionException,
                         antlr.CharStreamException,
                         antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mNUM_INT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mNUM_INT</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mNUM_INT&#8203;(boolean&nbsp;_createToken)
                    throws antlr.RecognitionException,
                           antlr.CharStreamException,
                           antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mEXPONENT(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mEXPONENT</h4>
<pre class="methodSignature">protected final&nbsp;void&nbsp;mEXPONENT&#8203;(boolean&nbsp;_createToken)
                        throws antlr.RecognitionException,
                               antlr.CharStreamException,
                               antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
<a id="mFLOAT_SUFFIX(boolean)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>mFLOAT_SUFFIX</h4>
<pre class="methodSignature">protected final&nbsp;void&nbsp;mFLOAT_SUFFIX&#8203;(boolean&nbsp;_createToken)
                            throws antlr.RecognitionException,
                                   antlr.CharStreamException,
                                   antlr.TokenStreamException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
<dd><code>antlr.CharStreamException</code></dd>
<dd><code>antlr.TokenStreamException</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/gluegen/jgram/JavaLexer.html" target="_top">Frames</a></li>
<li><a href="JavaLexer.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</body>
</html>
