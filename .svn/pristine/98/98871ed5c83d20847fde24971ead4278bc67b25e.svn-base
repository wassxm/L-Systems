<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:28:57 CET 2023 -->
<title>MethodBinding (GlueGen Runtime Documentation)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="MethodBinding (GlueGen Runtime Documentation)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":10,"i36":10,"i37":10,"i38":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/gluegen/MethodBinding.html" target="_top">Frames</a></li>
<li><a href="MethodBinding.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.gluegen</a></div>
<h2 title="Class MethodBinding" class="title">Class MethodBinding</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.gluegen.MethodBinding</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public class <span class="typeNameLabel">MethodBinding</span>
extends <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Represents the binding of a C function to a Java method. Also used
    to represent calls through function pointers contained in
    structs.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(com.jogamp.gluegen.cgram.types.FunctionSymbol,java.lang.String,com.jogamp.gluegen.JavaType,java.util.List,com.jogamp.gluegen.JavaType,com.jogamp.gluegen.cgram.types.Type)">MethodBinding</a></span>&#8203;(<a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types">FunctionSymbol</a>&nbsp;sym,
             <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;delegationImplName,
             <a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;javaReturnType,
             <a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&gt;&nbsp;javaArgumentTypes,
             <a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;containingType,
             <a href="cgram/types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;containingCType)</code></th>
<td class="colLast">
<div class="block">Constructor for calling a C function or a function pointer contained in a struct.</div>
</td>
</tr>
<tr class="rowColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(com.jogamp.gluegen.MethodBinding)">MethodBinding</a></span>&#8203;(<a href="MethodBinding.html" title="class in com.jogamp.gluegen">MethodBinding</a>&nbsp;bindingToCopy)</code></th>
<td class="colLast">
<div class="block">Constructs a new MethodBinding that is an exact clone of the
 argument, including the java return type and java argument
 types.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addJavaArgumentType(com.jogamp.gluegen.JavaType)">addJavaArgumentType</a></span>&#8203;(<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;type)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#argumentsUseNIO()">argumentsUseNIO</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if any of the outgoing arguments in the method's
 signature require conversion or checking due to the use of New
 I/O.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#clearThisPointer()">clearThisPointer</a></span>()</code></th>
<td class="colLast">
<div class="block">Clears any record of a this pointer for this MethodBinding.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#computeSignatureProperties()">computeSignatureProperties</a></span>()</code></th>
<td class="colLast">
<div class="block">Computes summary information about the method's C and Java
 signatures.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#equals(java.lang.Object)">equals</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;obj)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>protected <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#erasedTypeDescriptor(com.jogamp.gluegen.JavaType,boolean,boolean)">erasedTypeDescriptor</a></span>&#8203;(<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;type,
                    boolean&nbsp;eraseBufferAndArrayTypes,
                    boolean&nbsp;skipBuffers)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#findThisPointer()">findThisPointer</a></span>()</code></th>
<td class="colLast">
<div class="block">Find the leftmost argument matching the type of the containing
      type (for function pointer MethodBindings) and record that as a
      "this" pointer, meaning that it does not need to be explicitly
      passed at the Java level.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getArgumentName(int)">getArgumentName</a></span>&#8203;(int&nbsp;i)</code></th>
<td class="colLast">
<div class="block">Returns either the argument name specified by the underlying
    FunctionSymbol or a fabricated argument name based on the
    position.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code><a href="cgram/types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getCArgumentType(int)">getCArgumentType</a></span>&#8203;(int&nbsp;i)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code><a href="cgram/types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getContainingCType()">getContainingCType</a></span>()</code></th>
<td class="colLast">
<div class="block">Retrieves the containing C type of this MethodBinding if it is for
      a function pointer contained in a struct.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getContainingType()">getContainingType</a></span>()</code></th>
<td class="colLast">
<div class="block">Retrieves the containing type of this MethodBinding if it is for
      a function pointer contained in a struct.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code><a href="cgram/types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getCReturnType()">getCReturnType</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code><a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types">FunctionSymbol</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getCSymbol()">getCSymbol</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDelegationImplName()">getDelegationImplName</a></span>()</code></th>
<td class="colLast">
<div class="block">The
 <a href="JavaConfiguration.html#getDelegatedImplementation(com.jogamp.gluegen.cgram.types.AliasedSymbol)"><code>implementation delegation</code></a>
 name, or <code>null</code> for no delegation.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDescriptor(boolean,boolean)">getDescriptor</a></span>&#8203;(boolean&nbsp;forImplementingMethodCall,
             boolean&nbsp;eraseBufferAndArrayTypes)</code></th>
<td class="colLast">
<div class="block">Returns a String containing the descriptor (signature in
      internal format) of this MethodBinding as it will be
      emitted.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getImplName()">getImplName</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>'s name for the implementation,
 which is the current <a href="cgram/types/AliasedSymbol.AliasedSymbolImpl.html#getName()"><code>aliased</code></a> API name per default,
 or the <a href="#getDelegationImplName()"><code>delegation</code></a> name.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getInterfaceName()">getInterfaceName</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>'s current <a href="cgram/types/AliasedSymbol.AliasedSymbolImpl.html#getName()"><code>aliased</code></a> API name for the interface.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code><a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getJavaArgumentType(int)">getJavaArgumentType</a></span>&#8203;(int&nbsp;i)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code><a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getJavaReturnType()">getJavaReturnType</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getName()">getName</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>'s current <a href="cgram/types/AliasedSymbol.AliasedSymbolImpl.html#getName()"><code>aliased</code></a> API name.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNativeName()">getNativeName</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>'s name for the native function
 which is the <a href="cgram/types/AliasedSymbol.AliasedSymbolImpl.html#getOrigName()"><code>original</code></a> C API name per default,
 but may be overridden via <a href="#setNativeName(java.lang.String)"><code>setNativeName(String)</code></a>.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNumArguments()">getNumArguments</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasContainingType()">hasContainingType</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this MethodBinding is for a function pointer
 contained in a struct, or to access array- or pointer-data from a struct.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hashCode()">hashCode</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isArgumentThisPointer(int)">isArgumentThisPointer</a></span>&#8203;(int&nbsp;i)</code></th>
<td class="colLast">
<div class="block">Indicates whether the <i>i</i>th argument to this MethodBinding
      is actually a "this" pointer.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#needsNIOWrappingOrUnwrapping()">needsNIOWrappingOrUnwrapping</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the function needs NIO-related
 wrapping/unwrapping or conversion of various arguments.</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code><a href="MethodBinding.html" title="class in com.jogamp.gluegen">MethodBinding</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#replaceJavaArgumentType(int,com.jogamp.gluegen.JavaType)">replaceJavaArgumentType</a></span>&#8203;(int&nbsp;argumentNumber,
                       <a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;newArgType)</code></th>
<td class="colLast">
<div class="block">Creates a new MethodBinding replacing the specified Java
      argument type with a new argument type.</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setJavaReturnType(com.jogamp.gluegen.JavaType)">setJavaReturnType</a></span>&#8203;(<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;type)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setNativeName(java.lang.String)">setNativeName</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;s)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#signatureCanUseIndirectNIO()">signatureCanUseIndirectNIO</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if it is possible for any of the outgoing arguments
 to be indirect NIO buffers.</div>
</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#signatureRequiresStaticInitialization()">signatureRequiresStaticInitialization</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the wrapper implementation requires
 static native code to be initialized, see <a href="JavaConfiguration.html#forceStaticInitCode(java.lang.String)"><code>JavaConfiguration.forceStaticInitCode(String)</code></a>.</div>
</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#signatureUsesArraysOfCompoundTypeWrappers()">signatureUsesArraysOfCompoundTypeWrappers</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature use arrays of "compound type wrappers",
 or NIO-based wrappers for C data structures.</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#signatureUsesCArrays()">signatureUsesCArrays</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature represent C arrays.</div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#signatureUsesCompoundTypeWrappers()">signatureUsesCompoundTypeWrappers</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature use "compound type wrappers", or
 NIO-based wrappers for C data structures.</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#signatureUsesCPrimitivePointers()">signatureUsesCPrimitivePointers</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature represent C primitive pointers.</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#signatureUsesCVoidPointers()">signatureUsesCVoidPointers</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature represent C void* pointers.</div>
</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#signatureUsesJavaPrimitiveArrays()">signatureUsesJavaPrimitiveArrays</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature represent Java primitive arrays.</div>
</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#signatureUsesNIO()">signatureUsesNIO</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature require conversion or checking due to
 the use of New I/O.</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the signature of this binding.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang" class="externalLink">clone</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang" class="externalLink">finalize</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(com.jogamp.gluegen.MethodBinding)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MethodBinding</h4>
<pre>public&nbsp;MethodBinding&#8203;(<a href="MethodBinding.html" title="class in com.jogamp.gluegen">MethodBinding</a>&nbsp;bindingToCopy)</pre>
<div class="block">Constructs a new MethodBinding that is an exact clone of the
 argument, including the java return type and java argument
 types. It's safe to modify this binding after construction.</div>
</li>
</ul>
<a id="&lt;init&gt;(com.jogamp.gluegen.cgram.types.FunctionSymbol,java.lang.String,com.jogamp.gluegen.JavaType,java.util.List,com.jogamp.gluegen.JavaType,com.jogamp.gluegen.cgram.types.Type)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>MethodBinding</h4>
<pre>public&nbsp;MethodBinding&#8203;(<a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types">FunctionSymbol</a>&nbsp;sym,
                     <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;delegationImplName,
                     <a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;javaReturnType,
                     <a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&gt;&nbsp;javaArgumentTypes,
                     <a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;containingType,
                     <a href="cgram/types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;containingCType)</pre>
<div class="block">Constructor for calling a C function or a function pointer contained in a struct.
 <p>
 In case of the latter, a struct function pointer,
 the arguments <code>containingType</code> and <code>containingCType</code> must not be <code>null</code>!
 </p></div>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="setJavaReturnType(com.jogamp.gluegen.JavaType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setJavaReturnType</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setJavaReturnType&#8203;(<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;type)</pre>
</li>
</ul>
<a id="addJavaArgumentType(com.jogamp.gluegen.JavaType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addJavaArgumentType</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;addJavaArgumentType&#8203;(<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;type)</pre>
</li>
</ul>
<a id="getJavaReturnType()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getJavaReturnType</h4>
<pre class="methodSignature">public&nbsp;<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;getJavaReturnType()</pre>
</li>
</ul>
<a id="getNumArguments()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumArguments</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getNumArguments()</pre>
</li>
</ul>
<a id="getJavaArgumentType(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getJavaArgumentType</h4>
<pre class="methodSignature">public&nbsp;<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;getJavaArgumentType&#8203;(int&nbsp;i)</pre>
</li>
</ul>
<a id="getCReturnType()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCReturnType</h4>
<pre class="methodSignature">public&nbsp;<a href="cgram/types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;getCReturnType()</pre>
</li>
</ul>
<a id="getCArgumentType(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCArgumentType</h4>
<pre class="methodSignature">public&nbsp;<a href="cgram/types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;getCArgumentType&#8203;(int&nbsp;i)</pre>
</li>
</ul>
<a id="getCSymbol()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCSymbol</h4>
<pre class="methodSignature">public&nbsp;<a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types">FunctionSymbol</a>&nbsp;getCSymbol()</pre>
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>.</div>
</li>
</ul>
<a id="getArgumentName(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getArgumentName</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getArgumentName&#8203;(int&nbsp;i)</pre>
<div class="block">Returns either the argument name specified by the underlying
    FunctionSymbol or a fabricated argument name based on the
    position. Note that it is currently not guaranteed that there
    are no namespace clashes with these fabricated argument
    names.</div>
</li>
</ul>
<a id="getName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getName</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getName()</pre>
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>'s current <a href="cgram/types/AliasedSymbol.AliasedSymbolImpl.html#getName()"><code>aliased</code></a> API name.</div>
</li>
</ul>
<a id="getDelegationImplName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDelegationImplName</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getDelegationImplName()</pre>
<div class="block">The
 <a href="JavaConfiguration.html#getDelegatedImplementation(com.jogamp.gluegen.cgram.types.AliasedSymbol)"><code>implementation delegation</code></a>
 name, or <code>null</code> for no delegation.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getImplName()"><code>getImplName()</code></a></dd>
</dl>
</li>
</ul>
<a id="getInterfaceName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getInterfaceName</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getInterfaceName()</pre>
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>'s current <a href="cgram/types/AliasedSymbol.AliasedSymbolImpl.html#getName()"><code>aliased</code></a> API name for the interface.</div>
</li>
</ul>
<a id="getImplName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getImplName</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getImplName()</pre>
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>'s name for the implementation,
 which is the current <a href="cgram/types/AliasedSymbol.AliasedSymbolImpl.html#getName()"><code>aliased</code></a> API name per default,
 or the <a href="#getDelegationImplName()"><code>delegation</code></a> name.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getDelegationImplName()"><code>getDelegationImplName()</code></a></dd>
</dl>
</li>
</ul>
<a id="getNativeName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNativeName</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getNativeName()</pre>
<div class="block">Returns the <a href="cgram/types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types"><code>FunctionSymbol</code></a>'s name for the native function
 which is the <a href="cgram/types/AliasedSymbol.AliasedSymbolImpl.html#getOrigName()"><code>original</code></a> C API name per default,
 but may be overridden via <a href="#setNativeName(java.lang.String)"><code>setNativeName(String)</code></a>.</div>
</li>
</ul>
<a id="setNativeName(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setNativeName</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setNativeName&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;s)</pre>
</li>
</ul>
<a id="replaceJavaArgumentType(int,com.jogamp.gluegen.JavaType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>replaceJavaArgumentType</h4>
<pre class="methodSignature">public&nbsp;<a href="MethodBinding.html" title="class in com.jogamp.gluegen">MethodBinding</a>&nbsp;replaceJavaArgumentType&#8203;(int&nbsp;argumentNumber,
                                             <a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;newArgType)</pre>
<div class="block">Creates a new MethodBinding replacing the specified Java
      argument type with a new argument type. If argumentNumber is
      less than 0 then replaces the return type.</div>
</li>
</ul>
<a id="argumentsUseNIO()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>argumentsUseNIO</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;argumentsUseNIO()</pre>
<div class="block">Returns true if any of the outgoing arguments in the method's
 signature require conversion or checking due to the use of New
 I/O.</div>
</li>
</ul>
<a id="signatureUsesNIO()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>signatureUsesNIO</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;signatureUsesNIO()</pre>
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature require conversion or checking due to
 the use of New I/O.</div>
</li>
</ul>
<a id="signatureCanUseIndirectNIO()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>signatureCanUseIndirectNIO</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;signatureCanUseIndirectNIO()</pre>
<div class="block">Returns true if it is possible for any of the outgoing arguments
 to be indirect NIO buffers.</div>
</li>
</ul>
<a id="signatureUsesCompoundTypeWrappers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>signatureUsesCompoundTypeWrappers</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;signatureUsesCompoundTypeWrappers()</pre>
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature use "compound type wrappers", or
 NIO-based wrappers for C data structures.</div>
</li>
</ul>
<a id="signatureRequiresStaticInitialization()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>signatureRequiresStaticInitialization</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;signatureRequiresStaticInitialization()</pre>
<div class="block">Returns true if the wrapper implementation requires
 static native code to be initialized, see <a href="JavaConfiguration.html#forceStaticInitCode(java.lang.String)"><code>JavaConfiguration.forceStaticInitCode(String)</code></a>.
 <p>
 Currently triggered by:
 <ul>
   <li>Return type is a "compound type" and not a pointer</li>
 </ul>
 </p></div>
</li>
</ul>
<a id="signatureUsesArraysOfCompoundTypeWrappers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>signatureUsesArraysOfCompoundTypeWrappers</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;signatureUsesArraysOfCompoundTypeWrappers()</pre>
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature use arrays of "compound type wrappers",
 or NIO-based wrappers for C data structures.</div>
</li>
</ul>
<a id="needsNIOWrappingOrUnwrapping()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>needsNIOWrappingOrUnwrapping</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;needsNIOWrappingOrUnwrapping()</pre>
<div class="block">Returns true if the function needs NIO-related
 wrapping/unwrapping or conversion of various arguments. Currently
 this returns the logical OR of signatureUsesNIO(),
 signatureUsesCompoundTypeWrappers() and signatureUsesArraysOfCompoundTypeWrappers().</div>
</li>
</ul>
<a id="signatureUsesCVoidPointers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>signatureUsesCVoidPointers</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;signatureUsesCVoidPointers()</pre>
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature represent C void* pointers.</div>
</li>
</ul>
<a id="signatureUsesCPrimitivePointers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>signatureUsesCPrimitivePointers</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;signatureUsesCPrimitivePointers()</pre>
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature represent C primitive pointers.</div>
</li>
</ul>
<a id="signatureUsesCArrays()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>signatureUsesCArrays</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;signatureUsesCArrays()</pre>
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature represent C arrays.</div>
</li>
</ul>
<a id="signatureUsesJavaPrimitiveArrays()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>signatureUsesJavaPrimitiveArrays</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;signatureUsesJavaPrimitiveArrays()</pre>
<div class="block">Returns true if the return type or any of the outgoing arguments
 in the method's signature represent Java primitive arrays.</div>
</li>
</ul>
<a id="computeSignatureProperties()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>computeSignatureProperties</h4>
<pre class="methodSignature">protected&nbsp;void&nbsp;computeSignatureProperties()</pre>
<div class="block">Computes summary information about the method's C and Java
 signatures.</div>
</li>
</ul>
<a id="hasContainingType()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasContainingType</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;hasContainingType()</pre>
<div class="block">Indicates whether this MethodBinding is for a function pointer
 contained in a struct, or to access array- or pointer-data from a struct.
 <p>
 The native calling convention, i.e. via a 'this' function pointer
 or by a static native function must be decided in the
 <a href="JavaEmitter.html" title="class in com.jogamp.gluegen"><code>JavaEmitter</code></a> handling structs and
 passed to the <a href="CMethodBindingEmitter.html#setIsCStructFunctionPointer(boolean)"><code>CMethodBindingEmitter.setIsCStructFunctionPointer(boolean)</code></a>.
 </p></div>
</li>
</ul>
<a id="getContainingType()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getContainingType</h4>
<pre class="methodSignature">public&nbsp;<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;getContainingType()</pre>
<div class="block">Retrieves the containing type of this MethodBinding if it is for
      a function pointer contained in a struct.</div>
</li>
</ul>
<a id="getContainingCType()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getContainingCType</h4>
<pre class="methodSignature">public&nbsp;<a href="cgram/types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;getContainingCType()</pre>
<div class="block">Retrieves the containing C type of this MethodBinding if it is for
      a function pointer contained in a struct.</div>
</li>
</ul>
<a id="findThisPointer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>findThisPointer</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;findThisPointer()</pre>
<div class="block">Find the leftmost argument matching the type of the containing
      type (for function pointer MethodBindings) and record that as a
      "this" pointer, meaning that it does not need to be explicitly
      passed at the Java level.</div>
</li>
</ul>
<a id="clearThisPointer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clearThisPointer</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;clearThisPointer()</pre>
<div class="block">Clears any record of a this pointer for this MethodBinding.</div>
</li>
</ul>
<a id="isArgumentThisPointer(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isArgumentThisPointer</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;isArgumentThisPointer&#8203;(int&nbsp;i)</pre>
<div class="block">Indicates whether the <i>i</i>th argument to this MethodBinding
      is actually a "this" pointer.</div>
</li>
</ul>
<a id="equals(java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>equals</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;equals&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;obj)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a></code>&nbsp;in class&nbsp;<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
<a id="hashCode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hashCode</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;hashCode()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a></code>&nbsp;in class&nbsp;<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<div class="block">Returns the signature of this binding.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a></code>&nbsp;in class&nbsp;<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
<a id="getDescriptor(boolean,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDescriptor</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getDescriptor&#8203;(boolean&nbsp;forImplementingMethodCall,
                            boolean&nbsp;eraseBufferAndArrayTypes)</pre>
<div class="block">Returns a String containing the descriptor (signature in
      internal format) of this MethodBinding as it will be
      emitted. This is used to disambiguate between overloadings when
      manually specifying prologue and epilogue code, for example.</div>
</li>
</ul>
<a id="erasedTypeDescriptor(com.jogamp.gluegen.JavaType,boolean,boolean)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>erasedTypeDescriptor</h4>
<pre class="methodSignature">protected&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;erasedTypeDescriptor&#8203;(<a href="JavaType.html" title="class in com.jogamp.gluegen">JavaType</a>&nbsp;type,
                                      boolean&nbsp;eraseBufferAndArrayTypes,
                                      boolean&nbsp;skipBuffers)</pre>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/gluegen/MethodBinding.html" target="_top">Frames</a></li>
<li><a href="MethodBinding.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</body>
</html>
