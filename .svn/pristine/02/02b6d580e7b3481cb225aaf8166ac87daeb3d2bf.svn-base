<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:28:57 CET 2023 -->
<title>HeaderParser (GlueGen Runtime Documentation)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="HeaderParser (GlueGen Runtime Documentation)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":10,"i36":10,"i37":10,"i38":10,"i39":10,"i40":10,"i41":10,"i42":10,"i43":10,"i44":10,"i45":10,"i46":10,"i47":10,"i48":10,"i49":10,"i50":10,"i51":10,"i52":10,"i53":10,"i54":10,"i55":10,"i56":10,"i57":10,"i58":10,"i59":10,"i60":10,"i61":10,"i62":10,"i63":10,"i64":10,"i65":10,"i66":10,"i67":10,"i68":10,"i69":10,"i70":10,"i71":10,"i72":10,"i73":10,"i74":10,"i75":10,"i76":10,"i77":10,"i78":10,"i79":10,"i80":10,"i81":10,"i82":10,"i83":10,"i84":10,"i85":10,"i86":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/gluegen/cgram/HeaderParser.html" target="_top">Frames</a></li>
<li><a href="HeaderParser.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.gluegen.cgram</a></div>
<h2 title="Class HeaderParser" class="title">Class HeaderParser</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>antlr.TreeParser</li>
<li>
<ul class="inheritance">
<li>com.jogamp.gluegen.cgram.HeaderParser</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><code><a href="HeaderParserTokenTypes.html" title="interface in com.jogamp.gluegen.cgram">HeaderParserTokenTypes</a></code></dd>
</dl>
<hr>
<pre>public class <span class="typeNameLabel">HeaderParser</span>
extends antlr.TreeParser
implements <a href="HeaderParserTokenTypes.html" title="interface in com.jogamp.gluegen.cgram">HeaderParserTokenTypes</a></pre>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenNames">_tokenNames</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_0">_tokenSet_0</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_1">_tokenSet_1</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_2">_tokenSet_2</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_3">_tokenSet_3</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static antlr.collections.impl.BitSet</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#_tokenSet_4">_tokenSet_4</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ANONYMOUS_ENUM_NAME">ANONYMOUS_ENUM_NAME</a></span></code></th>
<td class="colLast">
<div class="block">Name assigned to a anonymous EnumType (e.g., "enum { ...</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.antlr.TreeParser">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;antlr.TreeParser</h3>
<code>_retTree, astFactory, ASTNULL, inputState, returnAST, tokenNames, traceDepth</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.jogamp.gluegen.cgram.HeaderParserTokenTypes">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;com.jogamp.gluegen.cgram.<a href="HeaderParserTokenTypes.html" title="interface in com.jogamp.gluegen.cgram">HeaderParserTokenTypes</a></h3>
<code><a href="HeaderParserTokenTypes.html#ASSIGN">ASSIGN</a>, <a href="HeaderParserTokenTypes.html#BadStringLiteral">BadStringLiteral</a>, <a href="HeaderParserTokenTypes.html#BAND">BAND</a>, <a href="HeaderParserTokenTypes.html#BAND_ASSIGN">BAND_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#BNOT">BNOT</a>, <a href="HeaderParserTokenTypes.html#BOR">BOR</a>, <a href="HeaderParserTokenTypes.html#BOR_ASSIGN">BOR_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#BXOR">BXOR</a>, <a href="HeaderParserTokenTypes.html#BXOR_ASSIGN">BXOR_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#CharLiteral">CharLiteral</a>, <a href="HeaderParserTokenTypes.html#COLON">COLON</a>, <a href="HeaderParserTokenTypes.html#COMMA">COMMA</a>, <a href="HeaderParserTokenTypes.html#Comment">Comment</a>, <a href="HeaderParserTokenTypes.html#CPPComment">CPPComment</a>, <a href="HeaderParserTokenTypes.html#DEC">DEC</a>, <a href="HeaderParserTokenTypes.html#DefineExpr">DefineExpr</a>, <a href="HeaderParserTokenTypes.html#DefineExpr2">DefineExpr2</a>, <a href="HeaderParserTokenTypes.html#Digit">Digit</a>, <a href="HeaderParserTokenTypes.html#DIV">DIV</a>, <a href="HeaderParserTokenTypes.html#DIV_ASSIGN">DIV_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#DOT">DOT</a>, <a href="HeaderParserTokenTypes.html#DoubleDoubleConst">DoubleDoubleConst</a>, <a href="HeaderParserTokenTypes.html#EOF">EOF</a>, <a href="HeaderParserTokenTypes.html#EQUAL">EQUAL</a>, <a href="HeaderParserTokenTypes.html#Escape">Escape</a>, <a href="HeaderParserTokenTypes.html#Exponent">Exponent</a>, <a href="HeaderParserTokenTypes.html#FloatDoubleConst">FloatDoubleConst</a>, <a href="HeaderParserTokenTypes.html#FloatSuffix">FloatSuffix</a>, <a href="HeaderParserTokenTypes.html#GT">GT</a>, <a href="HeaderParserTokenTypes.html#GTE">GTE</a>, <a href="HeaderParserTokenTypes.html#ID">ID</a>, <a href="HeaderParserTokenTypes.html#INC">INC</a>, <a href="HeaderParserTokenTypes.html#IntHexConst">IntHexConst</a>, <a href="HeaderParserTokenTypes.html#IntIntConst">IntIntConst</a>, <a href="HeaderParserTokenTypes.html#IntOctalConst">IntOctalConst</a>, <a href="HeaderParserTokenTypes.html#LAND">LAND</a>, <a href="HeaderParserTokenTypes.html#LBRACKET">LBRACKET</a>, <a href="HeaderParserTokenTypes.html#LCURLY">LCURLY</a>, <a href="HeaderParserTokenTypes.html#LineDirective">LineDirective</a>, <a href="HeaderParserTokenTypes.html#LITERAL___alignof">LITERAL___alignof</a>, <a href="HeaderParserTokenTypes.html#LITERAL___attribute">LITERAL___attribute</a>, <a href="HeaderParserTokenTypes.html#LITERAL___complex">LITERAL___complex</a>, <a href="HeaderParserTokenTypes.html#LITERAL___imag">LITERAL___imag</a>, <a href="HeaderParserTokenTypes.html#LITERAL___label__">LITERAL___label__</a>, <a href="HeaderParserTokenTypes.html#LITERAL___real">LITERAL___real</a>, <a href="HeaderParserTokenTypes.html#LITERAL_asm">LITERAL_asm</a>, <a href="HeaderParserTokenTypes.html#LITERAL_auto">LITERAL_auto</a>, <a href="HeaderParserTokenTypes.html#LITERAL_break">LITERAL_break</a>, <a href="HeaderParserTokenTypes.html#LITERAL_case">LITERAL_case</a>, <a href="HeaderParserTokenTypes.html#LITERAL_char">LITERAL_char</a>, <a href="HeaderParserTokenTypes.html#LITERAL_const">LITERAL_const</a>, <a href="HeaderParserTokenTypes.html#LITERAL_continue">LITERAL_continue</a>, <a href="HeaderParserTokenTypes.html#LITERAL_default">LITERAL_default</a>, <a href="HeaderParserTokenTypes.html#LITERAL_do">LITERAL_do</a>, <a href="HeaderParserTokenTypes.html#LITERAL_double">LITERAL_double</a>, <a href="HeaderParserTokenTypes.html#LITERAL_else">LITERAL_else</a>, <a href="HeaderParserTokenTypes.html#LITERAL_enum">LITERAL_enum</a>, <a href="HeaderParserTokenTypes.html#LITERAL_extern">LITERAL_extern</a>, <a href="HeaderParserTokenTypes.html#LITERAL_float">LITERAL_float</a>, <a href="HeaderParserTokenTypes.html#LITERAL_for">LITERAL_for</a>, <a href="HeaderParserTokenTypes.html#LITERAL_goto">LITERAL_goto</a>, <a href="HeaderParserTokenTypes.html#LITERAL_if">LITERAL_if</a>, <a href="HeaderParserTokenTypes.html#LITERAL_inline">LITERAL_inline</a>, <a href="HeaderParserTokenTypes.html#LITERAL_int">LITERAL_int</a>, <a href="HeaderParserTokenTypes.html#LITERAL_intptr_t">LITERAL_intptr_t</a>, <a href="HeaderParserTokenTypes.html#LITERAL_long">LITERAL_long</a>, <a href="HeaderParserTokenTypes.html#LITERAL_ptrdiff_t">LITERAL_ptrdiff_t</a>, <a href="HeaderParserTokenTypes.html#LITERAL_register">LITERAL_register</a>, <a href="HeaderParserTokenTypes.html#LITERAL_return">LITERAL_return</a>, <a href="HeaderParserTokenTypes.html#LITERAL_short">LITERAL_short</a>, <a href="HeaderParserTokenTypes.html#LITERAL_signed">LITERAL_signed</a>, <a href="HeaderParserTokenTypes.html#LITERAL_size_t">LITERAL_size_t</a>, <a href="HeaderParserTokenTypes.html#LITERAL_sizeof">LITERAL_sizeof</a>, <a href="HeaderParserTokenTypes.html#LITERAL_static">LITERAL_static</a>, <a href="HeaderParserTokenTypes.html#LITERAL_struct">LITERAL_struct</a>, <a href="HeaderParserTokenTypes.html#LITERAL_switch">LITERAL_switch</a>, <a href="HeaderParserTokenTypes.html#LITERAL_typedef">LITERAL_typedef</a>, <a href="HeaderParserTokenTypes.html#LITERAL_typeof">LITERAL_typeof</a>, <a href="HeaderParserTokenTypes.html#LITERAL_uintptr_t">LITERAL_uintptr_t</a>, <a href="HeaderParserTokenTypes.html#LITERAL_union">LITERAL_union</a>, <a href="HeaderParserTokenTypes.html#LITERAL_unsigned">LITERAL_unsigned</a>, <a href="HeaderParserTokenTypes.html#LITERAL_void">LITERAL_void</a>, <a href="HeaderParserTokenTypes.html#LITERAL_volatile">LITERAL_volatile</a>, <a href="HeaderParserTokenTypes.html#LITERAL_wchar_t">LITERAL_wchar_t</a>, <a href="HeaderParserTokenTypes.html#LITERAL_while">LITERAL_while</a>, <a href="HeaderParserTokenTypes.html#LNOT">LNOT</a>, <a href="HeaderParserTokenTypes.html#LongDoubleConst">LongDoubleConst</a>, <a href="HeaderParserTokenTypes.html#LongHexConst">LongHexConst</a>, <a href="HeaderParserTokenTypes.html#LongIntConst">LongIntConst</a>, <a href="HeaderParserTokenTypes.html#LongOctalConst">LongOctalConst</a>, <a href="HeaderParserTokenTypes.html#LongSuffix">LongSuffix</a>, <a href="HeaderParserTokenTypes.html#LOR">LOR</a>, <a href="HeaderParserTokenTypes.html#LPAREN">LPAREN</a>, <a href="HeaderParserTokenTypes.html#LSHIFT">LSHIFT</a>, <a href="HeaderParserTokenTypes.html#LSHIFT_ASSIGN">LSHIFT_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#LT">LT</a>, <a href="HeaderParserTokenTypes.html#LTE">LTE</a>, <a href="HeaderParserTokenTypes.html#MINUS">MINUS</a>, <a href="HeaderParserTokenTypes.html#MINUS_ASSIGN">MINUS_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#MOD">MOD</a>, <a href="HeaderParserTokenTypes.html#MOD_ASSIGN">MOD_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#NAsmAttribute">NAsmAttribute</a>, <a href="HeaderParserTokenTypes.html#NCast">NCast</a>, <a href="HeaderParserTokenTypes.html#NCommaExpr">NCommaExpr</a>, <a href="HeaderParserTokenTypes.html#NCompoundStatement">NCompoundStatement</a>, <a href="HeaderParserTokenTypes.html#NDeclaration">NDeclaration</a>, <a href="HeaderParserTokenTypes.html#NDeclarator">NDeclarator</a>, <a href="HeaderParserTokenTypes.html#NEmptyExpression">NEmptyExpression</a>, <a href="HeaderParserTokenTypes.html#NExpressionGroup">NExpressionGroup</a>, <a href="HeaderParserTokenTypes.html#NFunctionCallArgs">NFunctionCallArgs</a>, <a href="HeaderParserTokenTypes.html#NFunctionDef">NFunctionDef</a>, <a href="HeaderParserTokenTypes.html#NGnuAsmExpr">NGnuAsmExpr</a>, <a href="HeaderParserTokenTypes.html#NInitDecl">NInitDecl</a>, <a href="HeaderParserTokenTypes.html#NInitializer">NInitializer</a>, <a href="HeaderParserTokenTypes.html#NInitializerElementLabel">NInitializerElementLabel</a>, <a href="HeaderParserTokenTypes.html#NLabel">NLabel</a>, <a href="HeaderParserTokenTypes.html#NLcurlyInitializer">NLcurlyInitializer</a>, <a href="HeaderParserTokenTypes.html#NNonemptyAbstractDeclarator">NNonemptyAbstractDeclarator</a>, <a href="HeaderParserTokenTypes.html#NonWhitespace">NonWhitespace</a>, <a href="HeaderParserTokenTypes.html#NOT_EQUAL">NOT_EQUAL</a>, <a href="HeaderParserTokenTypes.html#NParameterDeclaration">NParameterDeclaration</a>, <a href="HeaderParserTokenTypes.html#NParameterTypeList">NParameterTypeList</a>, <a href="HeaderParserTokenTypes.html#NPointerGroup">NPointerGroup</a>, <a href="HeaderParserTokenTypes.html#NPostfixExpr">NPostfixExpr</a>, <a href="HeaderParserTokenTypes.html#NRangeExpr">NRangeExpr</a>, <a href="HeaderParserTokenTypes.html#NStatementExpr">NStatementExpr</a>, <a href="HeaderParserTokenTypes.html#NStringSeq">NStringSeq</a>, <a href="HeaderParserTokenTypes.html#NStructDeclarator">NStructDeclarator</a>, <a href="HeaderParserTokenTypes.html#NTypedefName">NTypedefName</a>, <a href="HeaderParserTokenTypes.html#NTypeMissing">NTypeMissing</a>, <a href="HeaderParserTokenTypes.html#NULL_TREE_LOOKAHEAD">NULL_TREE_LOOKAHEAD</a>, <a href="HeaderParserTokenTypes.html#Number">Number</a>, <a href="HeaderParserTokenTypes.html#NUnaryExpr">NUnaryExpr</a>, <a href="HeaderParserTokenTypes.html#PLUS">PLUS</a>, <a href="HeaderParserTokenTypes.html#PLUS_ASSIGN">PLUS_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#PREPROC_DIRECTIVE">PREPROC_DIRECTIVE</a>, <a href="HeaderParserTokenTypes.html#PTR">PTR</a>, <a href="HeaderParserTokenTypes.html#QUESTION">QUESTION</a>, <a href="HeaderParserTokenTypes.html#RBRACKET">RBRACKET</a>, <a href="HeaderParserTokenTypes.html#RCURLY">RCURLY</a>, <a href="HeaderParserTokenTypes.html#RPAREN">RPAREN</a>, <a href="HeaderParserTokenTypes.html#RSHIFT">RSHIFT</a>, <a href="HeaderParserTokenTypes.html#RSHIFT_ASSIGN">RSHIFT_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#SEMI">SEMI</a>, <a href="HeaderParserTokenTypes.html#Space">Space</a>, <a href="HeaderParserTokenTypes.html#STAR">STAR</a>, <a href="HeaderParserTokenTypes.html#STAR_ASSIGN">STAR_ASSIGN</a>, <a href="HeaderParserTokenTypes.html#StringLiteral">StringLiteral</a>, <a href="HeaderParserTokenTypes.html#UnsignedHexConst">UnsignedHexConst</a>, <a href="HeaderParserTokenTypes.html#UnsignedIntConst">UnsignedIntConst</a>, <a href="HeaderParserTokenTypes.html#UnsignedOctalConst">UnsignedOctalConst</a>, <a href="HeaderParserTokenTypes.html#UnsignedSuffix">UnsignedSuffix</a>, <a href="HeaderParserTokenTypes.html#VARARGS">VARARGS</a>, <a href="HeaderParserTokenTypes.html#Vocabulary">Vocabulary</a>, <a href="HeaderParserTokenTypes.html#Whitespace">Whitespace</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E()">HeaderParser</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#additiveExpr(antlr.collections.AST)">additiveExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#argExprList(antlr.collections.AST)">argExprList</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#asm_expr(antlr.collections.AST)">asm_expr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#assignExpr(antlr.collections.AST)">assignExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#attributeDecl(antlr.collections.AST)">attributeDecl</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#bitAndExpr(antlr.collections.AST)">bitAndExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#castExpr(antlr.collections.AST)">castExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#charConst(antlr.collections.AST)">charConst</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#clearParsedFunctions()">clearParsedFunctions</a></span>()</code></th>
<td class="colLast">
<div class="block">Clears the list of functions this HeaderParser has parsed.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#commaExpr(antlr.collections.AST)">commaExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#compoundStatement(antlr.collections.AST)">compoundStatement</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#compoundStatementExpr(antlr.collections.AST)">compoundStatementExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#conditionalExpr(antlr.collections.AST)">conditionalExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#declaration(antlr.collections.AST)">declaration</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#declarationList(antlr.collections.AST)">declarationList</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#declarator(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">declarator</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
          com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>com.jogamp.gluegen.cgram.HeaderParser.TypeBox</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#declSpecifiers(antlr.collections.AST)">declSpecifiers</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#emptyExpr(antlr.collections.AST)">emptyExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code><a href="../ConstantDefinition.html" title="class in com.jogamp.gluegen">ConstantDefinition</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#enumerator(antlr.collections.AST,com.jogamp.gluegen.cgram.types.EnumType,com.jogamp.gluegen.ConstantDefinition)">enumerator</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
          <a href="types/EnumType.html" title="class in com.jogamp.gluegen.cgram.types">EnumType</a>&nbsp;enumeration,
          <a href="../ConstantDefinition.html" title="class in com.jogamp.gluegen">ConstantDefinition</a>&nbsp;defaultValue)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#enumList(antlr.collections.AST,com.jogamp.gluegen.cgram.types.EnumType)">enumList</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
        <a href="types/EnumType.html" title="class in com.jogamp.gluegen.cgram.types">EnumType</a>&nbsp;enumeration)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code><a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#enumSpecifier(antlr.collections.AST,int)">enumSpecifier</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
             int&nbsp;cvAttrs)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#equalityExpr(antlr.collections.AST)">equalityExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#exclusiveOrExpr(antlr.collections.AST)">exclusiveOrExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#expr(antlr.collections.AST)">expr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#externalDef(antlr.collections.AST)">externalDef</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#externalList(antlr.collections.AST)">externalList</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#floatConst(antlr.collections.AST)">floatConst</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#functionDeclSpecifiers(antlr.collections.AST)">functionDeclSpecifiers</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#functionDef(antlr.collections.AST)">functionDef</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#functionStorageClassSpecifier(antlr.collections.AST)">functionStorageClassSpecifier</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getCanonMap()">getCanonMap</a></span>()</code></th>
<td class="colLast">
<div class="block">Get the canonicalization map, which is a regular HashMap
        mapping Type to Type and which is used for looking up the unique
        instances of e.g.</div>
</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDebug()">getDebug</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="types/EnumType.html" title="class in com.jogamp.gluegen.cgram.types">EnumType</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getEnums()">getEnums</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the EnumTypes this HeaderParser processed.</div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types">FunctionSymbol</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getParsedFunctions()">getParsedFunctions</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the list of FunctionSymbols this HeaderParser has parsed.</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code><a href="types/TypeDictionary.html" title="class in com.jogamp.gluegen.cgram.types">TypeDictionary</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getStructDictionary()">getStructDictionary</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the struct name dictionary this HeaderParser uses.</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code><a href="types/TypeDictionary.html" title="class in com.jogamp.gluegen.cgram.types">TypeDictionary</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTypedefDictionary()">getTypedefDictionary</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the typedef dictionary this HeaderParser uses.</div>
</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#gnuAsmExpr(antlr.collections.AST)">gnuAsmExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#idList(antlr.collections.AST)">idList</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#inclusiveOrExpr(antlr.collections.AST)">inclusiveOrExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#initDecl(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">initDecl</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
        com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#initDeclList(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">initDeclList</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
            com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#initializer(antlr.collections.AST)">initializer</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#initializerElementLabel(antlr.collections.AST)">initializerElementLabel</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#initializerList(antlr.collections.AST)">initializerList</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#intConst(antlr.collections.AST)">intConst</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#intConstExpr(antlr.collections.AST)">intConstExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lcurlyInitializer(antlr.collections.AST)">lcurlyInitializer</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#localLabelDecl(antlr.collections.AST)">localLabelDecl</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#logicalAndExpr(antlr.collections.AST)">logicalAndExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#logicalOrExpr(antlr.collections.AST)">logicalOrExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i50" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multExpr(antlr.collections.AST)">multExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i51" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#nonemptyAbstractDeclarator(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">nonemptyAbstractDeclarator</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
                          com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i52" class="altColor">
<td class="colFirst"><code>com.jogamp.gluegen.cgram.HeaderParser.ParameterDeclaration</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#parameterDeclaration(antlr.collections.AST)">parameterDeclaration</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i53" class="rowColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;com.jogamp.gluegen.cgram.HeaderParser.ParameterDeclaration&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#parameterTypeList(antlr.collections.AST)">parameterTypeList</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i54" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#pointerGroup(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">pointerGroup</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
            com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i55" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#postfixExpr(antlr.collections.AST)">postfixExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i56" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#primaryExpr(antlr.collections.AST)">primaryExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i57" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#rangeExpr(antlr.collections.AST)">rangeExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i58" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#relationalExpr(antlr.collections.AST)">relationalExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i59" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setDebug(boolean)">setDebug</a></span>&#8203;(boolean&nbsp;debug)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i60" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setEnums(java.util.List)">setEnums</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="types/EnumType.html" title="class in com.jogamp.gluegen.cgram.types">EnumType</a>&gt;&nbsp;enumTypes)</code></th>
<td class="colLast">
<div class="block">Pre-define the list of EnumTypes for this HeaderParser.</div>
</td>
</tr>
<tr id="i61" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setJavaConfiguration(com.jogamp.gluegen.JavaConfiguration)">setJavaConfiguration</a></span>&#8203;(<a href="../JavaConfiguration.html" title="class in com.jogamp.gluegen">JavaConfiguration</a>&nbsp;cfg)</code></th>
<td class="colLast">
<div class="block">Set the configuration for this
        HeaderParser.</div>
</td>
</tr>
<tr id="i62" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setStructDictionary(com.jogamp.gluegen.cgram.types.TypeDictionary)">setStructDictionary</a></span>&#8203;(<a href="types/TypeDictionary.html" title="class in com.jogamp.gluegen.cgram.types">TypeDictionary</a>&nbsp;dict)</code></th>
<td class="colLast">
<div class="block">Set the dictionary mapping struct names (i.e., the "foo" in
        "struct foo { ...</div>
</td>
</tr>
<tr id="i63" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTypedefDictionary(com.jogamp.gluegen.cgram.types.TypeDictionary)">setTypedefDictionary</a></span>&#8203;(<a href="types/TypeDictionary.html" title="class in com.jogamp.gluegen.cgram.types">TypeDictionary</a>&nbsp;dict)</code></th>
<td class="colLast">
<div class="block">Set the dictionary mapping typedef names to types for this
        HeaderParser.</div>
</td>
</tr>
<tr id="i64" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#shiftExpr(antlr.collections.AST)">shiftExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i65" class="rowColor">
<td class="colFirst"><code><a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#specifierQualifierList(antlr.collections.AST)">specifierQualifierList</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i66" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#statement(antlr.collections.AST)">statement</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i67" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#statementBody(antlr.collections.AST)">statementBody</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i68" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#statementList(antlr.collections.AST)">statementList</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i69" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#storageClassSpecifier(antlr.collections.AST)">storageClassSpecifier</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i70" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#stringConst(antlr.collections.AST)">stringConst</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i71" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#strOptExprPair(antlr.collections.AST)">strOptExprPair</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i72" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#structDeclaration(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundType)">structDeclaration</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
                 <a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a>&nbsp;containingType)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i73" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#structDeclarationList(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundType)">structDeclarationList</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
                     <a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a>&nbsp;t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i74" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#structDeclarator(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundType,com.jogamp.gluegen.cgram.types.Type)">structDeclarator</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
                <a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a>&nbsp;containingType,
                <a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i75" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#structDeclaratorList(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundType,com.jogamp.gluegen.cgram.types.Type)">structDeclaratorList</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
                    <a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a>&nbsp;containingType,
                    <a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i76" class="altColor">
<td class="colFirst"><code><a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#structOrUnionBody(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundTypeKind,int)">structOrUnionBody</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
                 <a href="types/CompoundTypeKind.html" title="enum in com.jogamp.gluegen.cgram.types">CompoundTypeKind</a>&nbsp;kind,
                 int&nbsp;cvAttrs)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i77" class="rowColor">
<td class="colFirst"><code><a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#structSpecifier(antlr.collections.AST,int)">structSpecifier</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
               int&nbsp;cvAttrs)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i78" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#translationUnit(antlr.collections.AST)">translationUnit</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i79" class="rowColor">
<td class="colFirst"><code><a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#typedefName(antlr.collections.AST,int)">typedefName</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
           int&nbsp;cvAttrs)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i80" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#typelessDeclaration(antlr.collections.AST)">typelessDeclaration</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i81" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#typeName(antlr.collections.AST)">typeName</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i82" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#typeQualifier(antlr.collections.AST)">typeQualifier</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i83" class="rowColor">
<td class="colFirst"><code><a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#typeSpecifier(antlr.collections.AST,int)">typeSpecifier</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
             int&nbsp;attributes)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i84" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#unaryExpr(antlr.collections.AST)">unaryExpr</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i85" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#unaryOperator(antlr.collections.AST)">unaryOperator</a></span>&#8203;(antlr.collections.AST&nbsp;_t)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i86" class="altColor">
<td class="colFirst"><code><a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#unionSpecifier(antlr.collections.AST,int)">unionSpecifier</a></span>&#8203;(antlr.collections.AST&nbsp;_t,
              int&nbsp;cvAttrs)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.antlr.TreeParser">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;antlr.TreeParser</h3>
<code>getAST, getASTFactory, getTokenName, getTokenNames, match, match, matchNot, panic, reportError, reportError, reportWarning, setASTFactory, setASTNodeClass, setASTNodeType, traceIn, traceIndent, traceOut</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang" class="externalLink">clone</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang" class="externalLink">finalize</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="ANONYMOUS_ENUM_NAME">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ANONYMOUS_ENUM_NAME</h4>
<pre>public static final&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> ANONYMOUS_ENUM_NAME</pre>
<div class="block">Name assigned to a anonymous EnumType (e.g., "enum { ... }").</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.gluegen.cgram.HeaderParser.ANONYMOUS_ENUM_NAME">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="_tokenNames">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenNames</h4>
<pre>public static final&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>[] _tokenNames</pre>
</li>
</ul>
<a id="_tokenSet_0">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenSet_0</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_0</pre>
</li>
</ul>
<a id="_tokenSet_1">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenSet_1</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_1</pre>
</li>
</ul>
<a id="_tokenSet_2">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenSet_2</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_2</pre>
</li>
</ul>
<a id="_tokenSet_3">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_tokenSet_3</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_3</pre>
</li>
</ul>
<a id="_tokenSet_4">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>_tokenSet_4</h4>
<pre>public static final&nbsp;antlr.collections.impl.BitSet _tokenSet_4</pre>
</li>
</ul>
</li>
</ul>
</section>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>HeaderParser</h4>
<pre>public&nbsp;HeaderParser()</pre>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="getDebug()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDebug</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;getDebug()</pre>
</li>
</ul>
<a id="setDebug(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDebug</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setDebug&#8203;(boolean&nbsp;debug)</pre>
</li>
</ul>
<a id="setJavaConfiguration(com.jogamp.gluegen.JavaConfiguration)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setJavaConfiguration</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setJavaConfiguration&#8203;(<a href="../JavaConfiguration.html" title="class in com.jogamp.gluegen">JavaConfiguration</a>&nbsp;cfg)</pre>
<div class="block">Set the configuration for this
        HeaderParser. Must be done before parsing.</div>
</li>
</ul>
<a id="setTypedefDictionary(com.jogamp.gluegen.cgram.types.TypeDictionary)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTypedefDictionary</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setTypedefDictionary&#8203;(<a href="types/TypeDictionary.html" title="class in com.jogamp.gluegen.cgram.types">TypeDictionary</a>&nbsp;dict)</pre>
<div class="block">Set the dictionary mapping typedef names to types for this
        HeaderParser. Must be done before parsing.</div>
</li>
</ul>
<a id="getTypedefDictionary()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTypedefDictionary</h4>
<pre class="methodSignature">public&nbsp;<a href="types/TypeDictionary.html" title="class in com.jogamp.gluegen.cgram.types">TypeDictionary</a>&nbsp;getTypedefDictionary()</pre>
<div class="block">Returns the typedef dictionary this HeaderParser uses.</div>
</li>
</ul>
<a id="setStructDictionary(com.jogamp.gluegen.cgram.types.TypeDictionary)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setStructDictionary</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setStructDictionary&#8203;(<a href="types/TypeDictionary.html" title="class in com.jogamp.gluegen.cgram.types">TypeDictionary</a>&nbsp;dict)</pre>
<div class="block">Set the dictionary mapping struct names (i.e., the "foo" in
        "struct foo { ... };") to types for this HeaderParser. Must be done
        before parsing.</div>
</li>
</ul>
<a id="getStructDictionary()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStructDictionary</h4>
<pre class="methodSignature">public&nbsp;<a href="types/TypeDictionary.html" title="class in com.jogamp.gluegen.cgram.types">TypeDictionary</a>&nbsp;getStructDictionary()</pre>
<div class="block">Returns the struct name dictionary this HeaderParser uses.</div>
</li>
</ul>
<a id="getCanonMap()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCanonMap</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util" class="externalLink">Map</a>&nbsp;getCanonMap()</pre>
<div class="block">Get the canonicalization map, which is a regular HashMap
        mapping Type to Type and which is used for looking up the unique
        instances of e.g. pointer-to-structure types that have been typedefed
        and therefore have names.</div>
</li>
</ul>
<a id="setEnums(java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setEnums</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setEnums&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="types/EnumType.html" title="class in com.jogamp.gluegen.cgram.types">EnumType</a>&gt;&nbsp;enumTypes)</pre>
<div class="block">Pre-define the list of EnumTypes for this HeaderParser. Must be
                done before parsing.</div>
</li>
</ul>
<a id="getEnums()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEnums</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="types/EnumType.html" title="class in com.jogamp.gluegen.cgram.types">EnumType</a>&gt;&nbsp;getEnums()</pre>
<div class="block">Returns the EnumTypes this HeaderParser processed.</div>
</li>
</ul>
<a id="clearParsedFunctions()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clearParsedFunctions</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;clearParsedFunctions()</pre>
<div class="block">Clears the list of functions this HeaderParser has parsed.
        Useful when reusing the same HeaderParser for more than one
        header file.</div>
</li>
</ul>
<a id="getParsedFunctions()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getParsedFunctions</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="types/FunctionSymbol.html" title="class in com.jogamp.gluegen.cgram.types">FunctionSymbol</a>&gt;&nbsp;getParsedFunctions()</pre>
<div class="block">Returns the list of FunctionSymbols this HeaderParser has parsed.</div>
</li>
</ul>
<a id="declarator(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>declarator</h4>
<pre class="methodSignature">public final&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;declarator&#8203;(antlr.collections.AST&nbsp;_t,
                               com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)
                        throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="pointerGroup(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>pointerGroup</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;pointerGroup&#8203;(antlr.collections.AST&nbsp;_t,
                               com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)
                        throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="parameterTypeList(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parameterTypeList</h4>
<pre class="methodSignature">public final&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;com.jogamp.gluegen.cgram.HeaderParser.ParameterDeclaration&gt;&nbsp;parameterTypeList&#8203;(antlr.collections.AST&nbsp;_t)
                                                                                         throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="idList(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>idList</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;idList&#8203;(antlr.collections.AST&nbsp;_t)
                  throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="expr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>expr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;expr&#8203;(antlr.collections.AST&nbsp;_t)
                throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="typelessDeclaration(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>typelessDeclaration</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;typelessDeclaration&#8203;(antlr.collections.AST&nbsp;_t)
                               throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="initDeclList(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initDeclList</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;initDeclList&#8203;(antlr.collections.AST&nbsp;_t,
                               com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)
                        throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="declaration(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>declaration</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;declaration&#8203;(antlr.collections.AST&nbsp;_t)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="declSpecifiers(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>declSpecifiers</h4>
<pre class="methodSignature">public final&nbsp;com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;declSpecifiers&#8203;(antlr.collections.AST&nbsp;_t)
                                                                   throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="parameterDeclaration(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parameterDeclaration</h4>
<pre class="methodSignature">public final&nbsp;com.jogamp.gluegen.cgram.HeaderParser.ParameterDeclaration&nbsp;parameterDeclaration&#8203;(antlr.collections.AST&nbsp;_t)
                                                                                      throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="nonemptyAbstractDeclarator(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>nonemptyAbstractDeclarator</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;nonemptyAbstractDeclarator&#8203;(antlr.collections.AST&nbsp;_t,
                                             com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)
                                      throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="functionDef(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>functionDef</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;functionDef&#8203;(antlr.collections.AST&nbsp;_t)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="functionDeclSpecifiers(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>functionDeclSpecifiers</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;functionDeclSpecifiers&#8203;(antlr.collections.AST&nbsp;_t)
                                  throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="compoundStatement(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compoundStatement</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;compoundStatement&#8203;(antlr.collections.AST&nbsp;_t)
                             throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="storageClassSpecifier(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>storageClassSpecifier</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;storageClassSpecifier&#8203;(antlr.collections.AST&nbsp;_t)
                                throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="typeQualifier(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>typeQualifier</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;typeQualifier&#8203;(antlr.collections.AST&nbsp;_t)
                        throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="typeSpecifier(antlr.collections.AST,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>typeSpecifier</h4>
<pre class="methodSignature">public final&nbsp;<a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;typeSpecifier&#8203;(antlr.collections.AST&nbsp;_t,
                                int&nbsp;attributes)
                         throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="functionStorageClassSpecifier(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>functionStorageClassSpecifier</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;functionStorageClassSpecifier&#8203;(antlr.collections.AST&nbsp;_t)
                                        throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="structSpecifier(antlr.collections.AST,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>structSpecifier</h4>
<pre class="methodSignature">public final&nbsp;<a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;structSpecifier&#8203;(antlr.collections.AST&nbsp;_t,
                                  int&nbsp;cvAttrs)
                           throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="attributeDecl(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>attributeDecl</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;attributeDecl&#8203;(antlr.collections.AST&nbsp;_t)
                         throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="unionSpecifier(antlr.collections.AST,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>unionSpecifier</h4>
<pre class="methodSignature">public final&nbsp;<a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;unionSpecifier&#8203;(antlr.collections.AST&nbsp;_t,
                                 int&nbsp;cvAttrs)
                          throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="enumSpecifier(antlr.collections.AST,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>enumSpecifier</h4>
<pre class="methodSignature">public final&nbsp;<a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;enumSpecifier&#8203;(antlr.collections.AST&nbsp;_t,
                                int&nbsp;cvAttrs)
                         throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="typedefName(antlr.collections.AST,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>typedefName</h4>
<pre class="methodSignature">public final&nbsp;<a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;typedefName&#8203;(antlr.collections.AST&nbsp;_t,
                              int&nbsp;cvAttrs)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="typeName(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>typeName</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;typeName&#8203;(antlr.collections.AST&nbsp;_t)
                    throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="structOrUnionBody(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundTypeKind,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>structOrUnionBody</h4>
<pre class="methodSignature">public final&nbsp;<a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a>&nbsp;structOrUnionBody&#8203;(antlr.collections.AST&nbsp;_t,
                                            <a href="types/CompoundTypeKind.html" title="enum in com.jogamp.gluegen.cgram.types">CompoundTypeKind</a>&nbsp;kind,
                                            int&nbsp;cvAttrs)
                                     throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="structDeclarationList(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>structDeclarationList</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;structDeclarationList&#8203;(antlr.collections.AST&nbsp;_t,
                                           <a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a>&nbsp;t)
                                    throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="structDeclaration(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>structDeclaration</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;structDeclaration&#8203;(antlr.collections.AST&nbsp;_t,
                                       <a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a>&nbsp;containingType)
                                throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="specifierQualifierList(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>specifierQualifierList</h4>
<pre class="methodSignature">public final&nbsp;<a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;specifierQualifierList&#8203;(antlr.collections.AST&nbsp;_t)
                                  throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="structDeclaratorList(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundType,com.jogamp.gluegen.cgram.types.Type)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>structDeclaratorList</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;structDeclaratorList&#8203;(antlr.collections.AST&nbsp;_t,
                                          <a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a>&nbsp;containingType,
                                          <a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;t)
                                   throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="structDeclarator(antlr.collections.AST,com.jogamp.gluegen.cgram.types.CompoundType,com.jogamp.gluegen.cgram.types.Type)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>structDeclarator</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;structDeclarator&#8203;(antlr.collections.AST&nbsp;_t,
                                      <a href="types/CompoundType.html" title="class in com.jogamp.gluegen.cgram.types">CompoundType</a>&nbsp;containingType,
                                      <a href="types/Type.html" title="class in com.jogamp.gluegen.cgram.types">Type</a>&nbsp;t)
                               throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="enumList(antlr.collections.AST,com.jogamp.gluegen.cgram.types.EnumType)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>enumList</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;enumList&#8203;(antlr.collections.AST&nbsp;_t,
                           <a href="types/EnumType.html" title="class in com.jogamp.gluegen.cgram.types">EnumType</a>&nbsp;enumeration)
                    throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="enumerator(antlr.collections.AST,com.jogamp.gluegen.cgram.types.EnumType,com.jogamp.gluegen.ConstantDefinition)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>enumerator</h4>
<pre class="methodSignature">public final&nbsp;<a href="../ConstantDefinition.html" title="class in com.jogamp.gluegen">ConstantDefinition</a>&nbsp;enumerator&#8203;(antlr.collections.AST&nbsp;_t,
                                           <a href="types/EnumType.html" title="class in com.jogamp.gluegen.cgram.types">EnumType</a>&nbsp;enumeration,
                                           <a href="../ConstantDefinition.html" title="class in com.jogamp.gluegen">ConstantDefinition</a>&nbsp;defaultValue)
                                    throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="initDecl(antlr.collections.AST,com.jogamp.gluegen.cgram.HeaderParser.TypeBox)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initDecl</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;initDecl&#8203;(antlr.collections.AST&nbsp;_t,
                           com.jogamp.gluegen.cgram.HeaderParser.TypeBox&nbsp;tb)
                    throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="initializer(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initializer</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;initializer&#8203;(antlr.collections.AST&nbsp;_t)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="intConstExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>intConstExpr</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;intConstExpr&#8203;(antlr.collections.AST&nbsp;_t)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="translationUnit(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>translationUnit</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;translationUnit&#8203;(antlr.collections.AST&nbsp;_t)
                           throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="externalList(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>externalList</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;externalList&#8203;(antlr.collections.AST&nbsp;_t)
                        throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="externalDef(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>externalDef</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;externalDef&#8203;(antlr.collections.AST&nbsp;_t)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="asm_expr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>asm_expr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;asm_expr&#8203;(antlr.collections.AST&nbsp;_t)
                    throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="initializerElementLabel(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initializerElementLabel</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;initializerElementLabel&#8203;(antlr.collections.AST&nbsp;_t)
                                   throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="lcurlyInitializer(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lcurlyInitializer</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;lcurlyInitializer&#8203;(antlr.collections.AST&nbsp;_t)
                             throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="initializerList(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initializerList</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;initializerList&#8203;(antlr.collections.AST&nbsp;_t)
                           throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="declarationList(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>declarationList</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;declarationList&#8203;(antlr.collections.AST&nbsp;_t)
                           throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="localLabelDecl(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>localLabelDecl</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;localLabelDecl&#8203;(antlr.collections.AST&nbsp;_t)
                          throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="statementList(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>statementList</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;statementList&#8203;(antlr.collections.AST&nbsp;_t)
                         throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="statement(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>statement</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;statement&#8203;(antlr.collections.AST&nbsp;_t)
                     throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="statementBody(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>statementBody</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;statementBody&#8203;(antlr.collections.AST&nbsp;_t)
                         throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="assignExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>assignExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;assignExpr&#8203;(antlr.collections.AST&nbsp;_t)
                      throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="conditionalExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>conditionalExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;conditionalExpr&#8203;(antlr.collections.AST&nbsp;_t)
                           throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="logicalOrExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>logicalOrExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;logicalOrExpr&#8203;(antlr.collections.AST&nbsp;_t)
                         throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="logicalAndExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>logicalAndExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;logicalAndExpr&#8203;(antlr.collections.AST&nbsp;_t)
                          throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="inclusiveOrExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>inclusiveOrExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;inclusiveOrExpr&#8203;(antlr.collections.AST&nbsp;_t)
                           throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="exclusiveOrExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>exclusiveOrExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;exclusiveOrExpr&#8203;(antlr.collections.AST&nbsp;_t)
                           throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="bitAndExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>bitAndExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;bitAndExpr&#8203;(antlr.collections.AST&nbsp;_t)
                      throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="equalityExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>equalityExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;equalityExpr&#8203;(antlr.collections.AST&nbsp;_t)
                        throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="relationalExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>relationalExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;relationalExpr&#8203;(antlr.collections.AST&nbsp;_t)
                          throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="shiftExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>shiftExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;shiftExpr&#8203;(antlr.collections.AST&nbsp;_t)
                     throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="additiveExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>additiveExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;additiveExpr&#8203;(antlr.collections.AST&nbsp;_t)
                        throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="multExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;multExpr&#8203;(antlr.collections.AST&nbsp;_t)
                    throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="castExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>castExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;castExpr&#8203;(antlr.collections.AST&nbsp;_t)
                    throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="unaryExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>unaryExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;unaryExpr&#8203;(antlr.collections.AST&nbsp;_t)
                     throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="postfixExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>postfixExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;postfixExpr&#8203;(antlr.collections.AST&nbsp;_t)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="primaryExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>primaryExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;primaryExpr&#8203;(antlr.collections.AST&nbsp;_t)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="commaExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>commaExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;commaExpr&#8203;(antlr.collections.AST&nbsp;_t)
                     throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="emptyExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>emptyExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;emptyExpr&#8203;(antlr.collections.AST&nbsp;_t)
                     throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="compoundStatementExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compoundStatementExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;compoundStatementExpr&#8203;(antlr.collections.AST&nbsp;_t)
                                 throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="rangeExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rangeExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;rangeExpr&#8203;(antlr.collections.AST&nbsp;_t)
                     throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="gnuAsmExpr(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>gnuAsmExpr</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;gnuAsmExpr&#8203;(antlr.collections.AST&nbsp;_t)
                      throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="stringConst(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stringConst</h4>
<pre class="methodSignature">protected final&nbsp;void&nbsp;stringConst&#8203;(antlr.collections.AST&nbsp;_t)
                          throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="strOptExprPair(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>strOptExprPair</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;strOptExprPair&#8203;(antlr.collections.AST&nbsp;_t)
                          throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="unaryOperator(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>unaryOperator</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;unaryOperator&#8203;(antlr.collections.AST&nbsp;_t)
                         throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="argExprList(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>argExprList</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;argExprList&#8203;(antlr.collections.AST&nbsp;_t)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="charConst(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>charConst</h4>
<pre class="methodSignature">protected final&nbsp;void&nbsp;charConst&#8203;(antlr.collections.AST&nbsp;_t)
                        throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="intConst(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>intConst</h4>
<pre class="methodSignature">protected final&nbsp;void&nbsp;intConst&#8203;(antlr.collections.AST&nbsp;_t)
                       throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
<a id="floatConst(antlr.collections.AST)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>floatConst</h4>
<pre class="methodSignature">protected final&nbsp;void&nbsp;floatConst&#8203;(antlr.collections.AST&nbsp;_t)
                         throws antlr.RecognitionException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>antlr.RecognitionException</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/gluegen/cgram/HeaderParser.html" target="_top">Frames</a></li>
<li><a href="HeaderParser.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</body>
</html>
