<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:33 CET 2023 -->
<title>AnimatorBase (JOGL API -- 2.4 Specification)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="AnimatorBase (JOGL API -- 2.4 Specification)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/util/AnimatorBase.html" target="_top">Frames</a></li>
<li><a href="AnimatorBase.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl.util</a></div>
<h2 title="Class AnimatorBase" class="title">Class AnimatorBase</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.util.AnimatorBase</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code>, <code><a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></code></dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><code><a href="Animator.html" title="class in com.jogamp.opengl.util">Animator</a></code>, <code><a href="FPSAnimator.html" title="class in com.jogamp.opengl.util">FPSAnimator</a></code></dd>
</dl>
<hr>
<pre>public abstract class <span class="typeNameLabel">AnimatorBase</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>
implements <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></pre>
<div class="block">Base implementation of GLAnimatorControl<br>
 <p>
 The change synchronization is done via synchronized blocks on the AnimatorBase instance.<br>
 Status get / set activity is synced with a RecursiveLock, used as a memory barrier.<br>
 This is suitable, since all change requests are allowed to be expensive
 as they are not expected to be called at every frame.
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Class</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static interface&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="AnimatorBase.AnimatorImpl.html" title="interface in com.jogamp.opengl.util">AnimatorBase.AnimatorImpl</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="AnimatorBase.UncaughtAnimatorException.html" title="class in com.jogamp.opengl.util">AnimatorBase.UncaughtAnimatorException</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="nested.classes.inherited.from.class.com.jogamp.opengl.GLAnimatorControl">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from interface&nbsp;com.jogamp.opengl.<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></h3>
<code><a href="../GLAnimatorControl.UncaughtExceptionHandler.html" title="interface in com.jogamp.opengl">GLAnimatorControl.UncaughtExceptionHandler</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#MODE_EXPECT_AWT_RENDERING_THREAD">MODE_EXPECT_AWT_RENDERING_THREAD</a></span></code></th>
<td class="colLast">
<div class="block">If present in <code>modeBits</code> field and
 <a href="../GLProfile.html#isAWTAvailable()"><code>AWT is available</code></a>,
 implementation is aware of the AWT EDT, otherwise not.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.jogamp.opengl.FPSCounter">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;com.jogamp.opengl.<a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></h3>
<code><a href="../FPSCounter.html#DEFAULT_FRAMES_PER_INTERVAL">DEFAULT_FRAMES_PER_INTERVAL</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E()">AnimatorBase</a></span>()</code></th>
<td class="colLast">
<div class="block">Creates a new, empty Animator instance
 while expecting an AWT rendering thread if AWT is available.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#add(com.jogamp.opengl.GLAutoDrawable)">add</a></span>&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;drawable)</code></th>
<td class="colLast">
<div class="block">Adds a drawable to this animator's list of rendering drawables.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getExclusiveContextThread()">getExclusiveContextThread</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the exclusive context thread if <a href="#isExclusiveContextEnabled()"><code>isExclusiveContextEnabled()</code></a> and <a href="#isStarted()"><code>isStarted()</code></a>, otherwise <code>null</code>.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFPSStartTime()">getFPSStartTime</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the time of the first display call in milliseconds after enabling this feature via <a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>.<br>
 This value is reset via <a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a>.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getLastFPS()">getLastFPS</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getLastFPSPeriod()">getLastFPSPeriod</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getLastFPSUpdateTime()">getLastFPSUpdateTime</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the time of the last update interval in milliseconds, if this feature is enabled via <a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>.<br>
 This value is reset via <a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a>.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getModeBits()">getModeBits</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getThread()">getThread</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTotalFPS()">getTotalFPS</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTotalFPSDuration()">getTotalFPSDuration</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTotalFPSFrames()">getTotalFPSFrames</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code><a href="../GLAnimatorControl.UncaughtExceptionHandler.html" title="interface in com.jogamp.opengl">GLAnimatorControl.UncaughtExceptionHandler</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getUncaughtExceptionHandler()">getUncaughtExceptionHandler</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="../GLAnimatorControl.UncaughtExceptionHandler.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl.UncaughtExceptionHandler</code></a> invoked when this <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>animator</code></a> abruptly <a href="../GLAnimatorControl.html#stop()"><code>stops</code></a>
 due to an uncaught exception from one of its <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>s.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getUpdateFPSFrames()">getUpdateFPSFrames</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isExclusiveContextEnabled()">isExclusiveContextEnabled</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns <code>true</code>, if the exclusive context thread is enabled, otherwise <code>false</code>.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isStarted()">isStarted</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this animator has been <a href="../GLAnimatorControl.html#start()"><code>started</code></a>.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#remove(com.jogamp.opengl.GLAutoDrawable)">remove</a></span>&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;drawable)</code></th>
<td class="colLast">
<div class="block">Removes a drawable from the animator's list of rendering drawables.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#resetFPSCounter()">resetFPSCounter</a></span>()</code></th>
<td class="colLast">
<div class="block">Reset all performance counter (startTime, currentTime, frame number)</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setExclusiveContext(boolean)">setExclusiveContext</a></span>&#8203;(boolean&nbsp;enable)</code></th>
<td class="colLast">
<div class="block">Dedicate all <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s context to this animator thread.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setExclusiveContext(java.lang.Thread)">setExclusiveContext</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;t)</code></th>
<td class="colLast">
<div class="block">Dedicate all <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s context to the given exclusive context thread.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setIgnoreExceptions(boolean)">setIgnoreExceptions</a></span>&#8203;(boolean&nbsp;ignoreExceptions)</code></th>
<td class="colLast">
<div class="block">Sets a flag causing this Animator to ignore exceptions produced
    while redrawing the drawables.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setModeBits(boolean,int)">setModeBits</a></span>&#8203;(boolean&nbsp;enable,
           int&nbsp;bitValues)</code></th>
<td class="colLast">
<div class="block">Enables or disables the given <code>bitValues</code>
 in this Animators <code>modeBits</code>.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setPrintExceptions(boolean)">setPrintExceptions</a></span>&#8203;(boolean&nbsp;printExceptions)</code></th>
<td class="colLast">
<div class="block">Sets a flag indicating that when exceptions are being ignored by
    this Animator (see <a href="#setIgnoreExceptions(boolean)"><code>setIgnoreExceptions(boolean)</code></a>), to print the
    exceptions' stack traces for diagnostic information.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setUncaughtExceptionHandler(com.jogamp.opengl.GLAnimatorControl.UncaughtExceptionHandler)">setUncaughtExceptionHandler</a></span>&#8203;(<a href="../GLAnimatorControl.UncaughtExceptionHandler.html" title="interface in com.jogamp.opengl">GLAnimatorControl.UncaughtExceptionHandler</a>&nbsp;handler)</code></th>
<td class="colLast">
<div class="block">Set the handler invoked when this <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>animator</code></a> abruptly <a href="../GLAnimatorControl.html#stop()"><code>stops</code></a>
 due to an uncaught exception from one of its <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>s.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setUpdateFPSFrames(int,java.io.PrintStream)">setUpdateFPSFrames</a></span>&#8203;(int&nbsp;frames,
                  <a href="http://docs.oracle.com/javase/6/docs/api/java/io/PrintStream.html?is-external=true" title="class or interface in java.io" class="externalLink">PrintStream</a>&nbsp;out)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.opengl.GLAnimatorControl">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.opengl.<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></h3>
<code><a href="../GLAnimatorControl.html#isAnimating()">isAnimating</a>, <a href="../GLAnimatorControl.html#isPaused()">isPaused</a>, <a href="../GLAnimatorControl.html#pause()">pause</a>, <a href="../GLAnimatorControl.html#resume()">resume</a>, <a href="../GLAnimatorControl.html#start()">start</a>, <a href="../GLAnimatorControl.html#stop()">stop</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="MODE_EXPECT_AWT_RENDERING_THREAD">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>MODE_EXPECT_AWT_RENDERING_THREAD</h4>
<pre>public static final&nbsp;int MODE_EXPECT_AWT_RENDERING_THREAD</pre>
<div class="block">If present in <code>modeBits</code> field and
 <a href="../GLProfile.html#isAWTAvailable()"><code>AWT is available</code></a>,
 implementation is aware of the AWT EDT, otherwise not.
 <p>
 This is the <i>default</i>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setModeBits(boolean,int)"><code>setModeBits(boolean, int)</code></a>, 
<a href="../../../../constant-values.html#com.jogamp.opengl.util.AnimatorBase.MODE_EXPECT_AWT_RENDERING_THREAD">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>AnimatorBase</h4>
<pre>public&nbsp;AnimatorBase()</pre>
<div class="block">Creates a new, empty Animator instance
 while expecting an AWT rendering thread if AWT is available.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLProfile.html#isAWTAvailable()"><code>GLProfile.isAWTAvailable()</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="setModeBits(boolean,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setModeBits</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setModeBits&#8203;(boolean&nbsp;enable,
                              int&nbsp;bitValues)
                       throws <a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Enables or disables the given <code>bitValues</code>
 in this Animators <code>modeBits</code>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>enable</code> - </dd>
<dd><code>bitValues</code> - </dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if Animator is <a href="#isStarted()"><code>isStarted()</code></a> and <a href="#MODE_EXPECT_AWT_RENDERING_THREAD"><code>MODE_EXPECT_AWT_RENDERING_THREAD</code></a> about to change</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#MODE_EXPECT_AWT_RENDERING_THREAD"><code>MODE_EXPECT_AWT_RENDERING_THREAD</code></a></dd>
</dl>
</li>
</ul>
<a id="getModeBits()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getModeBits</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getModeBits()</pre>
</li>
</ul>
<a id="add(com.jogamp.opengl.GLAutoDrawable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>add</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;add&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;drawable)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAnimatorControl.html#add(com.jogamp.opengl.GLAutoDrawable)">GLAnimatorControl</a></code></span></div>
<div class="block">Adds a drawable to this animator's list of rendering drawables.
 <p>
 This allows the animator thread to become <a href="../GLAnimatorControl.html#isAnimating()"><code>animating</code></a>,
 in case the first drawable is added and the animator <a href="../GLAnimatorControl.html#isStarted()"><code>is started</code></a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAnimatorControl.html#add(com.jogamp.opengl.GLAutoDrawable)">add</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>drawable</code> - the drawable to be added</dd>
</dl>
</li>
</ul>
<a id="remove(com.jogamp.opengl.GLAutoDrawable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>remove</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;remove&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;drawable)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAnimatorControl.html#remove(com.jogamp.opengl.GLAutoDrawable)">GLAnimatorControl</a></code></span></div>
<div class="block">Removes a drawable from the animator's list of rendering drawables.
 <p>
 This method should get called in case a drawable becomes invalid,
 and will not be recovered.
 </p>
 <p>
 This allows the animator thread to become <a href="../GLAnimatorControl.html#isAnimating()"><code>not animating</code></a>,
 in case the last drawable has been removed.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAnimatorControl.html#remove(com.jogamp.opengl.GLAutoDrawable)">remove</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>drawable</code> - the drawable to be removed</dd>
</dl>
</li>
</ul>
<a id="setExclusiveContext(java.lang.Thread)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setExclusiveContext</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;setExclusiveContext&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;t)</pre>
<div class="block">Dedicate all <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s context to the given exclusive context thread.
 <p>
 The given thread will be exclusive to all <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s context while <a href="../GLAnimatorControl.html#isAnimating()"><code>GLAnimatorControl.isAnimating()</code></a>.
 </p>
 <p>
 If already started and disabling, method waits
 until change is propagated to all <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> if not
 called from the animator thread or <a href="#getExclusiveContextThread()"><code>exclusive context thread</code></a>.
 </p>
 <p>
 Note: Utilizing this feature w/ AWT could lead to an AWT-EDT deadlock, depending on the AWT implementation.
 Hence it is advised not to use it with native AWT GLAutoDrawable like GLCanvas.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>enable</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>previous value</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setExclusiveContext(boolean)"><code>setExclusiveContext(boolean)</code></a>, 
<a href="#getExclusiveContextThread()"><code>getExclusiveContextThread()</code></a>, 
<a href="#isExclusiveContextEnabled()"><code>isExclusiveContextEnabled()</code></a></dd>
</dl>
</li>
</ul>
<a id="setExclusiveContext(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setExclusiveContext</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;setExclusiveContext&#8203;(boolean&nbsp;enable)</pre>
<div class="block">Dedicate all <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s context to this animator thread.
 <p>
 The given thread will be exclusive to all <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s context while <a href="../GLAnimatorControl.html#isAnimating()"><code>GLAnimatorControl.isAnimating()</code></a>.
 </p>
 <p>
 If already started and disabling, method waits
 until change is propagated to all <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> if not
 called from the animator thread or <a href="#getExclusiveContextThread()"><code>exclusive context thread</code></a>.
 </p>
 <p>
 Note: Utilizing this feature w/ AWT could lead to an AWT-EDT deadlock, depending on the AWT implementation.
 Hence it is advised not to use it with native AWT GLAutoDrawable like GLCanvas.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>enable</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>previous value</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setExclusiveContext(java.lang.Thread)"><code>setExclusiveContext(Thread)</code></a>, 
<a href="#getExclusiveContextThread()"><code>getExclusiveContextThread()</code></a>, 
<a href="#isExclusiveContextEnabled()"><code>isExclusiveContextEnabled()</code></a></dd>
</dl>
</li>
</ul>
<a id="isExclusiveContextEnabled()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isExclusiveContextEnabled</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isExclusiveContextEnabled()</pre>
<div class="block">Returns <code>true</code>, if the exclusive context thread is enabled, otherwise <code>false</code>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setExclusiveContext(boolean)"><code>setExclusiveContext(boolean)</code></a>, 
<a href="#setExclusiveContext(java.lang.Thread)"><code>setExclusiveContext(Thread)</code></a></dd>
</dl>
</li>
</ul>
<a id="getExclusiveContextThread()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getExclusiveContextThread</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;getExclusiveContextThread()</pre>
<div class="block">Returns the exclusive context thread if <a href="#isExclusiveContextEnabled()"><code>isExclusiveContextEnabled()</code></a> and <a href="#isStarted()"><code>isStarted()</code></a>, otherwise <code>null</code>.
 <p>
 If exclusive context is enabled via <a href="#setExclusiveContext(boolean)"><code>setExclusiveContext(boolean)</code></a>
 the <a href="#getThread()"><code>animator thread</code></a> is returned if above conditions are met.
 </p>
 <p>
 If exclusive context is enabled via <a href="#setExclusiveContext(java.lang.Thread)"><code>setExclusiveContext(Thread)</code></a>
 the user passed thread is returned if above conditions are met.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setExclusiveContext(boolean)"><code>setExclusiveContext(boolean)</code></a>, 
<a href="#setExclusiveContext(java.lang.Thread)"><code>setExclusiveContext(Thread)</code></a></dd>
</dl>
</li>
</ul>
<a id="getThread()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getThread</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;getThread()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAnimatorControl.html#getThread()">getThread</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The animation thread if running, otherwise null.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAnimatorControl.html#start()"><code>GLAnimatorControl.start()</code></a>, 
<a href="../GLAnimatorControl.html#stop()"><code>GLAnimatorControl.stop()</code></a></dd>
</dl>
</li>
</ul>
<a id="setUpdateFPSFrames(int,java.io.PrintStream)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setUpdateFPSFrames</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setUpdateFPSFrames&#8203;(int&nbsp;frames,
                                     <a href="http://docs.oracle.com/javase/6/docs/api/java/io/PrintStream.html?is-external=true" title="class or interface in java.io" class="externalLink">PrintStream</a>&nbsp;out)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)">setUpdateFPSFrames</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>frames</code> - Update interval in frames.<br> At every rendered <i>frames</i> interval the currentTime and fps values are updated.
        If the <i>frames</i> interval is <= 0, no update will be issued, ie the FPSCounter feature is turned off. You may choose <a href="../FPSCounter.html#DEFAULT_FRAMES_PER_INTERVAL"><code>FPSCounter.DEFAULT_FRAMES_PER_INTERVAL</code></a>.</dd>
<dd><code>out</code> - optional print stream where the fps values gets printed if not null at every <i>frames</i> interval</dd>
</dl>
</li>
</ul>
<a id="resetFPSCounter()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>resetFPSCounter</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;resetFPSCounter()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../FPSCounter.html#resetFPSCounter()">FPSCounter</a></code></span></div>
<div class="block">Reset all performance counter (startTime, currentTime, frame number)</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#resetFPSCounter()">resetFPSCounter</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
</dl>
</li>
</ul>
<a id="getUpdateFPSFrames()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getUpdateFPSFrames</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;getUpdateFPSFrames()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#getUpdateFPSFrames()">getUpdateFPSFrames</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>update interval in frames</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a></dd>
</dl>
</li>
</ul>
<a id="getFPSStartTime()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFPSStartTime</h4>
<pre class="methodSignature">public final&nbsp;long&nbsp;getFPSStartTime()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../FPSCounter.html#getFPSStartTime()">FPSCounter</a></code></span></div>
<div class="block">Returns the time of the first display call in milliseconds after enabling this feature via <a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>.<br>
 This value is reset via <a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a>.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#getFPSStartTime()">getFPSStartTime</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>, 
<a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a></dd>
</dl>
</li>
</ul>
<a id="getLastFPSUpdateTime()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastFPSUpdateTime</h4>
<pre class="methodSignature">public final&nbsp;long&nbsp;getLastFPSUpdateTime()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../FPSCounter.html#getLastFPSUpdateTime()">FPSCounter</a></code></span></div>
<div class="block">Returns the time of the last update interval in milliseconds, if this feature is enabled via <a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>.<br>
 This value is reset via <a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a>.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#getLastFPSUpdateTime()">getLastFPSUpdateTime</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>, 
<a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a></dd>
</dl>
</li>
</ul>
<a id="getLastFPSPeriod()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastFPSPeriod</h4>
<pre class="methodSignature">public final&nbsp;long&nbsp;getLastFPSPeriod()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#getLastFPSPeriod()">getLastFPSPeriod</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Duration of the last update interval in milliseconds.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>, 
<a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a></dd>
</dl>
</li>
</ul>
<a id="getLastFPS()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastFPS</h4>
<pre class="methodSignature">public final&nbsp;float&nbsp;getLastFPS()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#getLastFPS()">getLastFPS</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Last update interval's frames per seconds, <a href="../FPSCounter.html#getUpdateFPSFrames()"><code>FPSCounter.getUpdateFPSFrames()</code></a> / <a href="../FPSCounter.html#getLastFPSPeriod()"><code>FPSCounter.getLastFPSPeriod()</code></a></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>, 
<a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a></dd>
</dl>
</li>
</ul>
<a id="getTotalFPSFrames()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTotalFPSFrames</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;getTotalFPSFrames()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#getTotalFPSFrames()">getTotalFPSFrames</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Number of frame rendered since <a href="../FPSCounter.html#getFPSStartTime()"><code>FPSCounter.getFPSStartTime()</code></a> up to <a href="../FPSCounter.html#getLastFPSUpdateTime()"><code>FPSCounter.getLastFPSUpdateTime()</code></a></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>, 
<a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a></dd>
</dl>
</li>
</ul>
<a id="getTotalFPSDuration()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTotalFPSDuration</h4>
<pre class="methodSignature">public final&nbsp;long&nbsp;getTotalFPSDuration()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#getTotalFPSDuration()">getTotalFPSDuration</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Total duration in milliseconds, <a href="../FPSCounter.html#getLastFPSUpdateTime()"><code>FPSCounter.getLastFPSUpdateTime()</code></a> - <a href="../FPSCounter.html#getFPSStartTime()"><code>FPSCounter.getFPSStartTime()</code></a></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>, 
<a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a></dd>
</dl>
</li>
</ul>
<a id="getTotalFPS()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTotalFPS</h4>
<pre class="methodSignature">public final&nbsp;float&nbsp;getTotalFPS()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../FPSCounter.html#getTotalFPS()">getTotalFPS</a></code>&nbsp;in interface&nbsp;<code><a href="../FPSCounter.html" title="interface in com.jogamp.opengl">FPSCounter</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Total frames per seconds, <a href="../FPSCounter.html#getTotalFPSFrames()"><code>FPSCounter.getTotalFPSFrames()</code></a> / <a href="../FPSCounter.html#getTotalFPSDuration()"><code>FPSCounter.getTotalFPSDuration()</code></a></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../FPSCounter.html#setUpdateFPSFrames(int,java.io.PrintStream)"><code>FPSCounter.setUpdateFPSFrames(int, PrintStream)</code></a>, 
<a href="../FPSCounter.html#resetFPSCounter()"><code>FPSCounter.resetFPSCounter()</code></a></dd>
</dl>
</li>
</ul>
<a id="setIgnoreExceptions(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setIgnoreExceptions</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setIgnoreExceptions&#8203;(boolean&nbsp;ignoreExceptions)</pre>
<div class="block">Sets a flag causing this Animator to ignore exceptions produced
    while redrawing the drawables. By default this flag is set to
    false, causing any exception thrown to halt the Animator.</div>
</li>
</ul>
<a id="setPrintExceptions(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPrintExceptions</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setPrintExceptions&#8203;(boolean&nbsp;printExceptions)</pre>
<div class="block">Sets a flag indicating that when exceptions are being ignored by
    this Animator (see <a href="#setIgnoreExceptions(boolean)"><code>setIgnoreExceptions(boolean)</code></a>), to print the
    exceptions' stack traces for diagnostic information. Defaults to
    false.</div>
</li>
</ul>
<a id="getUncaughtExceptionHandler()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getUncaughtExceptionHandler</h4>
<pre class="methodSignature">public final&nbsp;<a href="../GLAnimatorControl.UncaughtExceptionHandler.html" title="interface in com.jogamp.opengl">GLAnimatorControl.UncaughtExceptionHandler</a>&nbsp;getUncaughtExceptionHandler()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAnimatorControl.html#getUncaughtExceptionHandler()">GLAnimatorControl</a></code></span></div>
<div class="block">Returns the <a href="../GLAnimatorControl.UncaughtExceptionHandler.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl.UncaughtExceptionHandler</code></a> invoked when this <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>animator</code></a> abruptly <a href="../GLAnimatorControl.html#stop()"><code>stops</code></a>
 due to an uncaught exception from one of its <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>s.
 <p>
 Default is <code>null</code>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAnimatorControl.html#getUncaughtExceptionHandler()">getUncaughtExceptionHandler</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></code></dd>
</dl>
</li>
</ul>
<a id="setUncaughtExceptionHandler(com.jogamp.opengl.GLAnimatorControl.UncaughtExceptionHandler)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setUncaughtExceptionHandler</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setUncaughtExceptionHandler&#8203;(<a href="../GLAnimatorControl.UncaughtExceptionHandler.html" title="interface in com.jogamp.opengl">GLAnimatorControl.UncaughtExceptionHandler</a>&nbsp;handler)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAnimatorControl.html#setUncaughtExceptionHandler(com.jogamp.opengl.GLAnimatorControl.UncaughtExceptionHandler)">GLAnimatorControl</a></code></span></div>
<div class="block">Set the handler invoked when this <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>animator</code></a> abruptly <a href="../GLAnimatorControl.html#stop()"><code>stops</code></a>
 due to an uncaught exception from one of its <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>s.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAnimatorControl.html#setUncaughtExceptionHandler(com.jogamp.opengl.GLAnimatorControl.UncaughtExceptionHandler)">setUncaughtExceptionHandler</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>handler</code> - the <a href="../GLAnimatorControl.UncaughtExceptionHandler.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl.UncaughtExceptionHandler</code></a> to use as this <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>animator</code></a>'s uncaught exception
 handler. Pass <code>null</code> to unset the handler.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAnimatorControl.UncaughtExceptionHandler.html#uncaughtException(com.jogamp.opengl.GLAnimatorControl,com.jogamp.opengl.GLAutoDrawable,java.lang.Throwable)"><code>GLAnimatorControl.UncaughtExceptionHandler.uncaughtException(GLAnimatorControl, GLAutoDrawable, Throwable)</code></a></dd>
</dl>
</li>
</ul>
<a id="isStarted()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isStarted</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;isStarted()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAnimatorControl.html#isStarted()">GLAnimatorControl</a></code></span></div>
<div class="block">Indicates whether this animator has been <a href="../GLAnimatorControl.html#start()"><code>started</code></a>.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAnimatorControl.html#isStarted()">isStarted</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAnimatorControl.html#start()"><code>GLAnimatorControl.start()</code></a>, 
<a href="../GLAnimatorControl.html#stop()"><code>GLAnimatorControl.stop()</code></a>, 
<a href="../GLAnimatorControl.html#isPaused()"><code>GLAnimatorControl.isPaused()</code></a>, 
<a href="../GLAnimatorControl.html#pause()"><code>GLAnimatorControl.pause()</code></a>, 
<a href="../GLAnimatorControl.html#resume()"><code>GLAnimatorControl.resume()</code></a></dd>
</dl>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/util/AnimatorBase.html" target="_top">Frames</a></li>
<li><a href="AnimatorBase.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
