<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:33 CET 2023 -->
<title>GLDrawableUtil (JOGL API -- 2.4 Specification)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GLDrawableUtil (JOGL API -- 2.4 Specification)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9,"i5":9,"i6":9,"i7":9,"i8":9,"i9":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/util/GLDrawableUtil.html" target="_top">Frames</a></li>
<li><a href="GLDrawableUtil.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl.util</a></div>
<h2 title="Class GLDrawableUtil" class="title">Class GLDrawableUtil</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.util.GLDrawableUtil</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public class <span class="typeNameLabel">GLDrawableUtil</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Providing utility functions dealing w/ <a href="../GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>s, <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> and their <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Class</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="GLDrawableUtil.ReshapeGLEventListener.html" title="class in com.jogamp.opengl.util">GLDrawableUtil.ReshapeGLEventListener</a></span></code></th>
<td class="colLast">
<div class="block"><a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a> to issue <a href="../GLEventListener.html#reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)"><code>GLEventListener.reshape(GLAutoDrawable, int, int, int, int)</code></a>,
 returning <code>true</code> on <a href="../GLRunnable.html#run(com.jogamp.opengl.GLAutoDrawable)"><code>GLRunnable.run(GLAutoDrawable)</code></a>.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E()">GLDrawableUtil</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isAnimatorAnimating(com.jogamp.opengl.GLAnimatorControl)">isAnimatorAnimating</a></span>&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;animatorCtrl)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isAnimatorAnimatingOnOtherThread(com.jogamp.opengl.GLAnimatorControl)">isAnimatorAnimatingOnOtherThread</a></span>&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;animatorCtrl)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isAnimatorStarted(com.jogamp.opengl.GLAnimatorControl)">isAnimatorStarted</a></span>&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;animatorCtrl)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isAnimatorStartedOnOtherThread(com.jogamp.opengl.GLAnimatorControl)">isAnimatorStartedOnOtherThread</a></span>&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;animatorCtrl)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isSwapGLContextSafe(com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesImmutable)">isSwapGLContextSafe</a></span>&#8203;(<a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;requestedCaps,
                   <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;chosenCapsA,
                   <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;chosenCapsB)</code></th>
<td class="colLast">
<div class="block">Return a heuristic value whether switching the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> is safe between <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>s,
 i.e.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#moveAllGLEventListener(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable,boolean)">moveAllGLEventListener</a></span>&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;src,
                      <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;dest,
                      boolean&nbsp;preserveInitState)</code></th>
<td class="colLast">
<div class="block">Moves all <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> from <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> <code>src</code> to <code>dest</code>.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#moveGLEventListener(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLEventListener,boolean)">moveGLEventListener</a></span>&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;src,
                   <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;dest,
                   <a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener,
                   boolean&nbsp;preserveInitState)</code></th>
<td class="colLast">
<div class="block">Moves the designated <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> from <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> <code>src</code> to <code>dest</code>.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#swapBuffersBeforeRead(com.jogamp.opengl.GLCapabilitiesImmutable)">swapBuffersBeforeRead</a></span>&#8203;(<a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;chosenCaps)</code></th>
<td class="colLast">
<div class="block">Determines whether the chosen <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>
 requires a <a href="../GLDrawable.html#swapBuffers()"><code>swap-buffers</code></a>
 before reading pixels.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#swapGLContext(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable)">swapGLContext</a></span>&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;a,
             <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;b)</code></th>
<td class="colLast">
<div class="block">Swaps the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> of given <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>
 and <a href="../GLAutoDrawable.html#disposeGLEventListener(com.jogamp.opengl.GLEventListener,boolean)"><code>disposes</code></a>
 each <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> w/o removing it.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#swapGLContextAndAllGLEventListener(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable)">swapGLContextAndAllGLEventListener</a></span>&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;a,
                                  <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;b)</code></th>
<td class="colLast">
<div class="block">Swaps the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> and all <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> between <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> <code>a</code> and <code>b</code>,
 while preserving it's initialized state, resets the GL-Viewport and issuing <a href="../GLEventListener.html#reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)"><code>reshape(..)</code></a>.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>GLDrawableUtil</h4>
<pre>public&nbsp;GLDrawableUtil()</pre>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="isAnimatorStartedOnOtherThread(com.jogamp.opengl.GLAnimatorControl)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAnimatorStartedOnOtherThread</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isAnimatorStartedOnOtherThread&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;animatorCtrl)</pre>
</li>
</ul>
<a id="isAnimatorStarted(com.jogamp.opengl.GLAnimatorControl)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAnimatorStarted</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isAnimatorStarted&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;animatorCtrl)</pre>
</li>
</ul>
<a id="isAnimatorAnimatingOnOtherThread(com.jogamp.opengl.GLAnimatorControl)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAnimatorAnimatingOnOtherThread</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isAnimatorAnimatingOnOtherThread&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;animatorCtrl)</pre>
</li>
</ul>
<a id="isAnimatorAnimating(com.jogamp.opengl.GLAnimatorControl)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAnimatorAnimating</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isAnimatorAnimating&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;animatorCtrl)</pre>
</li>
</ul>
<a id="moveGLEventListener(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLEventListener,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveGLEventListener</h4>
<pre class="methodSignature">public static final&nbsp;void&nbsp;moveGLEventListener&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;src,
                                             <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;dest,
                                             <a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener,
                                             boolean&nbsp;preserveInitState)</pre>
<div class="block">Moves the designated <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> from <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> <code>src</code> to <code>dest</code>.
 If <code>preserveInitState</code> is <code>true</code>, it's initialized state is preserved
 and <a href="../GLEventListener.html#reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)"><code>reshape(..)</code></a> issued w/ the next <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> call.
 <p>
 Note that it is only legal to pass <code>preserveInitState := true</code>,
 if the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> of both <code>src</code> and <code>dest</code> are shared, or has itself moved from <code>src</code> to <code>dest</code>.
 </p>
 <p>
 Also note that the caller is encouraged to pause an attached <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>src</code> - </dd>
<dd><code>dest</code> - </dd>
<dd><code>listener</code> - </dd>
<dd><code>preserveInitState</code> - </dd>
</dl>
</li>
</ul>
<a id="moveAllGLEventListener(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveAllGLEventListener</h4>
<pre class="methodSignature">public static final&nbsp;void&nbsp;moveAllGLEventListener&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;src,
                                                <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;dest,
                                                boolean&nbsp;preserveInitState)</pre>
<div class="block">Moves all <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> from <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> <code>src</code> to <code>dest</code>.
 If <code>preserveInitState</code> is <code>true</code>, it's initialized state is preserved
 and <a href="../GLEventListener.html#reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)"><code>reshape(..)</code></a> issued w/ the next <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> call.
 <p>
 Note that it is only legal to pass <code>preserveInitState := true</code>,
 if the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> of both <code>src</code> and <code>dest</code> are shared, or has itself moved from <code>src</code> to <code>dest</code>.
 </p>
 <p>
 Also note that the caller is encouraged to pause an attached <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>src</code> - </dd>
<dd><code>dest</code> - </dd>
<dd><code>listener</code> - </dd>
<dd><code>preserveInitState</code> - </dd>
</dl>
</li>
</ul>
<a id="isSwapGLContextSafe(com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesImmutable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isSwapGLContextSafe</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isSwapGLContextSafe&#8203;(<a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;requestedCaps,
                                          <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;chosenCapsA,
                                          <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;chosenCapsB)</pre>
<div class="block">Return a heuristic value whether switching the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> is safe between <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>s,
 i.e. via <a href="#swapGLContext(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable)"><code>swapGLContext(GLAutoDrawable, GLAutoDrawable)</code></a> or <a href="#swapGLContextAndAllGLEventListener(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable)"><code>swapGLContextAndAllGLEventListener(GLAutoDrawable, GLAutoDrawable)</code></a>.
 <p>
 Method currently returns <code>false</code> if:
 <ul>
   <li>Switching between on- and offscreen and one of the following is <code>true</code>:
     <ul>
       <li><a href="../GLCapabilitiesImmutable.html#getSampleBuffers()"><code>MSAA is <i>used</i></code></a> [1] in <code>chosenCapsA</code> or <code>chosenCapsB</code></li>
       <li><a href="../GLCapabilitiesImmutable.html#getStereo()"><code>Stereo is <i>used</i></code></a> in <code>chosenCapsA</code> or <code>chosenCapsB</code></li>
       <li><a href="../GLCapabilitiesImmutable.html#getAccumAlphaBits()"><code>Accumulator Buffer is <i>requested</i></code></a> [2] in <code>requestedCaps</code></li>
     </ul></li>
 </ul>
 Otherwise method returns <code>true</code>
 </p>
 <pre>
 [1] See Bug 830: swapGLContextAndAllGLEventListener and onscreen MSAA w/ NV/GLX
     On NVidia GPUs w/ it's proprietary driver context swapping does not work if MSAA is involved
     and when swapping on- to offscreen.
 </pre>
 <pre>
 [2] On AMD GPUs w/ it's proprietary driver, requesting an accumulator buffer leads to receive an accumulator buffer configuration,
     for which context swapping does not work when swapping on- to offscreen and vice-versa, i.e. cannot make context current.
     With AMD and Mesa drivers we only receive an accumulator buffer if requested,
     where on NVidia drivers all configurations contain the accumulator buffer.
     On both drivers, NVidia and Mesa, context swapping with accumulator buffer works.
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>requestedCaps</code> - requested <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> which are intended for usage by both <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>s A and B</dd>
<dd><code>chosenCapsA</code> - chosen <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> of <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> A, which <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> is intended to be swapped</dd>
<dd><code>chosenCapsB</code> - chosen <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> of <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> B, which <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> is intended to be swapped</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#swapGLContext(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable)"><code>swapGLContext(GLAutoDrawable, GLAutoDrawable)</code></a>, 
<a href="#swapGLContextAndAllGLEventListener(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable)"><code>swapGLContextAndAllGLEventListener(GLAutoDrawable, GLAutoDrawable)</code></a></dd>
</dl>
</li>
</ul>
<a id="swapGLContextAndAllGLEventListener(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>swapGLContextAndAllGLEventListener</h4>
<pre class="methodSignature">public static final&nbsp;void&nbsp;swapGLContextAndAllGLEventListener&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;a,
                                                            <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;b)</pre>
<div class="block">Swaps the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> and all <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> between <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> <code>a</code> and <code>b</code>,
 while preserving it's initialized state, resets the GL-Viewport and issuing <a href="../GLEventListener.html#reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)"><code>reshape(..)</code></a>.
 <p>
 The <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> to <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> association
 is also swapped.
 </p>
 <p>
 If an <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> is being attached to <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> <code>a</code> or <code>b</code>
 and the current thread is different than <a href="../GLAnimatorControl.html#getThread()"><code>the animator's thread</code></a>, it is paused during the operation.
 </p>
 <p>
 During operation, both <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>auto-drawable's</code></a>
 <a href="../GLAutoDrawable.html#getUpstreamLock()"><code>upstream-locks</code></a> and <a href="../GLDrawable.html#getNativeSurface()"><code>surfaces</code></a> are locked,
 hence atomicity of operation is guaranteed,
 see <a href="../../../../com/jogamp/opengl/GLAutoDrawable.html#locking">GLAutoDrawable Locking</a>.
 </p>
 <p>
 Because of above mentioned locking, if this method is not performed
 on <a href="../GLAutoDrawable.html#isThreadGLCapable()"><code>a OpenGL capable thread</code></a> of <i>both</i>
 <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>s, it must be invoked on such an OpenGL capable thread,
 e.g. via <a href="../Threading.html#invokeOnOpenGLThread(boolean,java.lang.Runnable)"><code>Threading.invokeOnOpenGLThread(boolean, Runnable)</code></a>.
 </p></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if the <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/AbstractGraphicsDevice.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>AbstractGraphicsDevice</code></a> are incompatible w/ each other.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isSwapGLContextSafe(com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesImmutable)"><code>isSwapGLContextSafe(GLCapabilitiesImmutable, GLCapabilitiesImmutable, GLCapabilitiesImmutable)</code></a></dd>
</dl>
</li>
</ul>
<a id="swapGLContext(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>swapGLContext</h4>
<pre class="methodSignature">public static final&nbsp;void&nbsp;swapGLContext&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;a,
                                       <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;b)</pre>
<div class="block">Swaps the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> of given <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>
 and <a href="../GLAutoDrawable.html#disposeGLEventListener(com.jogamp.opengl.GLEventListener,boolean)"><code>disposes</code></a>
 each <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> w/o removing it.
 <p>
 The GL-Viewport is reset and <a href="../GLEventListener.html#reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)"><code>reshape(..)</code></a> issued implicit.
 </p>
 <p>
 If an <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> is being attached to GLAutoDrawable src or dest and the current thread is different
 than <a href="../GLAnimatorControl.html#getThread()"><code>the animator's thread</code></a>, it is paused during the operation.
 </p>
 <p>
 During operation, both <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>auto-drawable's</code></a>
 <a href="../GLAutoDrawable.html#getUpstreamLock()"><code>upstream-locks</code></a> and <a href="../GLDrawable.html#getNativeSurface()"><code>surfaces</code></a> are locked,
 hence atomicity of operation is guaranteed,
 see <a href="../../../../com/jogamp/opengl/GLAutoDrawable.html#locking">GLAutoDrawable Locking</a>.
 </p>
 <p>
 Because of above mentioned locking, if this method is not performed
 on <a href="../GLAutoDrawable.html#isThreadGLCapable()"><code>a OpenGL capable thread</code></a> of <i>both</i>
 <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>s, it must be invoked on such an OpenGL capable thread,
 e.g. via <a href="../Threading.html#invokeOnOpenGLThread(boolean,java.lang.Runnable)"><code>Threading.invokeOnOpenGLThread(boolean, Runnable)</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - </dd>
<dd><code>b</code> - </dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isSwapGLContextSafe(com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesImmutable)"><code>isSwapGLContextSafe(GLCapabilitiesImmutable, GLCapabilitiesImmutable, GLCapabilitiesImmutable)</code></a></dd>
</dl>
</li>
</ul>
<a id="swapBuffersBeforeRead(com.jogamp.opengl.GLCapabilitiesImmutable)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>swapBuffersBeforeRead</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;swapBuffersBeforeRead&#8203;(<a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;chosenCaps)</pre>
<div class="block">Determines whether the chosen <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>
 requires a <a href="../GLDrawable.html#swapBuffers()"><code>swap-buffers</code></a>
 before reading pixels.
 <p>
 Usually one uses the <a href="../GLBase.html#getDefaultReadBuffer()"><code>default-read-buffer</code></a>
 in which case <a href="../GLDrawable.html#swapBuffers()"><code>swap-buffers</code></a> shall happen <b>after</b> calling reading pixels, the default.
 </p>
 <p>
 However, <i>multisampling</i> offscreen <a href="../GLFBODrawable.html" title="interface in com.jogamp.opengl"><code>GLFBODrawable</code></a>s
 utilize <a href="../GLDrawable.html#swapBuffers()"><code>swap-buffers</code></a> to <i>downsample</i>
 the multisamples into the readable sampling sink.
 In this case, we require <a href="../GLDrawable.html#swapBuffers()"><code>swap-buffers</code></a> <b>before</b> reading pixels.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>chosenCaps.isFBO() && chosenCaps.getSampleBuffers()</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/util/GLDrawableUtil.html" target="_top">Frames</a></li>
<li><a href="GLDrawableUtil.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
