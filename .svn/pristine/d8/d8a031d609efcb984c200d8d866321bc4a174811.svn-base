<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>Window (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Window (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6,"i6":6,"i7":6,"i8":6,"i9":6,"i10":6,"i11":6,"i12":6,"i13":6,"i14":6,"i15":6,"i16":6,"i17":6,"i18":6,"i19":6,"i20":6,"i21":6,"i22":6,"i23":6,"i24":6,"i25":6,"i26":6,"i27":6,"i28":6,"i29":6,"i30":6,"i31":6,"i32":6,"i33":6,"i34":6,"i35":6,"i36":6,"i37":6,"i38":6,"i39":6,"i40":6,"i41":6,"i42":6,"i43":6,"i44":6,"i45":6,"i46":6,"i47":6,"i48":6,"i49":6,"i50":6,"i51":6,"i52":6,"i53":6,"i54":6,"i55":6,"i56":6,"i57":6,"i58":6,"i59":6,"i60":6,"i61":6,"i62":6,"i63":6,"i64":6,"i65":6,"i66":6,"i67":6,"i68":6,"i69":6,"i70":6,"i71":6,"i72":6,"i73":6,"i74":6,"i75":6,"i76":6,"i77":6,"i78":6,"i79":6,"i80":6,"i81":6,"i82":6,"i83":6,"i84":6,"i85":6,"i86":6,"i87":6,"i88":6,"i89":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/newt/Window.html" target="_top">Frames</a></li>
<li><a href="Window.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.newt</a></div>
<h2 title="Interface Window" class="title">Interface Window</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Superinterfaces:</dt>
<dd><code><a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a></code>, <code><a href="../nativewindow/NativeSurfaceHolder.html" title="interface in com.jogamp.nativewindow">NativeSurfaceHolder</a></code>, <code><a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a></code>, <code><a href="../nativewindow/ScalableSurface.html" title="interface in com.jogamp.nativewindow">ScalableSurface</a></code>, <code><a href="../nativewindow/SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a></code>, <code><a href="../nativewindow/WindowClosingProtocol.html" title="interface in com.jogamp.nativewindow">WindowClosingProtocol</a></code></dd>
</dl>
<dl>
<dt>All Known Implementing Classes:</dt>
<dd><code><a href="opengl/GLWindow.html" title="class in com.jogamp.newt.opengl">GLWindow</a></code></dd>
</dl>
<hr>
<pre>public interface <span class="typeNameLabel">Window</span>
extends <a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>, <a href="../nativewindow/WindowClosingProtocol.html" title="interface in com.jogamp.nativewindow">WindowClosingProtocol</a>, <a href="../nativewindow/ScalableSurface.html" title="interface in com.jogamp.nativewindow">ScalableSurface</a></pre>
<div class="block">Specifying NEWT's Window functionality:
 <ul>
   <li>On- and offscreen windows</li>
   <li>Keyboard and multi-pointer input</li>
   <li>Native reparenting</li>
   <li>Toggable fullscreen and decoration mode</li>
   <li>Transparency</li>
   <li>... and more</li>
 </ul>
 <p>
 One use case is <a href="opengl/GLWindow.html" title="class in com.jogamp.newt.opengl"><code>GLWindow</code></a>, which delegates
 window operation to an instance of this interface while providing OpenGL
 functionality.
 </p>
 <p>
 All values of this interface are represented in window units, if not stated otherwise.
 </p>

 <a name="coordinateSystem"><h5>Coordinate System</h5></a>
 <p>
  <ul>
      <li>Screen space has it's origin in the top-left corner, and may not be at 0/0.</li>
      <li>Window origin is in it's top-left corner, see <a href="../nativewindow/NativeWindow.html#getX()"><code>NativeWindow.getX()</code></a> and <a href="../nativewindow/NativeWindow.html#getY()"><code>NativeWindow.getY()</code></a>. </li>
      <li>Window client-area excludes <a href="../nativewindow/NativeWindow.html#getInsets()"><code>insets</code></a>, i.e. window decoration.</li>
      <li>Window origin is relative to it's parent window if exist, or the screen position (top-level).</li>
  </ul>
  See <a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a> and <a href="Screen.html" title="class in com.jogamp.newt"><code>Screen</code></a>.
 </p>
 <a name="customwindowicons"><h5>Custom Window Icons</h5></a>
 <p>
 Custom window icons can be defined via system property <code>newt.window.icons</code>,
 which shall contain a list of PNG icon locations from low- to high-resolution,
 separated by one whitespace or one comma character.
 The location must be resolvable via classpath, i.e. shall reference a location within the jar file.
 Example (our default):
 <pre>
   -Dnewt.window.icons="newt/data/jogamp-16x16.png,newt/data/jogamp-32x32.png"
   -Djnlp.newt.window.icons="newt/data/jogamp-16x16.png,newt/data/jogamp-32x32.png"
 </pre>
 The property can also be set programmatically, which must happen before any NEWT classes are <i>touched</i>:
 <pre>
   System.setProperty("newt.window.icons", "newt/data/jogamp-16x16.png, newt/data/jogamp-32x32.png");
 </pre>
 To disable even Jogamp's own window icons in favor of system icons,
 simply set a non-existing location, e.g.:
 <pre>
   -Dnewt.window.icons="null,null"
 </pre>
 </p>

 <a name="lifecycleHeavy"><h5>Use of Lifecycle Heavy functions</h5></a>
 <p>
 Some of the methods specified here are lifecycle-heavy. That is, they are able
 to destroy and/or reattach resources to/from the window. Because of this, the methods
 are <i>not safe</i> to be called from EDT related threads. For example, it is not
 safe for a method in an attached <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a> to call <a href="#setFullscreen(boolean)"><code>setFullscreen(boolean)</code></a>
 on a <a href="Window.html" title="interface in com.jogamp.newt"><code>Window</code></a> directly. It is safe, however, for that method to spawn a background
 worker thread which calls the method directly. The documentation for individual methods
 indicates whether or not they are lifecycle-heavy.
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Interface</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static interface&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="Window.FocusRunnable.html" title="interface in com.jogamp.newt">Window.FocusRunnable</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="Window.ReparentOperation.html" title="enum in com.jogamp.newt">Window.ReparentOperation</a></span></code></th>
<td class="colLast">
<div class="block">Reparenting operation types</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="nested.classes.inherited.from.class.com.jogamp.nativewindow.WindowClosingProtocol">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from interface&nbsp;com.jogamp.nativewindow.<a href="../nativewindow/WindowClosingProtocol.html" title="interface in com.jogamp.nativewindow">WindowClosingProtocol</a></h3>
<code><a href="../nativewindow/WindowClosingProtocol.WindowClosingMode.html" title="enum in com.jogamp.nativewindow">WindowClosingProtocol.WindowClosingMode</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEBUG_IMPLEMENTATION">DEBUG_IMPLEMENTATION</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEBUG_KEY_EVENT">DEBUG_KEY_EVENT</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEBUG_MOUSE_EVENT">DEBUG_MOUSE_EVENT</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#REPARENT_HINT_BECOMES_VISIBLE">REPARENT_HINT_BECOMES_VISIBLE</a></span></code></th>
<td class="colLast">
<div class="block">Reparenting hint (bitfield value): Claim window becomes visible after reparenting, which is important for e.g.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#REPARENT_HINT_FORCE_RECREATION">REPARENT_HINT_FORCE_RECREATION</a></span></code></th>
<td class="colLast">
<div class="block">Reparenting hint (bitfield value): Force destroy and hence <a href="Window.ReparentOperation.html#ACTION_NATIVE_CREATION"><code>re-creating</code></a> the window.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_ALWAYSONBOTTOM">STATE_BIT_ALWAYSONBOTTOM</a></span></code></th>
<td class="colLast">
<div class="block">Set if window is <i>always on bottom</i>, otherwise cleared.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_ALWAYSONTOP">STATE_BIT_ALWAYSONTOP</a></span></code></th>
<td class="colLast">
<div class="block">Set if window is <i>always on top</i>, otherwise cleared.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_AUTOPOSITION">STATE_BIT_AUTOPOSITION</a></span></code></th>
<td class="colLast">
<div class="block">Hinting that no custom position has been set before first <a href="#STATE_BIT_VISIBLE"><code>visibility</code></a> of this instance.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_CHILDWIN">STATE_BIT_CHILDWIN</a></span></code></th>
<td class="colLast">
<div class="block">Set if window is a <i>child window</i>, i.e.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_FOCUSED">STATE_BIT_FOCUSED</a></span></code></th>
<td class="colLast">
<div class="block">Set if window has <i>the input focus</i>, otherwise cleared.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_FULLSCREEN">STATE_BIT_FULLSCREEN</a></span></code></th>
<td class="colLast">
<div class="block">Set if window is in <i>fullscreen mode</i>, otherwise cleared.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_MAXIMIZED_HORZ">STATE_BIT_MAXIMIZED_HORZ</a></span></code></th>
<td class="colLast">
<div class="block">Set if window is <i>maximized horizontally</i>, otherwise cleared.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_MAXIMIZED_VERT">STATE_BIT_MAXIMIZED_VERT</a></span></code></th>
<td class="colLast">
<div class="block">Set if window is <i>maximized vertically</i>, otherwise cleared.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_POINTERCONFINED">STATE_BIT_POINTERCONFINED</a></span></code></th>
<td class="colLast">
<div class="block">Set if the <i>pointer is confined</i> to the window, otherwise cleared.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_POINTERVISIBLE">STATE_BIT_POINTERVISIBLE</a></span></code></th>
<td class="colLast">
<div class="block">Set if the <i>pointer is visible</i> when inside the window, otherwise cleared.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_REPOSITIONABLE">STATE_BIT_REPOSITIONABLE</a></span></code></th>
<td class="colLast">
<div class="block">Set if window is <i>repositionable</i> after creation, otherwise cleared.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_RESIZABLE">STATE_BIT_RESIZABLE</a></span></code></th>
<td class="colLast">
<div class="block">Set if window is <i>resizable</i> after creation, otherwise cleared.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_STICKY">STATE_BIT_STICKY</a></span></code></th>
<td class="colLast">
<div class="block">Set if window is <i>sticky</i>, i.e.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_UNDECORATED">STATE_BIT_UNDECORATED</a></span></code></th>
<td class="colLast">
<div class="block">Set if window has <i>window decorations</i>, otherwise cleared.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_BIT_VISIBLE">STATE_BIT_VISIBLE</a></span></code></th>
<td class="colLast">
<div class="block">Visibility of this instance.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_ALWAYSONBOTTOM">STATE_MASK_ALWAYSONBOTTOM</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_ALWAYSONBOTTOM"><code>STATE_BIT_ALWAYSONBOTTOM</code></a>, 64.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_ALWAYSONTOP">STATE_MASK_ALWAYSONTOP</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_ALWAYSONTOP"><code>STATE_BIT_ALWAYSONTOP</code></a>, 32.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_AUTOPOSITION">STATE_MASK_AUTOPOSITION</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_AUTOPOSITION"><code>STATE_BIT_AUTOPOSITION</code></a>, 2.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_CHILDWIN">STATE_MASK_CHILDWIN</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_CHILDWIN"><code>STATE_BIT_CHILDWIN</code></a>, 4.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_FOCUSED">STATE_MASK_FOCUSED</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_FOCUSED"><code>STATE_BIT_FOCUSED</code></a>, 8.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_FULLSCREEN">STATE_MASK_FULLSCREEN</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_FULLSCREEN"><code>STATE_BIT_FULLSCREEN</code></a>, 2048.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_MAXIMIZED_HORZ">STATE_MASK_MAXIMIZED_HORZ</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_MAXIMIZED_HORZ"><code>STATE_BIT_MAXIMIZED_HORZ</code></a>, 1024.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_MAXIMIZED_VERT">STATE_MASK_MAXIMIZED_VERT</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_MAXIMIZED_VERT"><code>STATE_BIT_MAXIMIZED_VERT</code></a>, 512.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_POINTERCONFINED">STATE_MASK_POINTERCONFINED</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_POINTERCONFINED"><code>STATE_BIT_POINTERCONFINED</code></a>, 8192.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_POINTERVISIBLE">STATE_MASK_POINTERVISIBLE</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_POINTERVISIBLE"><code>STATE_BIT_POINTERVISIBLE</code></a>, 4096.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_REPOSITIONABLE">STATE_MASK_REPOSITIONABLE</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_REPOSITIONABLE"><code>STATE_BIT_REPOSITIONABLE</code></a>, 16384.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_RESIZABLE">STATE_MASK_RESIZABLE</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_RESIZABLE"><code>STATE_BIT_RESIZABLE</code></a>, 256.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_STICKY">STATE_MASK_STICKY</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_STICKY"><code>STATE_BIT_STICKY</code></a>, 128.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_UNDECORATED">STATE_MASK_UNDECORATED</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_UNDECORATED"><code>STATE_BIT_UNDECORATED</code></a>, 16.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#STATE_MASK_VISIBLE">STATE_MASK_VISIBLE</a></span></code></th>
<td class="colLast">
<div class="block">Bitmask for <a href="#STATE_BIT_VISIBLE"><code>STATE_BIT_VISIBLE</code></a>, 1.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TIMEOUT_NATIVEWINDOW">TIMEOUT_NATIVEWINDOW</a></span></code></th>
<td class="colLast">
<div class="block">A 1s timeout while waiting for a native action response, ie <a href="#setVisible(boolean)"><code>setVisible(boolean)</code></a>.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.jogamp.nativewindow.NativeSurface">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;com.jogamp.nativewindow.<a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a></h3>
<code><a href="../nativewindow/NativeSurface.html#LOCK_SUCCESS">LOCK_SUCCESS</a>, <a href="../nativewindow/NativeSurface.html#LOCK_SURFACE_CHANGED">LOCK_SURFACE_CHANGED</a>, <a href="../nativewindow/NativeSurface.html#LOCK_SURFACE_NOT_READY">LOCK_SURFACE_NOT_READY</a>, <a href="../nativewindow/NativeSurface.html#LOCK_SURFACE_UNLOCKED">LOCK_SURFACE_UNLOCKED</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.jogamp.nativewindow.ScalableSurface">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;com.jogamp.nativewindow.<a href="../nativewindow/ScalableSurface.html" title="interface in com.jogamp.nativewindow">ScalableSurface</a></h3>
<code><a href="../nativewindow/ScalableSurface.html#AUTOMAX_PIXELSCALE">AUTOMAX_PIXELSCALE</a>, <a href="../nativewindow/ScalableSurface.html#IDENTITY_PIXELSCALE">IDENTITY_PIXELSCALE</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addChild(com.jogamp.nativewindow.NativeWindow)">addChild</a></span>&#8203;(<a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;win)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addGestureHandler(int,com.jogamp.newt.event.GestureHandler)">addGestureHandler</a></span>&#8203;(int&nbsp;index,
                 <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event">GestureHandler</a>&nbsp;gh)</code></th>
<td class="colLast">
<div class="block">Inserts the given <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a> at the
 specified position in the list.<br></div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addGestureHandler(com.jogamp.newt.event.GestureHandler)">addGestureHandler</a></span>&#8203;(<a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event">GestureHandler</a>&nbsp;gh)</code></th>
<td class="colLast">
<div class="block">Appends the given <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a> to the end of the list.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addGestureListener(int,com.jogamp.newt.event.GestureHandler.GestureListener)">addGestureListener</a></span>&#8203;(int&nbsp;index,
                  <a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event">GestureHandler.GestureListener</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Inserts the given <a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event"><code>GestureHandler.GestureListener</code></a> at the
 specified position in the list.<br></div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addGestureListener(com.jogamp.newt.event.GestureHandler.GestureListener)">addGestureListener</a></span>&#8203;(<a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event">GestureHandler.GestureListener</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Appends the given <a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event"><code>GestureHandler.GestureListener</code></a> to the end of the list.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addKeyListener(int,com.jogamp.newt.event.KeyListener)">addKeyListener</a></span>&#8203;(int&nbsp;index,
              <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Inserts the given <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a> at the
 specified position in the list.<br></div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addKeyListener(com.jogamp.newt.event.KeyListener)">addKeyListener</a></span>&#8203;(<a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Appends the given <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a> to the end of
 the list.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addMouseListener(int,com.jogamp.newt.event.MouseListener)">addMouseListener</a></span>&#8203;(int&nbsp;index,
                <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Inserts the given <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a> at the
 specified position in the list.<br></div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addMouseListener(com.jogamp.newt.event.MouseListener)">addMouseListener</a></span>&#8203;(<a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Appends the given <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a> to the end of the list.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addWindowListener(int,com.jogamp.newt.event.WindowListener)">addWindowListener</a></span>&#8203;(int&nbsp;index,
                 <a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Inserts the given <a href="event/WindowListener.html" title="interface in com.jogamp.newt.event"><code>WindowListener</code></a> at the
 specified position in the list.<br></div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addWindowListener(com.jogamp.newt.event.WindowListener)">addWindowListener</a></span>&#8203;(<a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Appends the given <a href="event/WindowListener.html" title="interface in com.jogamp.newt.event"><code>WindowListener</code></a> to the end of
 the list.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#areDefaultGesturesEnabled()">areDefaultGesturesEnabled</a></span>()</code></th>
<td class="colLast">
<div class="block">Return true if default <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a> are enabled.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#confinePointer(boolean)">confinePointer</a></span>&#8203;(boolean&nbsp;confine)</code></th>
<td class="colLast">
<div class="block">Confine the pointer to this window, ie.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#destroy()">destroy</a></span>()</code></th>
<td class="colLast">
<div class="block">Destroys this window incl.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#enqueueEvent(boolean,com.jogamp.newt.event.NEWTEvent)">enqueueEvent</a></span>&#8203;(boolean&nbsp;wait,
            <a href="event/NEWTEvent.html" title="class in com.jogamp.newt.event">NEWTEvent</a>&nbsp;event)</code></th>
<td class="colLast">
<div class="block">Enqueues a <a href="event/NEWTEvent.html" title="class in com.jogamp.newt.event"><code>NEWT event</code></a>.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code><a href="../nativewindow/CapabilitiesImmutable.html" title="interface in com.jogamp.nativewindow">CapabilitiesImmutable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getChosenCapabilities()">getChosenCapabilities</a></span>()</code></th>
<td class="colLast">
<div class="block">Gets an immutable set of chosen capabilities.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code><a href="Window.html" title="interface in com.jogamp.newt">Window</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDelegatedWindow()">getDelegatedWindow</a></span>()</code></th>
<td class="colLast">
<div class="block">If the implementation uses delegation, return the delegated <a href="Window.html" title="interface in com.jogamp.newt"><code>Window</code></a> instance,
 otherwise return <code>this</code> instance.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code><a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getKeyListener(int)">getKeyListener</a></span>&#8203;(int&nbsp;index)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code><a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getKeyListeners()">getKeyListeners</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code><a href="MonitorDevice.html" title="class in com.jogamp.newt">MonitorDevice</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMainMonitor()">getMainMonitor</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="MonitorDevice.html" title="class in com.jogamp.newt"><code>MonitorDevice</code></a> with the highest <a href="MonitorDevice.html#getViewportInWindowUnits()"><code>viewport</code></a>
 <a href="../nativewindow/util/RectangleImmutable.html#coverage(com.jogamp.nativewindow.util.RectangleImmutable)"><code>coverage</code></a> of this window.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code><a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMouseListener(int)">getMouseListener</a></span>&#8203;(int&nbsp;index)</code></th>
<td class="colLast">
<div class="block">Returns the <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a> from the list at the given index.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code><a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a>[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMouseListeners()">getMouseListeners</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns all <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a></div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPixelsPerMM(float%5B%5D)">getPixelsPerMM</a></span>&#8203;(float[]&nbsp;ppmmStore)</code></th>
<td class="colLast">
<div class="block">Returns the <i>pixels per millimeter</i> of this window's <code>NativeSurface</code>
 according to the <a href="#getMainMonitor()"><code>main monitor</code></a>'s <i>current</i> <a href="MonitorMode.html" title="class in com.jogamp.newt"><code>mode</code></a>'s
 <a href="../nativewindow/util/SurfaceSize.html#getResolution()"><code>surface resolution</code></a>.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code><a href="Display.PointerIcon.html" title="interface in com.jogamp.newt">Display.PointerIcon</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPointerIcon()">getPointerIcon</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the current <a href="Display.PointerIcon.html" title="interface in com.jogamp.newt"><code>Display.PointerIcon</code></a>, which maybe <code>null</code> for the default.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code><a href="../nativewindow/CapabilitiesImmutable.html" title="interface in com.jogamp.nativewindow">CapabilitiesImmutable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRequestedCapabilities()">getRequestedCapabilities</a></span>()</code></th>
<td class="colLast">
<div class="block">Gets an immutable set of requested capabilities.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code><a href="Screen.html" title="class in com.jogamp.newt">Screen</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getScreen()">getScreen</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getStateMask()">getStateMask</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the current status mask of this instance.</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getStateMaskString()">getStateMaskString</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a string representation of the <a href="#getStateMask()"><code>current state mask</code></a>.</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getStatePublicBitCount()">getStatePublicBitCount</a></span>()</code></th>
<td class="colLast">
<div class="block">Number of all public state bits.</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getStatePublicBitmask()">getStatePublicBitmask</a></span>()</code></th>
<td class="colLast">
<div class="block">Bitmask covering all public state bits.</div>
</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSupportedStateMask()">getSupportedStateMask</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the supported <a href="#getStateMask()"><code>state mask</code></a> of the implementation.</div>
</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSupportedStateMaskString()">getSupportedStateMaskString</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a string representation of the <a href="#getSupportedStateMask()"><code>supported state mask</code></a>.</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTitle()">getTitle</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code><a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getWindowListener(int)">getWindowListener</a></span>&#8203;(int&nbsp;index)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code><a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a>[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getWindowListeners()">getWindowListeners</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isAlwaysOnBottom()">isAlwaysOnBottom</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isAlwaysOnTop()">isAlwaysOnTop</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isChildWindow()">isChildWindow</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns <code>true</code> if this window is a child window,
 i.e.</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isFullscreen()">isFullscreen</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isKeyboardVisible()">isKeyboardVisible</a></span>()</code></th>
<td class="colLast">
<div class="block">Return <code>true</code> if the virtual on-screen keyboard is visible, otherwise <code>false</code>.</div>
</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isMaximizedHorz()">isMaximizedHorz</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isMaximizedVert()">isMaximizedVert</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isNativeValid()">isNativeValid</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isPointerConfined()">isPointerConfined</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isPointerVisible()">isPointerVisible</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isResizable()">isResizable</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isSticky()">isSticky</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isUndecorated()">isUndecorated</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isVisible()">isVisible</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#removeChild(com.jogamp.nativewindow.NativeWindow)">removeChild</a></span>&#8203;(<a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;win)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i50" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#removeGestureHandler(com.jogamp.newt.event.GestureHandler)">removeGestureHandler</a></span>&#8203;(<a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event">GestureHandler</a>&nbsp;gh)</code></th>
<td class="colLast">
<div class="block">Removes the given <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a> from the list.</div>
</td>
</tr>
<tr id="i51" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#removeGestureListener(com.jogamp.newt.event.GestureHandler.GestureListener)">removeGestureListener</a></span>&#8203;(<a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event">GestureHandler.GestureListener</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Removes the given <a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event"><code>GestureHandler.GestureListener</code></a> from the list.</div>
</td>
</tr>
<tr id="i52" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#removeKeyListener(com.jogamp.newt.event.KeyListener)">removeKeyListener</a></span>&#8203;(<a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>&nbsp;l)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i53" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#removeMouseListener(com.jogamp.newt.event.MouseListener)">removeMouseListener</a></span>&#8203;(<a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Removes the given <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a> from the list.</div>
</td>
</tr>
<tr id="i54" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#removeWindowListener(com.jogamp.newt.event.WindowListener)">removeWindowListener</a></span>&#8203;(<a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a>&nbsp;l)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i55" class="rowColor">
<td class="colFirst"><code><a href="Window.ReparentOperation.html" title="enum in com.jogamp.newt">Window.ReparentOperation</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reparentWindow(com.jogamp.nativewindow.NativeWindow,int,int,int)">reparentWindow</a></span>&#8203;(<a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;newParent,
              int&nbsp;x,
              int&nbsp;y,
              int&nbsp;hints)</code></th>
<td class="colLast">
<div class="block">Change this window's parent window.<br></div>
</td>
</tr>
<tr id="i56" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#requestFocus()">requestFocus</a></span>()</code></th>
<td class="colLast">
<div class="block">Request focus for this native window</div>
</td>
</tr>
<tr id="i57" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#requestFocus(boolean)">requestFocus</a></span>&#8203;(boolean&nbsp;wait)</code></th>
<td class="colLast">
<div class="block">Request focus for this native window</div>
</td>
</tr>
<tr id="i58" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#runOnEDTIfAvail(boolean,java.lang.Runnable)">runOnEDTIfAvail</a></span>&#8203;(boolean&nbsp;wait,
               <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Runnable.html?is-external=true" title="class or interface in java.lang" class="externalLink">Runnable</a>&nbsp;task)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i59" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sendWindowEvent(int)">sendWindowEvent</a></span>&#8203;(int&nbsp;eventType)</code></th>
<td class="colLast">
<div class="block">Send a <a href="event/WindowEvent.html" title="class in com.jogamp.newt.event"><code>WindowEvent</code></a> to all <a href="event/WindowListener.html" title="interface in com.jogamp.newt.event"><code>WindowListener</code></a>.</div>
</td>
</tr>
<tr id="i60" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setAlwaysOnBottom(boolean)">setAlwaysOnBottom</a></span>&#8203;(boolean&nbsp;value)</code></th>
<td class="colLast">
<div class="block">Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</div>
</td>
</tr>
<tr id="i61" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setAlwaysOnTop(boolean)">setAlwaysOnTop</a></span>&#8203;(boolean&nbsp;value)</code></th>
<td class="colLast">
<div class="block">Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</div>
</td>
</tr>
<tr id="i62" class="altColor">
<td class="colFirst"><code><a href="../nativewindow/CapabilitiesChooser.html" title="interface in com.jogamp.nativewindow">CapabilitiesChooser</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setCapabilitiesChooser(com.jogamp.nativewindow.CapabilitiesChooser)">setCapabilitiesChooser</a></span>&#8203;(<a href="../nativewindow/CapabilitiesChooser.html" title="interface in com.jogamp.nativewindow">CapabilitiesChooser</a>&nbsp;chooser)</code></th>
<td class="colLast">
<div class="block">Set the CapabilitiesChooser to help determine the native visual type.</div>
</td>
</tr>
<tr id="i63" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setDefaultGesturesEnabled(boolean)">setDefaultGesturesEnabled</a></span>&#8203;(boolean&nbsp;enable)</code></th>
<td class="colLast">
<div class="block">Enable or disable default <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a>.</div>
</td>
</tr>
<tr id="i64" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setFocusAction(com.jogamp.newt.Window.FocusRunnable)">setFocusAction</a></span>&#8203;(<a href="Window.FocusRunnable.html" title="interface in com.jogamp.newt">Window.FocusRunnable</a>&nbsp;focusAction)</code></th>
<td class="colLast">
<div class="block">Sets a <a href="Window.FocusRunnable.html" title="interface in com.jogamp.newt"><code>Window.FocusRunnable</code></a>,
 which <a href="Window.FocusRunnable.html#run()"><code>Window.FocusRunnable.run()</code></a> method is executed before the native focus is requested.</div>
</td>
</tr>
<tr id="i65" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setFullscreen(boolean)">setFullscreen</a></span>&#8203;(boolean&nbsp;fullscreen)</code></th>
<td class="colLast">
<div class="block">Enable or disable fullscreen mode for this window.</div>
</td>
</tr>
<tr id="i66" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setFullscreen(java.util.List)">setFullscreen</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="MonitorDevice.html" title="class in com.jogamp.newt">MonitorDevice</a>&gt;&nbsp;monitors)</code></th>
<td class="colLast">
<div class="block">Enable fullscreen mode for this window spanning across the given <a href="MonitorDevice.html" title="class in com.jogamp.newt"><code>MonitorDevice</code></a>s
 or across all <a href="MonitorDevice.html" title="class in com.jogamp.newt"><code>MonitorDevice</code></a>s.</div>
</td>
</tr>
<tr id="i67" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setKeyboardFocusHandler(com.jogamp.newt.event.KeyListener)">setKeyboardFocusHandler</a></span>&#8203;(<a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Sets a <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a> allowing focus traversal with a covered window toolkit like AWT.</div>
</td>
</tr>
<tr id="i68" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setKeyboardVisible(boolean)">setKeyboardVisible</a></span>&#8203;(boolean&nbsp;visible)</code></th>
<td class="colLast">
<div class="block">In case the platform supports or even requires a virtual on-screen keyboard,
 this method shows or hide it depending on whether <code>visible</code> is <code>true</code>
 or <code>false</code>.</div>
</td>
</tr>
<tr id="i69" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setMaximized(boolean,boolean)">setMaximized</a></span>&#8203;(boolean&nbsp;horz,
            boolean&nbsp;vert)</code></th>
<td class="colLast">
<div class="block">Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</div>
</td>
</tr>
<tr id="i70" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setPointerIcon(com.jogamp.newt.Display.PointerIcon)">setPointerIcon</a></span>&#8203;(<a href="Display.PointerIcon.html" title="interface in com.jogamp.newt">Display.PointerIcon</a>&nbsp;pi)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i71" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setPointerVisible(boolean)">setPointerVisible</a></span>&#8203;(boolean&nbsp;pointerVisible)</code></th>
<td class="colLast">
<div class="block">Makes the pointer visible or invisible.</div>
</td>
</tr>
<tr id="i72" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setPosition(int,int)">setPosition</a></span>&#8203;(int&nbsp;x,
           int&nbsp;y)</code></th>
<td class="colLast">
<div class="block">Sets the location of the window's client area excluding insets (window decorations) in window units.<br>

 This call is ignored if in fullscreen mode.<br></div>
</td>
</tr>
<tr id="i73" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setResizable(boolean)">setResizable</a></span>&#8203;(boolean&nbsp;value)</code></th>
<td class="colLast">
<div class="block">Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</div>
</td>
</tr>
<tr id="i74" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setSize(int,int)">setSize</a></span>&#8203;(int&nbsp;width,
       int&nbsp;height)</code></th>
<td class="colLast">
<div class="block">Sets the size of the window's client area in window units, excluding decorations.</div>
</td>
</tr>
<tr id="i75" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setSticky(boolean)">setSticky</a></span>&#8203;(boolean&nbsp;value)</code></th>
<td class="colLast">
<div class="block">Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</div>
</td>
</tr>
<tr id="i76" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setSurfaceSize(int,int)">setSurfaceSize</a></span>&#8203;(int&nbsp;pixelWidth,
              int&nbsp;pixelHeight)</code></th>
<td class="colLast">
<div class="block">Sets the size of the window's surface in pixel units which claims the window's client area excluding decorations.</div>
</td>
</tr>
<tr id="i77" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTitle(java.lang.String)">setTitle</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;title)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i78" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTopLevelPosition(int,int)">setTopLevelPosition</a></span>&#8203;(int&nbsp;x,
                   int&nbsp;y)</code></th>
<td class="colLast">
<div class="block">Sets the location of the top-level window inclusive insets (window decorations) in window units.<br></div>
</td>
</tr>
<tr id="i79" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTopLevelSize(int,int)">setTopLevelSize</a></span>&#8203;(int&nbsp;width,
               int&nbsp;height)</code></th>
<td class="colLast">
<div class="block">Sets the size of the top-level window including insets (window decorations) in window units.</div>
</td>
</tr>
<tr id="i80" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setUndecorated(boolean)">setUndecorated</a></span>&#8203;(boolean&nbsp;value)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i81" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setVisible(boolean)">setVisible</a></span>&#8203;(boolean&nbsp;visible)</code></th>
<td class="colLast">
<div class="block">Calls <a href="#setVisible(boolean,boolean)"><code>setVisible(true, visible)</code></a>,
 i.e.</div>
</td>
</tr>
<tr id="i82" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setVisible(boolean,boolean)">setVisible</a></span>&#8203;(boolean&nbsp;wait,
          boolean&nbsp;visible)</code></th>
<td class="colLast">
<div class="block"><code>setVisible(..)</code> makes the window and children visible if <code>visible</code> is true,
 otherwise the window and children becomes invisible.</div>
</td>
</tr>
<tr id="i83" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setWindowDestroyNotifyAction(java.lang.Runnable)">setWindowDestroyNotifyAction</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Runnable.html?is-external=true" title="class or interface in java.lang" class="externalLink">Runnable</a>&nbsp;r)</code></th>
<td class="colLast">
<div class="block">Set a custom action handling destruction issued by a <code>toolkit triggered window destroy</code>
 replacing the default <a href="#destroy()"><code>destroy()</code></a> action.</div>
</td>
</tr>
<tr id="i84" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toSimpleString()">toSimpleString</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a simple string one-line representation of this instance using <a href="#toSimpleString(java.lang.StringBuilder)"><code>toSimpleString(StringBuilder)</code></a>.</div>
</td>
</tr>
<tr id="i85" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toSimpleString(java.lang.StringBuilder)">toSimpleString</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb)</code></th>
<td class="colLast">
<div class="block">Appends this class simple string one-line representation to the given <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink"><code>StringBuilder</code></a> instance</div>
</td>
</tr>
<tr id="i86" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a full string multi-line representation of this instance using <a href="#toString(java.lang.StringBuilder)"><code>toString(StringBuilder)</code></a>.</div>
</td>
</tr>
<tr id="i87" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString(java.lang.StringBuilder)">toString</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb)</code></th>
<td class="colLast">
<div class="block">Appends this class full string multi-line representation to the given <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink"><code>StringBuilder</code></a> instance</div>
</td>
</tr>
<tr id="i88" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#warpPointer(int,int)">warpPointer</a></span>&#8203;(int&nbsp;x,
           int&nbsp;y)</code></th>
<td class="colLast">
<div class="block">Moves the pointer to x/y relative to this window's origin in pixel units.</div>
</td>
</tr>
<tr id="i89" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#windowRepaint(int,int,int,int)">windowRepaint</a></span>&#8203;(int&nbsp;x,
             int&nbsp;y,
             int&nbsp;width,
             int&nbsp;height)</code></th>
<td class="colLast">
<div class="block">Trigger window repaint while passing the dirty region in pixel units.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.nativewindow.NativeSurface">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.nativewindow.<a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a></h3>
<code><a href="../nativewindow/NativeSurface.html#addSurfaceUpdatedListener(int,com.jogamp.nativewindow.SurfaceUpdatedListener)">addSurfaceUpdatedListener</a>, <a href="../nativewindow/NativeSurface.html#addSurfaceUpdatedListener(com.jogamp.nativewindow.SurfaceUpdatedListener)">addSurfaceUpdatedListener</a>, <a href="../nativewindow/NativeSurface.html#convertToPixelUnits(int%5B%5D)">convertToPixelUnits</a>, <a href="../nativewindow/NativeSurface.html#convertToWindowUnits(int%5B%5D)">convertToWindowUnits</a>, <a href="../nativewindow/NativeSurface.html#getDisplayHandle()">getDisplayHandle</a>, <a href="../nativewindow/NativeSurface.html#getGraphicsConfiguration()">getGraphicsConfiguration</a>, <a href="../nativewindow/NativeSurface.html#getLock()">getLock</a>, <a href="../nativewindow/NativeSurface.html#getScreenIndex()">getScreenIndex</a>, <a href="../nativewindow/NativeSurface.html#getSurfaceHandle()">getSurfaceHandle</a>, <a href="../nativewindow/NativeSurface.html#getSurfaceHeight()">getSurfaceHeight</a>, <a href="../nativewindow/NativeSurface.html#getSurfaceLockOwner()">getSurfaceLockOwner</a>, <a href="../nativewindow/NativeSurface.html#getSurfaceWidth()">getSurfaceWidth</a>, <a href="../nativewindow/NativeSurface.html#isSurfaceLockedByOtherThread()">isSurfaceLockedByOtherThread</a>, <a href="../nativewindow/NativeSurface.html#lockSurface()">lockSurface</a>, <a href="../nativewindow/NativeSurface.html#removeSurfaceUpdatedListener(com.jogamp.nativewindow.SurfaceUpdatedListener)">removeSurfaceUpdatedListener</a>, <a href="../nativewindow/NativeSurface.html#surfaceSwap()">surfaceSwap</a>, <a href="../nativewindow/NativeSurface.html#unlockSurface()">unlockSurface</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.nativewindow.NativeWindow">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.nativewindow.<a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a></h3>
<code><a href="../nativewindow/NativeWindow.html#getBounds()">getBounds</a>, <a href="../nativewindow/NativeWindow.html#getHeight()">getHeight</a>, <a href="../nativewindow/NativeWindow.html#getInsets()">getInsets</a>, <a href="../nativewindow/NativeWindow.html#getLocationOnScreen(com.jogamp.nativewindow.util.Point)">getLocationOnScreen</a>, <a href="../nativewindow/NativeWindow.html#getNativeSurface()">getNativeSurface</a>, <a href="../nativewindow/NativeWindow.html#getParent()">getParent</a>, <a href="../nativewindow/NativeWindow.html#getSurfaceBounds()">getSurfaceBounds</a>, <a href="../nativewindow/NativeWindow.html#getWidth()">getWidth</a>, <a href="../nativewindow/NativeWindow.html#getWindowHandle()">getWindowHandle</a>, <a href="../nativewindow/NativeWindow.html#getX()">getX</a>, <a href="../nativewindow/NativeWindow.html#getY()">getY</a>, <a href="../nativewindow/NativeWindow.html#hasFocus()">hasFocus</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.nativewindow.ScalableSurface">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.nativewindow.<a href="../nativewindow/ScalableSurface.html" title="interface in com.jogamp.nativewindow">ScalableSurface</a></h3>
<code><a href="../nativewindow/ScalableSurface.html#getCurrentSurfaceScale(float%5B%5D)">getCurrentSurfaceScale</a>, <a href="../nativewindow/ScalableSurface.html#getMaximumSurfaceScale(float%5B%5D)">getMaximumSurfaceScale</a>, <a href="../nativewindow/ScalableSurface.html#getMinimumSurfaceScale(float%5B%5D)">getMinimumSurfaceScale</a>, <a href="../nativewindow/ScalableSurface.html#getRequestedSurfaceScale(float%5B%5D)">getRequestedSurfaceScale</a>, <a href="../nativewindow/ScalableSurface.html#setSurfaceScale(float%5B%5D)">setSurfaceScale</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.nativewindow.SurfaceUpdatedListener">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.nativewindow.<a href="../nativewindow/SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a></h3>
<code><a href="../nativewindow/SurfaceUpdatedListener.html#surfaceUpdated(java.lang.Object,com.jogamp.nativewindow.NativeSurface,long)">surfaceUpdated</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.nativewindow.WindowClosingProtocol">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.nativewindow.<a href="../nativewindow/WindowClosingProtocol.html" title="interface in com.jogamp.nativewindow">WindowClosingProtocol</a></h3>
<code><a href="../nativewindow/WindowClosingProtocol.html#getDefaultCloseOperation()">getDefaultCloseOperation</a>, <a href="../nativewindow/WindowClosingProtocol.html#setDefaultCloseOperation(com.jogamp.nativewindow.WindowClosingProtocol.WindowClosingMode)">setDefaultCloseOperation</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="DEBUG_MOUSE_EVENT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DEBUG_MOUSE_EVENT</h4>
<pre>static final&nbsp;boolean DEBUG_MOUSE_EVENT</pre>
</li>
</ul>
<a id="DEBUG_KEY_EVENT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DEBUG_KEY_EVENT</h4>
<pre>static final&nbsp;boolean DEBUG_KEY_EVENT</pre>
</li>
</ul>
<a id="DEBUG_IMPLEMENTATION">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DEBUG_IMPLEMENTATION</h4>
<pre>static final&nbsp;boolean DEBUG_IMPLEMENTATION</pre>
</li>
</ul>
<a id="TIMEOUT_NATIVEWINDOW">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TIMEOUT_NATIVEWINDOW</h4>
<pre>static final&nbsp;long TIMEOUT_NATIVEWINDOW</pre>
<div class="block">A 1s timeout while waiting for a native action response, ie <a href="#setVisible(boolean)"><code>setVisible(boolean)</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.newt.Window.TIMEOUT_NATIVEWINDOW">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_VISIBLE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_VISIBLE</h4>
<pre>static final&nbsp;int STATE_BIT_VISIBLE</pre>
<div class="block">Visibility of this instance.
 <p>Native instance gets created at first visibility, following NEWT's lazy creation pattern.</p>
 <p>Changing this state is <a href="#lifecycleHeavy">lifecycle heavy</a>.</p>
 <p>Bit number 0.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_VISIBLE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_AUTOPOSITION">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_AUTOPOSITION</h4>
<pre>static final&nbsp;int STATE_BIT_AUTOPOSITION</pre>
<div class="block">Hinting that no custom position has been set before first <a href="#STATE_BIT_VISIBLE"><code>visibility</code></a> of this instance.
 <p>If kept <code>false</code> at creation, this allows the WM to choose the top-level window position,
 otherwise the custom position is being enforced.</p>
 <p>Bit number 1.</p>
 <p>Defaults to <code>true</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_AUTOPOSITION">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_CHILDWIN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_CHILDWIN</h4>
<pre>static final&nbsp;int STATE_BIT_CHILDWIN</pre>
<div class="block">Set if window is a <i>child window</i>, i.e. has been <a href="#reparentWindow(com.jogamp.nativewindow.NativeWindow,int,int,int)"><code>reparented</code></a>.
 <p>
 Otherwise bit is cleared, i.e. window is <i>top-level</i>.
 </p>
 <p>Changing this state is <a href="#lifecycleHeavy">lifecycle heavy</a>.</p>
 <p>Bit number 2.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_CHILDWIN">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_FOCUSED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_FOCUSED</h4>
<pre>static final&nbsp;int STATE_BIT_FOCUSED</pre>
<div class="block">Set if window has <i>the input focus</i>, otherwise cleared.
 <p>Bit number 3.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_FOCUSED">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_UNDECORATED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_UNDECORATED</h4>
<pre>static final&nbsp;int STATE_BIT_UNDECORATED</pre>
<div class="block">Set if window has <i>window decorations</i>, otherwise cleared.
 <p>Bit number 4.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_UNDECORATED">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_ALWAYSONTOP">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_ALWAYSONTOP</h4>
<pre>static final&nbsp;int STATE_BIT_ALWAYSONTOP</pre>
<div class="block">Set if window is <i>always on top</i>, otherwise cleared.
 <p>Bit number 5.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_ALWAYSONTOP">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_ALWAYSONBOTTOM">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_ALWAYSONBOTTOM</h4>
<pre>static final&nbsp;int STATE_BIT_ALWAYSONBOTTOM</pre>
<div class="block">Set if window is <i>always on bottom</i>, otherwise cleared.
 <p>Bit number 6.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_ALWAYSONBOTTOM">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_STICKY">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_STICKY</h4>
<pre>static final&nbsp;int STATE_BIT_STICKY</pre>
<div class="block">Set if window is <i>sticky</i>, i.e. visible <i>on all virtual desktop</i>, otherwise cleared.
 <p>Bit number 7.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_STICKY">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_RESIZABLE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_RESIZABLE</h4>
<pre>static final&nbsp;int STATE_BIT_RESIZABLE</pre>
<div class="block">Set if window is <i>resizable</i> after creation, otherwise cleared.
 <p>Bit number 8.</p>
 <p>Defaults to <code>true</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_RESIZABLE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_MAXIMIZED_VERT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_MAXIMIZED_VERT</h4>
<pre>static final&nbsp;int STATE_BIT_MAXIMIZED_VERT</pre>
<div class="block">Set if window is <i>maximized vertically</i>, otherwise cleared.
 <p>Bit number 9.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_MAXIMIZED_VERT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_MAXIMIZED_HORZ">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_MAXIMIZED_HORZ</h4>
<pre>static final&nbsp;int STATE_BIT_MAXIMIZED_HORZ</pre>
<div class="block">Set if window is <i>maximized horizontally</i>, otherwise cleared.
 <p>Bit number 10.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_MAXIMIZED_HORZ">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_FULLSCREEN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_FULLSCREEN</h4>
<pre>static final&nbsp;int STATE_BIT_FULLSCREEN</pre>
<div class="block">Set if window is in <i>fullscreen mode</i>, otherwise cleared.
 <p>
 Usually fullscreen mode implies <a href="#STATE_BIT_UNDECORATED"><code>STATE_BIT_UNDECORATED</code></a>,
 however, an implementation is allowed to ignore this if unavailable.
 </p>
 <p>Bit number 11.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_FULLSCREEN">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_POINTERVISIBLE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_POINTERVISIBLE</h4>
<pre>static final&nbsp;int STATE_BIT_POINTERVISIBLE</pre>
<div class="block">Set if the <i>pointer is visible</i> when inside the window, otherwise cleared.
 <p>Bit number 12.</p>
 <p>Defaults to <code>true</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_POINTERVISIBLE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_POINTERCONFINED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_POINTERCONFINED</h4>
<pre>static final&nbsp;int STATE_BIT_POINTERCONFINED</pre>
<div class="block">Set if the <i>pointer is confined</i> to the window, otherwise cleared.
 <p>Bit number 13.</p>
 <p>Defaults to <code>false</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_POINTERCONFINED">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_BIT_REPOSITIONABLE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_BIT_REPOSITIONABLE</h4>
<pre>static final&nbsp;int STATE_BIT_REPOSITIONABLE</pre>
<div class="block">Set if window is <i>repositionable</i> after creation, otherwise cleared.
 <p>Bit number 14.</p>
 <p>Defaults to <code>true</code>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.4.0</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_BIT_REPOSITIONABLE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_VISIBLE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_VISIBLE</h4>
<pre>static final&nbsp;int STATE_MASK_VISIBLE</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_VISIBLE"><code>STATE_BIT_VISIBLE</code></a>, 1.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_VISIBLE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_AUTOPOSITION">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_AUTOPOSITION</h4>
<pre>static final&nbsp;int STATE_MASK_AUTOPOSITION</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_AUTOPOSITION"><code>STATE_BIT_AUTOPOSITION</code></a>, 2.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_AUTOPOSITION">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_CHILDWIN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_CHILDWIN</h4>
<pre>static final&nbsp;int STATE_MASK_CHILDWIN</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_CHILDWIN"><code>STATE_BIT_CHILDWIN</code></a>, 4.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_CHILDWIN">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_FOCUSED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_FOCUSED</h4>
<pre>static final&nbsp;int STATE_MASK_FOCUSED</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_FOCUSED"><code>STATE_BIT_FOCUSED</code></a>, 8.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_FOCUSED">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_UNDECORATED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_UNDECORATED</h4>
<pre>static final&nbsp;int STATE_MASK_UNDECORATED</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_UNDECORATED"><code>STATE_BIT_UNDECORATED</code></a>, 16.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_UNDECORATED">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_ALWAYSONTOP">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_ALWAYSONTOP</h4>
<pre>static final&nbsp;int STATE_MASK_ALWAYSONTOP</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_ALWAYSONTOP"><code>STATE_BIT_ALWAYSONTOP</code></a>, 32.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_ALWAYSONTOP">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_ALWAYSONBOTTOM">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_ALWAYSONBOTTOM</h4>
<pre>static final&nbsp;int STATE_MASK_ALWAYSONBOTTOM</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_ALWAYSONBOTTOM"><code>STATE_BIT_ALWAYSONBOTTOM</code></a>, 64.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_ALWAYSONBOTTOM">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_STICKY">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_STICKY</h4>
<pre>static final&nbsp;int STATE_MASK_STICKY</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_STICKY"><code>STATE_BIT_STICKY</code></a>, 128.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_STICKY">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_RESIZABLE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_RESIZABLE</h4>
<pre>static final&nbsp;int STATE_MASK_RESIZABLE</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_RESIZABLE"><code>STATE_BIT_RESIZABLE</code></a>, 256.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_RESIZABLE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_MAXIMIZED_VERT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_MAXIMIZED_VERT</h4>
<pre>static final&nbsp;int STATE_MASK_MAXIMIZED_VERT</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_MAXIMIZED_VERT"><code>STATE_BIT_MAXIMIZED_VERT</code></a>, 512.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_MAXIMIZED_VERT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_MAXIMIZED_HORZ">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_MAXIMIZED_HORZ</h4>
<pre>static final&nbsp;int STATE_MASK_MAXIMIZED_HORZ</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_MAXIMIZED_HORZ"><code>STATE_BIT_MAXIMIZED_HORZ</code></a>, 1024.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_MAXIMIZED_HORZ">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_FULLSCREEN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_FULLSCREEN</h4>
<pre>static final&nbsp;int STATE_MASK_FULLSCREEN</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_FULLSCREEN"><code>STATE_BIT_FULLSCREEN</code></a>, 2048.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_FULLSCREEN">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_POINTERVISIBLE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_POINTERVISIBLE</h4>
<pre>static final&nbsp;int STATE_MASK_POINTERVISIBLE</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_POINTERVISIBLE"><code>STATE_BIT_POINTERVISIBLE</code></a>, 4096.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_POINTERVISIBLE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_POINTERCONFINED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_POINTERCONFINED</h4>
<pre>static final&nbsp;int STATE_MASK_POINTERCONFINED</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_POINTERCONFINED"><code>STATE_BIT_POINTERCONFINED</code></a>, 8192.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_POINTERCONFINED">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="STATE_MASK_REPOSITIONABLE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>STATE_MASK_REPOSITIONABLE</h4>
<pre>static final&nbsp;int STATE_MASK_REPOSITIONABLE</pre>
<div class="block">Bitmask for <a href="#STATE_BIT_REPOSITIONABLE"><code>STATE_BIT_REPOSITIONABLE</code></a>, 16384.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.4.0</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a>, 
<a href="../../../constant-values.html#com.jogamp.newt.Window.STATE_MASK_REPOSITIONABLE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="REPARENT_HINT_FORCE_RECREATION">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>REPARENT_HINT_FORCE_RECREATION</h4>
<pre>static final&nbsp;int REPARENT_HINT_FORCE_RECREATION</pre>
<div class="block">Reparenting hint (bitfield value): Force destroy and hence <a href="Window.ReparentOperation.html#ACTION_NATIVE_CREATION"><code>re-creating</code></a> the window.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.newt.Window.REPARENT_HINT_FORCE_RECREATION">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="REPARENT_HINT_BECOMES_VISIBLE">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>REPARENT_HINT_BECOMES_VISIBLE</h4>
<pre>static final&nbsp;int REPARENT_HINT_BECOMES_VISIBLE</pre>
<div class="block">Reparenting hint (bitfield value): Claim window becomes visible after reparenting, which is important for e.g. preserving the GL-states in case window is invisible while reparenting.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.newt.Window.REPARENT_HINT_BECOMES_VISIBLE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="getStatePublicBitCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStatePublicBitCount</h4>
<pre class="methodSignature">int&nbsp;getStatePublicBitCount()</pre>
<div class="block">Number of all public state bits.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a></dd>
</dl>
</li>
</ul>
<a id="getStatePublicBitmask()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStatePublicBitmask</h4>
<pre class="methodSignature">int&nbsp;getStatePublicBitmask()</pre>
<div class="block">Bitmask covering all public state bits.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#getStateMask()"><code>getStateMask()</code></a></dd>
</dl>
</li>
</ul>
<a id="getStateMask()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStateMask</h4>
<pre class="methodSignature">int&nbsp;getStateMask()</pre>
<div class="block">Returns the current status mask of this instance.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSupportedStateMask()"><code>getSupportedStateMask()</code></a>, 
<a href="#STATE_MASK_VISIBLE"><code>STATE_MASK_VISIBLE</code></a>, 
<a href="#STATE_MASK_AUTOPOSITION"><code>STATE_MASK_AUTOPOSITION</code></a>, 
<a href="#STATE_MASK_CHILDWIN"><code>STATE_MASK_CHILDWIN</code></a>, 
<a href="#STATE_MASK_FOCUSED"><code>STATE_MASK_FOCUSED</code></a>, 
<a href="#STATE_MASK_UNDECORATED"><code>STATE_MASK_UNDECORATED</code></a>, 
<a href="#STATE_MASK_ALWAYSONTOP"><code>STATE_MASK_ALWAYSONTOP</code></a>, 
<a href="#STATE_MASK_ALWAYSONBOTTOM"><code>STATE_MASK_ALWAYSONBOTTOM</code></a>, 
<a href="#STATE_MASK_STICKY"><code>STATE_MASK_STICKY</code></a>, 
<a href="#STATE_MASK_RESIZABLE"><code>STATE_MASK_RESIZABLE</code></a>, 
<a href="#STATE_MASK_MAXIMIZED_VERT"><code>STATE_MASK_MAXIMIZED_VERT</code></a>, 
<a href="#STATE_MASK_MAXIMIZED_HORZ"><code>STATE_MASK_MAXIMIZED_HORZ</code></a>, 
<a href="#STATE_MASK_FULLSCREEN"><code>STATE_MASK_FULLSCREEN</code></a>, 
<a href="#STATE_MASK_POINTERVISIBLE"><code>STATE_MASK_POINTERVISIBLE</code></a>, 
<a href="#STATE_MASK_POINTERCONFINED"><code>STATE_MASK_POINTERCONFINED</code></a>, 
<a href="#STATE_MASK_REPOSITIONABLE"><code>STATE_MASK_REPOSITIONABLE</code></a></dd>
</dl>
</li>
</ul>
<a id="getStateMaskString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStateMaskString</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getStateMaskString()</pre>
<div class="block">Returns a string representation of the <a href="#getStateMask()"><code>current state mask</code></a>.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="getSupportedStateMask()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSupportedStateMask</h4>
<pre class="methodSignature">int&nbsp;getSupportedStateMask()</pre>
<div class="block">Returns the supported <a href="#getStateMask()"><code>state mask</code></a> of the implementation.
 <p>
 Implementation provides supported <a href="#getStateMask()"><code>state mask</code></a> values at runtime
 <i>after</i> native window creation, i.e. first visibility.
 </p>
 <p>
 Please note that a window's size shall also be allowed to change, i.e. <a href="#setSize(int,int)"><code>setSize(int, int)</code></a>.
 </p>
 <p>
 Default minimum value is <a href="#STATE_MASK_VISIBLE"><code>STATE_MASK_VISIBLE</code></a> | <a href="#STATE_MASK_FOCUSED"><code>STATE_MASK_FOCUSED</code></a>,
 i.e. the <b>minimum requirement</b> for all implementations.
 </p>
 <p>
 Usual desktop minimum value is <a href="#STATE_MASK_VISIBLE"><code>STATE_MASK_VISIBLE</code></a> | <a href="#STATE_MASK_FOCUSED"><code>STATE_MASK_FOCUSED</code></a> | <a href="#STATE_MASK_FULLSCREEN"><code>STATE_MASK_FULLSCREEN</code></a> | <a href="#STATE_MASK_RESIZABLE"><code>STATE_MASK_RESIZABLE</code></a> | <a href="#STATE_MASK_REPOSITIONABLE"><code>STATE_MASK_REPOSITIONABLE</code></a>.
 </p>
 <p>
 Before native window creation <a href="#getStatePublicBitmask()"><code>getStatePublicBitmask()</code></a> is returned,
 i.e. it is assumed all features are supported.
 </p>
 <p>
 Semantic of the supported state-mask bits (after native creation, i.e. 1st visibility):
 <ul>
 <li><a href="#STATE_MASK_VISIBLE"><code>STATE_MASK_VISIBLE</code></a>: <a href="#setVisible(boolean)"><code>Visibility</code></a> can be toggled. <b>Minimum requirement</b>.</li>
 <li><a href="#STATE_MASK_CHILDWIN"><code>STATE_MASK_CHILDWIN</code></a>: <a href="#reparentWindow(com.jogamp.nativewindow.NativeWindow,int,int,int)"><code>Native window parenting</code></a> is supported.</li>
 <li><a href="#STATE_MASK_FOCUSED"><code>STATE_MASK_FOCUSED</code></a>: Window <a href="#requestFocus()"><code>focus management</code></a> is supported.  <b>Minimum requirement</b>.</li>
 <li><a href="#STATE_MASK_UNDECORATED"><code>STATE_MASK_UNDECORATED</code></a>: <a href="#setUndecorated(boolean)"><code>Window decoration</code></a> can be toggled.</li>
 <li><a href="#STATE_MASK_ALWAYSONTOP"><code>STATE_MASK_ALWAYSONTOP</code></a>: Window can be set <a href="#setAlwaysOnTop(boolean)"><code>always-on-top</code></a>. </li>
 <li><a href="#STATE_MASK_ALWAYSONBOTTOM"><code>STATE_MASK_ALWAYSONBOTTOM</code></a>: Window can be set <a href="#setAlwaysOnBottom(boolean)"><code>always-on-bottom</code></a>. </li>
 <li><a href="#STATE_MASK_STICKY"><code>STATE_MASK_STICKY</code></a>: Window can be set <a href="#setSticky(boolean)"><code>sticky</code></a>.</li>
 <li><a href="#STATE_MASK_RESIZABLE"><code>STATE_MASK_RESIZABLE</code></a>: Window <a href="#setResizable(boolean)"><code>resizability</code></a> can be toggled and it's <a href="#setSize(int,int)"><code>size</code></a> can be changed.</li>
 <li><a href="#STATE_MASK_MAXIMIZED_VERT"><code>STATE_MASK_MAXIMIZED_VERT</code></a>: Window can be <a href="#setMaximized(boolean,boolean)"><code>maximized-vertically</code></a>. </li>
 <li><a href="#STATE_MASK_MAXIMIZED_HORZ"><code>STATE_MASK_MAXIMIZED_HORZ</code></a>: Window can be <a href="#setMaximized(boolean,boolean)"><code>maximized-horizontally</code></a>. </li>
 <li><a href="#STATE_MASK_FULLSCREEN"><code>STATE_MASK_FULLSCREEN</code></a>: Window <a href="#setFullscreen(boolean)"><code>fullscreen</code></a> can be toggled. </li>
 <li><a href="#STATE_MASK_POINTERVISIBLE"><code>STATE_MASK_POINTERVISIBLE</code></a>: Window <a href="#setPointerVisible(boolean)"><code>pointer visibility</code></a> can be toggled. </li>
 <li><a href="#STATE_MASK_POINTERCONFINED"><code>STATE_MASK_POINTERCONFINED</code></a>: Window <a href="#confinePointer(boolean)"><code>pointer can be confined</code></a>. </li>
 <li><a href="#STATE_MASK_REPOSITIONABLE"><code>STATE_MASK_REPOSITIONABLE</code></a>: Window <a href="#setPosition(int,int)"><code>position</code></a> can be changed.</li>
 </ul>
 </p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getStateMask()"><code>getStateMask()</code></a></dd>
</dl>
</li>
</ul>
<a id="getSupportedStateMaskString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSupportedStateMaskString</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getSupportedStateMaskString()</pre>
<div class="block">Returns a string representation of the <a href="#getSupportedStateMask()"><code>supported state mask</code></a>.</div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="isNativeValid()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isNativeValid</h4>
<pre class="methodSignature">boolean&nbsp;isNativeValid()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the native window handle is valid and ready to operate, ie
 if the native window has been created via <a href="#setVisible(boolean)"><code>setVisible(true)</code></a>, otherwise false.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setVisible(boolean)"><code>setVisible(boolean)</code></a>, 
<code>#destroy(boolean)</code></dd>
</dl>
</li>
</ul>
<a id="getScreen()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getScreen</h4>
<pre class="methodSignature"><a href="Screen.html" title="class in com.jogamp.newt">Screen</a>&nbsp;getScreen()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The associated <a href="Screen.html" title="class in com.jogamp.newt"><code>Screen</code></a></dd>
</dl>
</li>
</ul>
<a id="getMainMonitor()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMainMonitor</h4>
<pre class="methodSignature"><a href="MonitorDevice.html" title="class in com.jogamp.newt">MonitorDevice</a>&nbsp;getMainMonitor()</pre>
<div class="block">Returns the <a href="MonitorDevice.html" title="class in com.jogamp.newt"><code>MonitorDevice</code></a> with the highest <a href="MonitorDevice.html#getViewportInWindowUnits()"><code>viewport</code></a>
 <a href="../nativewindow/util/RectangleImmutable.html#coverage(com.jogamp.nativewindow.util.RectangleImmutable)"><code>coverage</code></a> of this window.
 <p>
 If no coverage is detected the first <a href="MonitorDevice.html" title="class in com.jogamp.newt"><code>MonitorDevice</code></a> is returned.
 </p></div>
</li>
</ul>
<a id="setCapabilitiesChooser(com.jogamp.nativewindow.CapabilitiesChooser)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCapabilitiesChooser</h4>
<pre class="methodSignature"><a href="../nativewindow/CapabilitiesChooser.html" title="interface in com.jogamp.nativewindow">CapabilitiesChooser</a>&nbsp;setCapabilitiesChooser&#8203;(<a href="../nativewindow/CapabilitiesChooser.html" title="interface in com.jogamp.nativewindow">CapabilitiesChooser</a>&nbsp;chooser)</pre>
<div class="block">Set the CapabilitiesChooser to help determine the native visual type.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>chooser</code> - the new CapabilitiesChooser</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the previous CapabilitiesChooser</dd>
</dl>
</li>
</ul>
<a id="getRequestedCapabilities()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRequestedCapabilities</h4>
<pre class="methodSignature"><a href="../nativewindow/CapabilitiesImmutable.html" title="interface in com.jogamp.nativewindow">CapabilitiesImmutable</a>&nbsp;getRequestedCapabilities()</pre>
<div class="block">Gets an immutable set of requested capabilities.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the requested capabilities</dd>
</dl>
</li>
</ul>
<a id="getChosenCapabilities()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getChosenCapabilities</h4>
<pre class="methodSignature"><a href="../nativewindow/CapabilitiesImmutable.html" title="interface in com.jogamp.nativewindow">CapabilitiesImmutable</a>&nbsp;getChosenCapabilities()</pre>
<div class="block">Gets an immutable set of chosen capabilities.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the chosen capabilities</dd>
</dl>
</li>
</ul>
<a id="destroy()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>destroy</h4>
<pre class="methodSignature">void&nbsp;destroy()</pre>
<div class="block">Destroys this window incl. releasing all related resources.
 <p>
 Also iterates through this window's children and destroys them.
 </p>
 <p>
 Visibility is set to false.
 </p>
 <p>
 Method sends out <a href="event/WindowEvent.html#EVENT_WINDOW_DESTROY_NOTIFY"><code>pre-</code></a> and
 <a href="event/WindowEvent.html#EVENT_WINDOW_DESTROYED"><code>post-</code></a> destruction events
 to all of it's <a href="event/WindowListener.html" title="interface in com.jogamp.newt.event"><code>WindowListener</code></a>.
 </p>
 <p>
 This method invokes <a href="Screen.html#removeReference()"><code>Screen.removeReference()</code></a> after it's own destruction,<br>
 which will issue <a href="Screen.html#destroy()"><code>Screen.destroy()</code></a> if the reference count becomes 0.<br>
 This destruction sequence shall end up in <a href="Display.html#destroy()"><code>Display.destroy()</code></a>, if all reference counts become 0.
 </p>
 <p>
 The Window can be recreate via <a href="#setVisible(boolean)"><code>setVisible(true)</code></a>.
 </p>
 <p>This method is <a href="#lifecycleHeavy">lifecycle heavy</a>.</p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../nativewindow/NativeWindow.html#destroy()">destroy</a></code>&nbsp;in interface&nbsp;<code><a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#destroy()"><code>destroy()</code></a>, 
<a href="#setVisible(boolean)"><code>setVisible(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="setWindowDestroyNotifyAction(java.lang.Runnable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setWindowDestroyNotifyAction</h4>
<pre class="methodSignature">void&nbsp;setWindowDestroyNotifyAction&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Runnable.html?is-external=true" title="class or interface in java.lang" class="externalLink">Runnable</a>&nbsp;r)</pre>
<div class="block">Set a custom action handling destruction issued by a <code>toolkit triggered window destroy</code>
 replacing the default <a href="#destroy()"><code>destroy()</code></a> action.
 <p>
 The custom action shall call <a href="#destroy()"><code>destroy()</code></a>
 but may perform further tasks before and after.
 </p></div>
</li>
</ul>
<a id="setVisible(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setVisible</h4>
<pre class="methodSignature">void&nbsp;setVisible&#8203;(boolean&nbsp;visible)</pre>
<div class="block">Calls <a href="#setVisible(boolean,boolean)"><code>setVisible(true, visible)</code></a>,
 i.e. blocks until the window becomes visible.
 <p>This method is <a href="#lifecycleHeavy">lifecycle heavy</a>.</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setVisible(boolean,boolean)"><code>setVisible(boolean, boolean)</code></a>, 
<a href="#STATE_BIT_VISIBLE"><code>STATE_BIT_VISIBLE</code></a></dd>
</dl>
</li>
</ul>
<a id="setVisible(boolean,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setVisible</h4>
<pre class="methodSignature">void&nbsp;setVisible&#8203;(boolean&nbsp;wait,
                boolean&nbsp;visible)</pre>
<div class="block"><code>setVisible(..)</code> makes the window and children visible if <code>visible</code> is true,
 otherwise the window and children becomes invisible.
 <p>Native instance gets created at first visibility, following NEWT's lazy creation pattern.</p>
 <p>
 If <code>wait</code> is true, method blocks until window is <a href="#isVisible()"><code>visible</code></a> and <a href="#isNativeValid()"><code>valid</code></a>,
 otherwise method returns immediately.
 </p>
 <p>
 Zero size semantics are respected, see <a href="#setSize(int,int)"><code>setSize(int,int)</code></a>:<br>
 <pre>
 if ( 0 == windowHandle && visible ) {
   this.visible = visible;
   if( 0 &lt; width && 0 &lt; height ) {
     createNative();
   }
 } else if ( this.visible != visible ) {
   this.visible = visible;
   setNativeSizeImpl();
 }
 </pre></p>
 <p>
 In case this window is <a href="#isChildWindow()"><code>a child window</code></a> and has a <a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a> parent,<br>
 <code>setVisible(wait, true)</code> has no effect as long the parent's is not valid yet,
 i.e. <a href="../nativewindow/NativeWindow.html#getWindowHandle()"><code>NativeWindow.getWindowHandle()</code></a> returns <code>null</code>.<br>
 <code>setVisible(wait, true)</code> shall be repeated when the parent becomes valid.
 </p>
 <p>This method is <a href="#lifecycleHeavy">lifecycle heavy</a>.</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#STATE_BIT_VISIBLE"><code>STATE_BIT_VISIBLE</code></a></dd>
</dl>
</li>
</ul>
<a id="isVisible()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isVisible</h4>
<pre class="methodSignature">boolean&nbsp;isVisible()</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#STATE_BIT_VISIBLE"><code>STATE_BIT_VISIBLE</code></a>, 
<a href="#setVisible(boolean,boolean)"><code>setVisible(boolean, boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="getDelegatedWindow()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDelegatedWindow</h4>
<pre class="methodSignature"><a href="Window.html" title="interface in com.jogamp.newt">Window</a>&nbsp;getDelegatedWindow()</pre>
<div class="block">If the implementation uses delegation, return the delegated <a href="Window.html" title="interface in com.jogamp.newt"><code>Window</code></a> instance,
 otherwise return <code>this</code> instance.</div>
</li>
</ul>
<a id="addChild(com.jogamp.nativewindow.NativeWindow)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addChild</h4>
<pre class="methodSignature">boolean&nbsp;addChild&#8203;(<a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;win)</pre>
</li>
</ul>
<a id="removeChild(com.jogamp.nativewindow.NativeWindow)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeChild</h4>
<pre class="methodSignature">boolean&nbsp;removeChild&#8203;(<a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;win)</pre>
</li>
</ul>
<a id="getPixelsPerMM(float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPixelsPerMM</h4>
<pre class="methodSignature">float[]&nbsp;getPixelsPerMM&#8203;(float[]&nbsp;ppmmStore)</pre>
<div class="block">Returns the <i>pixels per millimeter</i> of this window's <code>NativeSurface</code>
 according to the <a href="#getMainMonitor()"><code>main monitor</code></a>'s <i>current</i> <a href="MonitorMode.html" title="class in com.jogamp.newt"><code>mode</code></a>'s
 <a href="../nativewindow/util/SurfaceSize.html#getResolution()"><code>surface resolution</code></a>.
 <p>
 Method takes the <a href="../nativewindow/ScalableSurface.html#getCurrentSurfaceScale(float%5B%5D)"><code>current surface-scale</code></a> and <a href="../nativewindow/ScalableSurface.html#getMaximumSurfaceScale(float%5B%5D)"><code>native surface-scale</code></a>
 into account, i.e.:
 <pre>
    surfacePpMM = monitorPpMM * currentSurfaceScale / nativeSurfaceScale,
    with PpMM == pixel per millimeter
 </pre>
 </p>
 <p>
 To convert the result to <i>dpi</i>, i.e. dots-per-inch, multiply both components with <code>25.4f</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>ppmmStore</code> - float[2] storage for the ppmm result</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the passed storage containing the ppmm for chaining</dd>
</dl>
</li>
</ul>
<a id="setSize(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSize</h4>
<pre class="methodSignature">void&nbsp;setSize&#8203;(int&nbsp;width,
             int&nbsp;height)</pre>
<div class="block">Sets the size of the window's client area in window units, excluding decorations.

 <p>
 Zero size semantics are respected, see <a href="#setVisible(boolean)"><code>setVisible(boolean)</code></a>:<br>
 <pre>
 if ( visible && 0 != windowHandle && ( 0 &ge; width || 0 &ge; height ) ) {
   setVisible(false);
 } else if ( visible && 0 == windowHandle && 0 &lt; width && 0 &lt; height ) {
   setVisible(true);
 } else {
   // as expected ..
 }
 </pre></p>
 <p>
 This call is ignored if in fullscreen mode.<br></p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>width</code> - of the window's client area in window units</dd>
<dd><code>height</code> - of the window's client area in window units</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setSurfaceSize(int,int)"><code>setSurfaceSize(int, int)</code></a>, 
<a href="#setTopLevelSize(int,int)"><code>setTopLevelSize(int, int)</code></a>, 
<a href="../nativewindow/NativeWindow.html#getInsets()"><code>NativeWindow.getInsets()</code></a></dd>
</dl>
</li>
</ul>
<a id="setSurfaceSize(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSurfaceSize</h4>
<pre class="methodSignature">void&nbsp;setSurfaceSize&#8203;(int&nbsp;pixelWidth,
                    int&nbsp;pixelHeight)</pre>
<div class="block">Sets the size of the window's surface in pixel units which claims the window's client area excluding decorations.

 <p>
 In multiple monitor mode, setting the window's surface size in pixel units
 might not be possible due to unknown <i>scale</i> values of the target display.
 Hence re-setting the pixel unit size after window creation is recommended.
 </p>
 <p>
 Zero size semantics are respected, see <a href="#setVisible(boolean)"><code>setVisible(boolean)</code></a>:<br>
 <pre>
 if ( visible && 0 != windowHandle && ( 0 &ge; width || 0 &ge; height ) ) {
   setVisible(false);
 } else if ( visible && 0 == windowHandle && 0 &lt; width && 0 &lt; height ) {
   setVisible(true);
 } else {
   // as expected ..
 }
 </pre></p>
 <p>
 This call is ignored if in fullscreen mode.<br></p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pixelWidth</code> - of the window's client area in pixel units</dd>
<dd><code>pixelHeight</code> - of the window's client area in pixel units</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setSize(int,int)"><code>setSize(int, int)</code></a>, 
<a href="../nativewindow/NativeWindow.html#getInsets()"><code>NativeWindow.getInsets()</code></a></dd>
</dl>
</li>
</ul>
<a id="setTopLevelSize(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTopLevelSize</h4>
<pre class="methodSignature">void&nbsp;setTopLevelSize&#8203;(int&nbsp;width,
                     int&nbsp;height)</pre>
<div class="block">Sets the size of the top-level window including insets (window decorations) in window units.

 <p>
 Note: Insets (if supported) are available only after the window is set visible and hence has been created.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>width</code> - of the top-level window area in window units</dd>
<dd><code>height</code> - of the top-level window area in window units</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setSize(int,int)"><code>setSize(int, int)</code></a>, 
<a href="../nativewindow/NativeWindow.html#getInsets()"><code>NativeWindow.getInsets()</code></a></dd>
</dl>
</li>
</ul>
<a id="setPosition(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPosition</h4>
<pre class="methodSignature">void&nbsp;setPosition&#8203;(int&nbsp;x,
                 int&nbsp;y)</pre>
<div class="block">Sets the location of the window's client area excluding insets (window decorations) in window units.<br>

 This call is ignored if in fullscreen mode.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>x</code> - coord of the client-area's top left corner in window units</dd>
<dd><code>y</code> - coord of the client-area's top left corner in window units</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../nativewindow/NativeWindow.html#getInsets()"><code>NativeWindow.getInsets()</code></a></dd>
</dl>
</li>
</ul>
<a id="setTopLevelPosition(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTopLevelPosition</h4>
<pre class="methodSignature">void&nbsp;setTopLevelPosition&#8203;(int&nbsp;x,
                         int&nbsp;y)</pre>
<div class="block">Sets the location of the top-level window inclusive insets (window decorations) in window units.<br>

 <p>
 Note: Insets (if supported) are available only after the window is set visible and hence has been created.
 </p>

 This call is ignored if in fullscreen mode.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>x</code> - coord of the top-level left corner in window units</dd>
<dd><code>y</code> - coord of the top-level left corner in window units</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setPosition(int,int)"><code>setPosition(int, int)</code></a>, 
<a href="../nativewindow/NativeWindow.html#getInsets()"><code>NativeWindow.getInsets()</code></a></dd>
</dl>
</li>
</ul>
<a id="setUndecorated(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setUndecorated</h4>
<pre class="methodSignature">void&nbsp;setUndecorated&#8203;(boolean&nbsp;value)</pre>
</li>
</ul>
<a id="isUndecorated()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isUndecorated</h4>
<pre class="methodSignature">boolean&nbsp;isUndecorated()</pre>
</li>
</ul>
<a id="setAlwaysOnTop(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setAlwaysOnTop</h4>
<pre class="methodSignature">void&nbsp;setAlwaysOnTop&#8203;(boolean&nbsp;value)</pre>
<div class="block"><p>Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</p></div>
</li>
</ul>
<a id="isAlwaysOnTop()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAlwaysOnTop</h4>
<pre class="methodSignature">boolean&nbsp;isAlwaysOnTop()</pre>
</li>
</ul>
<a id="setAlwaysOnBottom(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setAlwaysOnBottom</h4>
<pre class="methodSignature">void&nbsp;setAlwaysOnBottom&#8203;(boolean&nbsp;value)</pre>
<div class="block"><p>Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="isAlwaysOnBottom()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAlwaysOnBottom</h4>
<pre class="methodSignature">boolean&nbsp;isAlwaysOnBottom()</pre>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="setResizable(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setResizable</h4>
<pre class="methodSignature">void&nbsp;setResizable&#8203;(boolean&nbsp;value)</pre>
<div class="block"><p>Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="isResizable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isResizable</h4>
<pre class="methodSignature">boolean&nbsp;isResizable()</pre>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="setSticky(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSticky</h4>
<pre class="methodSignature">void&nbsp;setSticky&#8203;(boolean&nbsp;value)</pre>
<div class="block"><p>Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="isSticky()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isSticky</h4>
<pre class="methodSignature">boolean&nbsp;isSticky()</pre>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="setMaximized(boolean,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMaximized</h4>
<pre class="methodSignature">void&nbsp;setMaximized&#8203;(boolean&nbsp;horz,
                  boolean&nbsp;vert)</pre>
<div class="block"><p>Operation is ignored if this instance <a href="#isChildWindow()"><code>is a child window</code></a>.</p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="isMaximizedVert()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isMaximizedVert</h4>
<pre class="methodSignature">boolean&nbsp;isMaximizedVert()</pre>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="isMaximizedHorz()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isMaximizedHorz</h4>
<pre class="methodSignature">boolean&nbsp;isMaximizedHorz()</pre>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.3.2</dd>
</dl>
</li>
</ul>
<a id="setTitle(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTitle</h4>
<pre class="methodSignature">void&nbsp;setTitle&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;title)</pre>
</li>
</ul>
<a id="getTitle()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTitle</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getTitle()</pre>
</li>
</ul>
<a id="isPointerVisible()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isPointerVisible</h4>
<pre class="methodSignature">boolean&nbsp;isPointerVisible()</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setPointerVisible(boolean)"><code>setPointerVisible(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="setPointerVisible(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPointerVisible</h4>
<pre class="methodSignature">void&nbsp;setPointerVisible&#8203;(boolean&nbsp;pointerVisible)</pre>
<div class="block">Makes the pointer visible or invisible.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pointerVisible</code> - defaults to <code>true</code> for platforms w/ visible pointer,
                       otherwise defaults to <code>true</code>, eg. Android.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#confinePointer(boolean)"><code>confinePointer(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="getPointerIcon()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPointerIcon</h4>
<pre class="methodSignature"><a href="Display.PointerIcon.html" title="interface in com.jogamp.newt">Display.PointerIcon</a>&nbsp;getPointerIcon()</pre>
<div class="block">Returns the current <a href="Display.PointerIcon.html" title="interface in com.jogamp.newt"><code>Display.PointerIcon</code></a>, which maybe <code>null</code> for the default.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setPointerIcon(com.jogamp.newt.Display.PointerIcon)"><code>setPointerIcon(PointerIcon)</code></a></dd>
</dl>
</li>
</ul>
<a id="setPointerIcon(com.jogamp.newt.Display.PointerIcon)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPointerIcon</h4>
<pre class="methodSignature">void&nbsp;setPointerIcon&#8203;(<a href="Display.PointerIcon.html" title="interface in com.jogamp.newt">Display.PointerIcon</a>&nbsp;pi)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pi</code> - Valid <a href="Display.PointerIcon.html" title="interface in com.jogamp.newt"><code>Display.PointerIcon</code></a> reference or <code>null</code> to reset the pointer icon to default.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="Display.PointerIcon.html" title="interface in com.jogamp.newt"><code>Display.PointerIcon</code></a>, 
<a href="Display.html#createPointerIcon(com.jogamp.common.util.IOUtil.ClassResources,int,int)"><code>Display.createPointerIcon(com.jogamp.common.util.IOUtil.ClassResources, int, int)</code></a></dd>
</dl>
</li>
</ul>
<a id="isPointerConfined()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isPointerConfined</h4>
<pre class="methodSignature">boolean&nbsp;isPointerConfined()</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#confinePointer(boolean)"><code>confinePointer(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="confinePointer(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>confinePointer</h4>
<pre class="methodSignature">void&nbsp;confinePointer&#8203;(boolean&nbsp;confine)</pre>
<div class="block">Confine the pointer to this window, ie. pointer jail.
 <p>
 Before jailing the mouse pointer,
 the window request the focus and the pointer is centered in the window.
 </p>
 <p>
 In combination w/ <a href="#warpPointer(int,int)"><code>warpPointer(int, int)</code></a>
 and maybe <a href="#setPointerVisible(boolean)"><code>setPointerVisible(boolean)</code></a> a simple mouse
 navigation can be realized.</p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>confine</code> - defaults to <code>false</code>.</dd>
</dl>
</li>
</ul>
<a id="warpPointer(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>warpPointer</h4>
<pre class="methodSignature">void&nbsp;warpPointer&#8203;(int&nbsp;x,
                 int&nbsp;y)</pre>
<div class="block">Moves the pointer to x/y relative to this window's origin in pixel units.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>x</code> - relative pointer x position within this window in pixel units</dd>
<dd><code>y</code> - relative pointer y position within this window in pixel units</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#confinePointer(boolean)"><code>confinePointer(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="reparentWindow(com.jogamp.nativewindow.NativeWindow,int,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reparentWindow</h4>
<pre class="methodSignature"><a href="Window.ReparentOperation.html" title="enum in com.jogamp.newt">Window.ReparentOperation</a>&nbsp;reparentWindow&#8203;(<a href="../nativewindow/NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;newParent,
                                        int&nbsp;x,
                                        int&nbsp;y,
                                        int&nbsp;hints)</pre>
<div class="block">Change this window's parent window.<br>
 <P>
 In case the old parent is not null and a Window,
 this window is removed from it's list of children.<br>
 In case the new parent is not null and a Window,
 this window is added to it's list of children.<br></P>
 <p>This method is <a href="#lifecycleHeavy">lifecycle heavy</a>.</p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newParent</code> - The new parent NativeWindow. If null, this Window becomes a top level window.</dd>
<dd><code>x</code> - new top-level position in window units, use -1 for default position.</dd>
<dd><code>y</code> - new top-level position in window units, use -1 for default position.</dd>
<dd><code>hints</code> - May contain hints (bitfield values) like <a href="#REPARENT_HINT_FORCE_RECREATION"><code>REPARENT_HINT_FORCE_RECREATION</code></a> or <a href="#REPARENT_HINT_BECOMES_VISIBLE"><code>REPARENT_HINT_BECOMES_VISIBLE</code></a>.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The issued reparent action type (strategy) as defined in Window.ReparentAction</dd>
</dl>
</li>
</ul>
<a id="isChildWindow()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isChildWindow</h4>
<pre class="methodSignature">boolean&nbsp;isChildWindow()</pre>
<div class="block">Returns <code>true</code> if this window is a child window,
 i.e. has been <a href="#reparentWindow(com.jogamp.nativewindow.NativeWindow,int,int,int)"><code>reparented</code></a>.
 <p>
 Otherwise return <code>false</code>, i.e. this window is a top-level window.
 </p></div>
</li>
</ul>
<a id="setFullscreen(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setFullscreen</h4>
<pre class="methodSignature">boolean&nbsp;setFullscreen&#8203;(boolean&nbsp;fullscreen)</pre>
<div class="block">Enable or disable fullscreen mode for this window.
 <p>
 Fullscreen mode is established on the <a href="#getMainMonitor()"><code>main monitor</code></a>.
 </p>
 <p>This method is <a href="#lifecycleHeavy">lifecycle heavy</a>.</p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>fullscreen</code> - enable or disable fullscreen mode</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>success</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setFullscreen(java.util.List)"><code>setFullscreen(List)</code></a>, 
<a href="#isFullscreen()"><code>isFullscreen()</code></a></dd>
</dl>
</li>
</ul>
<a id="setFullscreen(java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setFullscreen</h4>
<pre class="methodSignature">boolean&nbsp;setFullscreen&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="MonitorDevice.html" title="class in com.jogamp.newt">MonitorDevice</a>&gt;&nbsp;monitors)</pre>
<div class="block">Enable fullscreen mode for this window spanning across the given <a href="MonitorDevice.html" title="class in com.jogamp.newt"><code>MonitorDevice</code></a>s
 or across all <a href="MonitorDevice.html" title="class in com.jogamp.newt"><code>MonitorDevice</code></a>s.
 <p>
 Disable fullscreen via <a href="#setFullscreen(boolean)"><code>setFullscreen(boolean)</code></a>.
 </p>
 <p>This method is <a href="#lifecycleHeavy">lifecycle heavy</a>.</p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>monitors</code> - if <code>null</code> fullscreen will be spanned across all <a href="MonitorDevice.html" title="class in com.jogamp.newt"><code>MonitorDevice</code></a>s,
                 otherwise across the given list of <a href="MonitorDevice.html" title="class in com.jogamp.newt"><code>MonitorDevice</code></a>.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>success</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setFullscreen(boolean)"><code>setFullscreen(boolean)</code></a>, 
<a href="#isFullscreen()"><code>isFullscreen()</code></a></dd>
</dl>
</li>
</ul>
<a id="isFullscreen()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isFullscreen</h4>
<pre class="methodSignature">boolean&nbsp;isFullscreen()</pre>
</li>
</ul>
<a id="setFocusAction(com.jogamp.newt.Window.FocusRunnable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setFocusAction</h4>
<pre class="methodSignature">void&nbsp;setFocusAction&#8203;(<a href="Window.FocusRunnable.html" title="interface in com.jogamp.newt">Window.FocusRunnable</a>&nbsp;focusAction)</pre>
<div class="block">Sets a <a href="Window.FocusRunnable.html" title="interface in com.jogamp.newt"><code>Window.FocusRunnable</code></a>,
 which <a href="Window.FocusRunnable.html#run()"><code>Window.FocusRunnable.run()</code></a> method is executed before the native focus is requested.
 <p>
 This allows notifying a covered window toolkit like AWT that the focus is requested,
 hence focus traversal can be made transparent.
 </p></div>
</li>
</ul>
<a id="setKeyboardFocusHandler(com.jogamp.newt.event.KeyListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setKeyboardFocusHandler</h4>
<pre class="methodSignature">void&nbsp;setKeyboardFocusHandler&#8203;(<a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>&nbsp;l)</pre>
<div class="block">Sets a <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a> allowing focus traversal with a covered window toolkit like AWT.
 <p>
 The <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a> methods are invoked prior to all other <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a>'s
 allowing to suppress the <a href="event/KeyEvent.html" title="class in com.jogamp.newt.event"><code>KeyEvent</code></a> via the <a href="event/NEWTEvent.html#consumedTag"><code>NEWTEvent.consumedTag</code></a>
 and to perform focus traversal with a 3rd party toolkit.
 </p>
 <p>
 The <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a> methods are not invoked for <a href="event/InputEvent.html#isAutoRepeat()"><code>auto-repeat</code></a> events.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>l</code> - </dd>
</dl>
</li>
</ul>
<a id="requestFocus()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>requestFocus</h4>
<pre class="methodSignature">void&nbsp;requestFocus()</pre>
<div class="block">Request focus for this native window
 <p>
 The request is handled on this Window EDT and blocked until finished.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#requestFocus(boolean)"><code>requestFocus(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="requestFocus(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>requestFocus</h4>
<pre class="methodSignature">void&nbsp;requestFocus&#8203;(boolean&nbsp;wait)</pre>
<div class="block">Request focus for this native window
 <p>
 The request is handled on this Window EDT.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>wait</code> - true if waiting until the request is executed, otherwise false</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#requestFocus()"><code>requestFocus()</code></a></dd>
</dl>
</li>
</ul>
<a id="windowRepaint(int,int,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>windowRepaint</h4>
<pre class="methodSignature">void&nbsp;windowRepaint&#8203;(int&nbsp;x,
                   int&nbsp;y,
                   int&nbsp;width,
                   int&nbsp;height)</pre>
<div class="block">Trigger window repaint while passing the dirty region in pixel units.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>x</code> - dirty-region y-pos in pixel units</dd>
<dd><code>y</code> - dirty-region x-pos in pixel units</dd>
<dd><code>width</code> - dirty-region width in pixel units</dd>
<dd><code>height</code> - dirty-region height in pixel units</dd>
</dl>
</li>
</ul>
<a id="enqueueEvent(boolean,com.jogamp.newt.event.NEWTEvent)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>enqueueEvent</h4>
<pre class="methodSignature">void&nbsp;enqueueEvent&#8203;(boolean&nbsp;wait,
                  <a href="event/NEWTEvent.html" title="class in com.jogamp.newt.event">NEWTEvent</a>&nbsp;event)</pre>
<div class="block">Enqueues a <a href="event/NEWTEvent.html" title="class in com.jogamp.newt.event"><code>NEWT event</code></a>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>wait</code> - Passing <code>true</code> will block until the event has been processed, otherwise method returns immediately.</dd>
<dd><code>event</code> - The <a href="event/NEWTEvent.html" title="class in com.jogamp.newt.event"><code>event</code></a> to enqueue.</dd>
</dl>
</li>
</ul>
<a id="runOnEDTIfAvail(boolean,java.lang.Runnable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>runOnEDTIfAvail</h4>
<pre class="methodSignature">void&nbsp;runOnEDTIfAvail&#8203;(boolean&nbsp;wait,
                     <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Runnable.html?is-external=true" title="class or interface in java.lang" class="externalLink">Runnable</a>&nbsp;task)</pre>
</li>
</ul>
<a id="toSimpleString(java.lang.StringBuilder)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toSimpleString</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;toSimpleString&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb)</pre>
<div class="block">Appends this class simple string one-line representation to the given <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink"><code>StringBuilder</code></a> instance</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sb</code> - given instance where this class simple string representation is added to</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the given <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink"><code>StringBuilder</code></a> for chaining</dd>
</dl>
</li>
</ul>
<a id="toSimpleString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toSimpleString</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toSimpleString()</pre>
<div class="block">Returns a simple string one-line representation of this instance using <a href="#toSimpleString(java.lang.StringBuilder)"><code>toSimpleString(StringBuilder)</code></a>.</div>
</li>
</ul>
<a id="toString(java.lang.StringBuilder)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;toString&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb)</pre>
<div class="block">Appends this class full string multi-line representation to the given <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink"><code>StringBuilder</code></a> instance</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sb</code> - given instance where this class full string representation is added to</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the given <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink"><code>StringBuilder</code></a> for chaining</dd>
</dl>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<div class="block">Returns a full string multi-line representation of this instance using <a href="#toString(java.lang.StringBuilder)"><code>toString(StringBuilder)</code></a>.
 <p>
 
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
<a id="sendWindowEvent(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendWindowEvent</h4>
<pre class="methodSignature">void&nbsp;sendWindowEvent&#8203;(int&nbsp;eventType)</pre>
<div class="block">Send a <a href="event/WindowEvent.html" title="class in com.jogamp.newt.event"><code>WindowEvent</code></a> to all <a href="event/WindowListener.html" title="interface in com.jogamp.newt.event"><code>WindowListener</code></a>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>eventType</code> - a <a href="event/WindowEvent.html" title="class in com.jogamp.newt.event"><code>WindowEvent</code></a> type, e.g. <a href="event/WindowEvent.html#EVENT_WINDOW_REPAINT"><code>WindowEvent.EVENT_WINDOW_REPAINT</code></a>.</dd>
</dl>
</li>
</ul>
<a id="addWindowListener(com.jogamp.newt.event.WindowListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addWindowListener</h4>
<pre class="methodSignature">void&nbsp;addWindowListener&#8203;(<a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a>&nbsp;l)</pre>
<div class="block">Appends the given <a href="event/WindowListener.html" title="interface in com.jogamp.newt.event"><code>WindowListener</code></a> to the end of
 the list.</div>
</li>
</ul>
<a id="addWindowListener(int,com.jogamp.newt.event.WindowListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addWindowListener</h4>
<pre class="methodSignature">void&nbsp;addWindowListener&#8203;(int&nbsp;index,
                       <a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a>&nbsp;l)
                throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></pre>
<div class="block">Inserts the given <a href="event/WindowListener.html" title="interface in com.jogamp.newt.event"><code>WindowListener</code></a> at the
 specified position in the list.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>index</code> - Position where the listener will be inserted.
 Should be within (0 <= index && index <= size()).
 An index value of -1 is interpreted as the end of the list, size().</dd>
<dd><code>l</code> - The listener object to be inserted</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code> - If the index is not within (0 <= index && index <= size()), or -1</dd>
</dl>
</li>
</ul>
<a id="removeWindowListener(com.jogamp.newt.event.WindowListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeWindowListener</h4>
<pre class="methodSignature">void&nbsp;removeWindowListener&#8203;(<a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a>&nbsp;l)</pre>
</li>
</ul>
<a id="getWindowListener(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getWindowListener</h4>
<pre class="methodSignature"><a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a>&nbsp;getWindowListener&#8203;(int&nbsp;index)</pre>
</li>
</ul>
<a id="getWindowListeners()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getWindowListeners</h4>
<pre class="methodSignature"><a href="event/WindowListener.html" title="interface in com.jogamp.newt.event">WindowListener</a>[]&nbsp;getWindowListeners()</pre>
</li>
</ul>
<a id="setKeyboardVisible(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setKeyboardVisible</h4>
<pre class="methodSignature">void&nbsp;setKeyboardVisible&#8203;(boolean&nbsp;visible)</pre>
<div class="block">In case the platform supports or even requires a virtual on-screen keyboard,
 this method shows or hide it depending on whether <code>visible</code> is <code>true</code>
 or <code>false</code>.
 <p>
 One known platform where NEWT supports this feature is <code>Android</code>.
 </p></div>
</li>
</ul>
<a id="isKeyboardVisible()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isKeyboardVisible</h4>
<pre class="methodSignature">boolean&nbsp;isKeyboardVisible()</pre>
<div class="block">Return <code>true</code> if the virtual on-screen keyboard is visible, otherwise <code>false</code>.
 <p>
 Currently on <code>Android</code>, the only supported platform right now,
 there is no way to reliably be notified of the current keyboard state.<br>
 It would be best, if your code does not rely on this information.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setKeyboardVisible(boolean)"><code>setKeyboardVisible(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="addKeyListener(com.jogamp.newt.event.KeyListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addKeyListener</h4>
<pre class="methodSignature">void&nbsp;addKeyListener&#8203;(<a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>&nbsp;l)</pre>
<div class="block">Appends the given <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a> to the end of
 the list.</div>
</li>
</ul>
<a id="addKeyListener(int,com.jogamp.newt.event.KeyListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addKeyListener</h4>
<pre class="methodSignature">void&nbsp;addKeyListener&#8203;(int&nbsp;index,
                    <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>&nbsp;l)</pre>
<div class="block">Inserts the given <a href="event/KeyListener.html" title="interface in com.jogamp.newt.event"><code>KeyListener</code></a> at the
 specified position in the list.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>index</code> - Position where the listener will be inserted.
 Should be within (0 <= index && index <= size()).
 An index value of -1 is interpreted as the end of the list, size().</dd>
<dd><code>l</code> - The listener object to be inserted</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code> - If the index is not within (0 <= index && index <= size()), or -1</dd>
</dl>
</li>
</ul>
<a id="removeKeyListener(com.jogamp.newt.event.KeyListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeKeyListener</h4>
<pre class="methodSignature">void&nbsp;removeKeyListener&#8203;(<a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>&nbsp;l)</pre>
</li>
</ul>
<a id="getKeyListener(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getKeyListener</h4>
<pre class="methodSignature"><a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>&nbsp;getKeyListener&#8203;(int&nbsp;index)</pre>
</li>
</ul>
<a id="getKeyListeners()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getKeyListeners</h4>
<pre class="methodSignature"><a href="event/KeyListener.html" title="interface in com.jogamp.newt.event">KeyListener</a>[]&nbsp;getKeyListeners()</pre>
</li>
</ul>
<a id="addMouseListener(com.jogamp.newt.event.MouseListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addMouseListener</h4>
<pre class="methodSignature">void&nbsp;addMouseListener&#8203;(<a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a>&nbsp;l)</pre>
<div class="block">Appends the given <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a> to the end of the list.</div>
</li>
</ul>
<a id="addMouseListener(int,com.jogamp.newt.event.MouseListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addMouseListener</h4>
<pre class="methodSignature">void&nbsp;addMouseListener&#8203;(int&nbsp;index,
                      <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a>&nbsp;l)</pre>
<div class="block">Inserts the given <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a> at the
 specified position in the list.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>index</code> - Position where the listener will be inserted.
 Should be within (0 <= index && index <= size()).
 An index value of -1 is interpreted as the end of the list, size().</dd>
<dd><code>l</code> - The listener object to be inserted</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code> - If the index is not within (0 <= index && index <= size()), or -1</dd>
</dl>
</li>
</ul>
<a id="removeMouseListener(com.jogamp.newt.event.MouseListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeMouseListener</h4>
<pre class="methodSignature">void&nbsp;removeMouseListener&#8203;(<a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a>&nbsp;l)</pre>
<div class="block">Removes the given <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a> from the list.</div>
</li>
</ul>
<a id="getMouseListener(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMouseListener</h4>
<pre class="methodSignature"><a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a>&nbsp;getMouseListener&#8203;(int&nbsp;index)</pre>
<div class="block">Returns the <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a> from the list at the given index.</div>
</li>
</ul>
<a id="getMouseListeners()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMouseListeners</h4>
<pre class="methodSignature"><a href="event/MouseListener.html" title="interface in com.jogamp.newt.event">MouseListener</a>[]&nbsp;getMouseListeners()</pre>
<div class="block">Returns all <a href="event/MouseListener.html" title="interface in com.jogamp.newt.event"><code>MouseListener</code></a></div>
</li>
</ul>
<a id="setDefaultGesturesEnabled(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDefaultGesturesEnabled</h4>
<pre class="methodSignature">void&nbsp;setDefaultGesturesEnabled&#8203;(boolean&nbsp;enable)</pre>
<div class="block">Enable or disable default <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a>. Default is enabled.</div>
</li>
</ul>
<a id="areDefaultGesturesEnabled()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>areDefaultGesturesEnabled</h4>
<pre class="methodSignature">boolean&nbsp;areDefaultGesturesEnabled()</pre>
<div class="block">Return true if default <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a> are enabled.</div>
</li>
</ul>
<a id="addGestureHandler(com.jogamp.newt.event.GestureHandler)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addGestureHandler</h4>
<pre class="methodSignature">void&nbsp;addGestureHandler&#8203;(<a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event">GestureHandler</a>&nbsp;gh)</pre>
<div class="block">Appends the given <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a> to the end of the list.</div>
</li>
</ul>
<a id="addGestureHandler(int,com.jogamp.newt.event.GestureHandler)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addGestureHandler</h4>
<pre class="methodSignature">void&nbsp;addGestureHandler&#8203;(int&nbsp;index,
                       <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event">GestureHandler</a>&nbsp;gh)</pre>
<div class="block">Inserts the given <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a> at the
 specified position in the list.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>index</code> - Position where the listener will be inserted.
 Should be within (0 <= index && index <= size()).
 An index value of -1 is interpreted as the end of the list, size().</dd>
<dd><code>l</code> - The listener object to be inserted</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code> - If the index is not within (0 <= index && index <= size()), or -1</dd>
</dl>
</li>
</ul>
<a id="removeGestureHandler(com.jogamp.newt.event.GestureHandler)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeGestureHandler</h4>
<pre class="methodSignature">void&nbsp;removeGestureHandler&#8203;(<a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event">GestureHandler</a>&nbsp;gh)</pre>
<div class="block">Removes the given <a href="event/GestureHandler.html" title="interface in com.jogamp.newt.event"><code>GestureHandler</code></a> from the list.</div>
</li>
</ul>
<a id="addGestureListener(com.jogamp.newt.event.GestureHandler.GestureListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addGestureListener</h4>
<pre class="methodSignature">void&nbsp;addGestureListener&#8203;(<a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event">GestureHandler.GestureListener</a>&nbsp;gl)</pre>
<div class="block">Appends the given <a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event"><code>GestureHandler.GestureListener</code></a> to the end of the list.</div>
</li>
</ul>
<a id="addGestureListener(int,com.jogamp.newt.event.GestureHandler.GestureListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addGestureListener</h4>
<pre class="methodSignature">void&nbsp;addGestureListener&#8203;(int&nbsp;index,
                        <a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event">GestureHandler.GestureListener</a>&nbsp;gl)</pre>
<div class="block">Inserts the given <a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event"><code>GestureHandler.GestureListener</code></a> at the
 specified position in the list.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>index</code> - Position where the listener will be inserted.
 Should be within (0 <= index && index <= size()).
 An index value of -1 is interpreted as the end of the list, size().</dd>
<dd><code>l</code> - The listener object to be inserted</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code> - If the index is not within (0 <= index && index <= size()), or -1</dd>
</dl>
</li>
</ul>
<a id="removeGestureListener(com.jogamp.newt.event.GestureHandler.GestureListener)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>removeGestureListener</h4>
<pre class="methodSignature">void&nbsp;removeGestureListener&#8203;(<a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event">GestureHandler.GestureListener</a>&nbsp;gl)</pre>
<div class="block">Removes the given <a href="event/GestureHandler.GestureListener.html" title="interface in com.jogamp.newt.event"><code>GestureHandler.GestureListener</code></a> from the list.</div>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/newt/Window.html" target="_top">Frames</a></li>
<li><a href="Window.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
