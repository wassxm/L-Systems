<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>Binary16 (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Binary16 (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9,"i5":9,"i6":9,"i7":9,"i8":9,"i9":9,"i10":9,"i11":9,"i12":9,"i13":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/math/Binary16.html" target="_top">Frames</a></li>
<li><a href="Binary16.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl.math</a></div>
<h2 title="Class Binary16" class="title">Class Binary16</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.math.Binary16</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public final class <span class="typeNameLabel">Binary16</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block"><p>
 Functions to convert values to/from the <code>binary16</code> format
 specified in <code>IEEE 754 2008</code>.
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#BIAS">BIAS</a></span></code></th>
<td class="colLast">
<div class="block">The <i>bias</i> value used to offset the encoded exponent.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#NEGATIVE_INFINITY">NEGATIVE_INFINITY</a></span></code></th>
<td class="colLast">
<div class="block">The encoded form of negative infinity <code>-∞</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#NEGATIVE_ZERO">NEGATIVE_ZERO</a></span></code></th>
<td class="colLast">
<div class="block">The encoded form of negative zero <code>-0</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#POSITIVE_INFINITY">POSITIVE_INFINITY</a></span></code></th>
<td class="colLast">
<div class="block">The encoded form of positive infinity <code>∞</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#POSITIVE_ZERO">POSITIVE_ZERO</a></span></code></th>
<td class="colLast">
<div class="block">The encoded form of positive zero <code>0</code>.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#exampleNaN()">exampleNaN</a></span>()</code></th>
<td class="colLast">
<div class="block">One possible not-a-number value.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isInfinite(char)">isInfinite</a></span>&#8203;(char&nbsp;k)</code></th>
<td class="colLast">
<div class="block">Return <code>true</code> if the given packed <code>binary16</code> value
 is infinite.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isNaN(char)">isNaN</a></span>&#8203;(char&nbsp;k)</code></th>
<td class="colLast">
<div class="block">Return <code>true</code> if the given packed <code>binary16</code> value
 is not a number (<code>NaN</code>).</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#packDouble(double)">packDouble</a></span>&#8203;(double&nbsp;k)</code></th>
<td class="colLast">
<div class="block">
 Convert a double precision floating point value to a packed
 <code>binary16</code> value.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#packFloat(float)">packFloat</a></span>&#8203;(float&nbsp;k)</code></th>
<td class="colLast">
<div class="block">
 Convert a single precision floating point value to a packed
 <code>binary16</code> value.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#packSetExponentUnbiasedUnchecked(int)">packSetExponentUnbiasedUnchecked</a></span>&#8203;(int&nbsp;e)</code></th>
<td class="colLast">
<div class="block">
 Encode the unbiased exponent <code>e</code>.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#packSetSignificandUnchecked(int)">packSetSignificandUnchecked</a></span>&#8203;(int&nbsp;s)</code></th>
<td class="colLast">
<div class="block">
 Encode the significand <code>s</code>.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>static char</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#packSetSignUnchecked(int)">packSetSignUnchecked</a></span>&#8203;(int&nbsp;s)</code></th>
<td class="colLast">
<div class="block">
 Encode the sign bit <code>s</code>.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toRawBinaryString(char)">toRawBinaryString</a></span>&#8203;(char&nbsp;k)</code></th>
<td class="colLast">
<div class="block">Show the given raw packed <code>binary16</code> value as a string of
 binary digits.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>static double</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#unpackDouble(char)">unpackDouble</a></span>&#8203;(char&nbsp;k)</code></th>
<td class="colLast">
<div class="block">
 Convert a packed <code>binary16</code> value <code>k</code> to a
 double-precision floating point value.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#unpackFloat(char)">unpackFloat</a></span>&#8203;(char&nbsp;k)</code></th>
<td class="colLast">
<div class="block">
 Convert a packed <code>binary16</code> value <code>k</code> to a
 single-precision floating point value.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#unpackGetExponentUnbiased(char)">unpackGetExponentUnbiased</a></span>&#8203;(char&nbsp;k)</code></th>
<td class="colLast">
<div class="block">
 Extract and unbias the exponent of the given packed <code>binary16</code>
 value.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#unpackGetSign(char)">unpackGetSign</a></span>&#8203;(char&nbsp;k)</code></th>
<td class="colLast">
<div class="block">Retrieve the sign bit of the given packed <code>binary16</code> value, as
 an integer in the range <code>[0, 1]</code>.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#unpackGetSignificand(char)">unpackGetSignificand</a></span>&#8203;(char&nbsp;k)</code></th>
<td class="colLast">
<div class="block">
 Return the significand of the given packed <code>binary16</code> value as
 an integer in the range <code>[0, 1023]</code>.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="NEGATIVE_INFINITY">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>NEGATIVE_INFINITY</h4>
<pre>public static final&nbsp;char NEGATIVE_INFINITY</pre>
<div class="block">The encoded form of negative infinity <code>-∞</code>.</div>
</li>
</ul>
<a id="POSITIVE_INFINITY">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>POSITIVE_INFINITY</h4>
<pre>public static final&nbsp;char POSITIVE_INFINITY</pre>
<div class="block">The encoded form of positive infinity <code>∞</code>.</div>
</li>
</ul>
<a id="POSITIVE_ZERO">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>POSITIVE_ZERO</h4>
<pre>public static final&nbsp;char POSITIVE_ZERO</pre>
<div class="block">The encoded form of positive zero <code>0</code>.</div>
</li>
</ul>
<a id="NEGATIVE_ZERO">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>NEGATIVE_ZERO</h4>
<pre>public static final&nbsp;char NEGATIVE_ZERO</pre>
<div class="block">The encoded form of negative zero <code>-0</code>.</div>
</li>
</ul>
<a id="BIAS">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>BIAS</h4>
<pre>public static final&nbsp;int BIAS</pre>
<div class="block">The <i>bias</i> value used to offset the encoded exponent. A given
 exponent <code>e</code> is encoded as <code><a href="#BIAS"><code>BIAS</code></a> + e</code>.</div>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="exampleNaN()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>exampleNaN</h4>
<pre class="methodSignature">public static&nbsp;char&nbsp;exampleNaN()</pre>
<div class="block">One possible not-a-number value.</div>
</li>
</ul>
<a id="isInfinite(char)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isInfinite</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isInfinite&#8203;(char&nbsp;k)</pre>
<div class="block">Return <code>true</code> if the given packed <code>binary16</code> value
 is infinite.</div>
</li>
</ul>
<a id="isNaN(char)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isNaN</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isNaN&#8203;(char&nbsp;k)</pre>
<div class="block">Return <code>true</code> if the given packed <code>binary16</code> value
 is not a number (<code>NaN</code>).</div>
</li>
</ul>
<a id="packDouble(double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>packDouble</h4>
<pre class="methodSignature">public static&nbsp;char&nbsp;packDouble&#8203;(double&nbsp;k)</pre>
<div class="block"><p>
 Convert a double precision floating point value to a packed
 <code>binary16</code> value.
 </p>
 <p>
 For the following specific cases, the function returns:
 </p>
 <ul>
 <li><code>NaN</code> iff <code>isNaN(k)</code></li>
 <li><a href="#POSITIVE_INFINITY"><code>POSITIVE_INFINITY</code></a> iff
 <code>k == <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Double.html?is-external=true#POSITIVE_INFINITY" title="class or interface in java.lang" class="externalLink"><code>Double.POSITIVE_INFINITY</code></a></code></li>
 <li><a href="#NEGATIVE_INFINITY"><code>NEGATIVE_INFINITY</code></a> iff
 <code>k == <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Double.html?is-external=true#NEGATIVE_INFINITY" title="class or interface in java.lang" class="externalLink"><code>Double.NEGATIVE_INFINITY</code></a></code></li>
 <li><a href="#NEGATIVE_ZERO"><code>NEGATIVE_ZERO</code></a> iff <code>k == -0.0</code></li>
 <li><a href="#POSITIVE_ZERO"><code>POSITIVE_ZERO</code></a> iff <code>k == 0.0</code></li>
 </ul>
 <p>
 Otherwise, the <code>binary16</code> value that most closely represents
 <code>k</code> is returned. This may obviously be an infinite value as
 the interval of double precision values is far larger than that of the
 <code>binary16</code> type.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#unpackDouble(char)"><code>unpackDouble(char)</code></a></dd>
</dl>
</li>
</ul>
<a id="packFloat(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>packFloat</h4>
<pre class="methodSignature">public static&nbsp;char&nbsp;packFloat&#8203;(float&nbsp;k)</pre>
<div class="block"><p>
 Convert a single precision floating point value to a packed
 <code>binary16</code> value.
 </p>
 <p>
 For the following specific cases, the function returns:
 </p>
 <ul>
 <li><code>NaN</code> iff <code>isNaN(k)</code></li>
 <li><a href="#POSITIVE_INFINITY"><code>POSITIVE_INFINITY</code></a> iff
 <code>k == <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Float.html?is-external=true#POSITIVE_INFINITY" title="class or interface in java.lang" class="externalLink"><code>Float.POSITIVE_INFINITY</code></a></code></li>
 <li><a href="#NEGATIVE_INFINITY"><code>NEGATIVE_INFINITY</code></a> iff
 <code>k == <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Float.html?is-external=true#NEGATIVE_INFINITY" title="class or interface in java.lang" class="externalLink"><code>Float.NEGATIVE_INFINITY</code></a></code></li>
 <li><a href="#NEGATIVE_ZERO"><code>NEGATIVE_ZERO</code></a> iff <code>k == -0.0</code></li>
 <li><a href="#POSITIVE_ZERO"><code>POSITIVE_ZERO</code></a> iff <code>k == 0.0</code></li>
 </ul>
 <p>
 Otherwise, the <code>binary16</code> value that most closely represents
 <code>k</code> is returned. This may obviously be an infinite value as
 the interval of single precision values is far larger than that of the
 <code>binary16</code> type.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#unpackFloat(char)"><code>unpackFloat(char)</code></a></dd>
</dl>
</li>
</ul>
<a id="packSetExponentUnbiasedUnchecked(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>packSetExponentUnbiasedUnchecked</h4>
<pre class="methodSignature">public static&nbsp;char&nbsp;packSetExponentUnbiasedUnchecked&#8203;(int&nbsp;e)</pre>
<div class="block"><p>
 Encode the unbiased exponent <code>e</code>. Values should be in the
 range <code>[-15, 16]</code> - values outside of this range will be
 truncated.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#unpackGetExponentUnbiased(char)"><code>unpackGetExponentUnbiased(char)</code></a></dd>
</dl>
</li>
</ul>
<a id="packSetSignificandUnchecked(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>packSetSignificandUnchecked</h4>
<pre class="methodSignature">public static&nbsp;char&nbsp;packSetSignificandUnchecked&#8203;(int&nbsp;s)</pre>
<div class="block"><p>
 Encode the significand <code>s</code>. Values should be in the range
 <code>[0, 1023]</code>. Values outside of this range will be truncated.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#unpackGetSignificand(char)"><code>unpackGetSignificand(char)</code></a></dd>
</dl>
</li>
</ul>
<a id="packSetSignUnchecked(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>packSetSignUnchecked</h4>
<pre class="methodSignature">public static&nbsp;char&nbsp;packSetSignUnchecked&#8203;(int&nbsp;s)</pre>
<div class="block"><p>
 Encode the sign bit <code>s</code>. Values should be in the range
 <code>[0, 1]</code>, with <code>0</code> ironically denoting a positive
 value. Values outside of this range will be truncated.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#unpackGetSign(char)"><code>unpackGetSign(char)</code></a></dd>
</dl>
</li>
</ul>
<a id="toRawBinaryString(char)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toRawBinaryString</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toRawBinaryString&#8203;(char&nbsp;k)</pre>
<div class="block">Show the given raw packed <code>binary16</code> value as a string of
 binary digits.</div>
</li>
</ul>
<a id="unpackDouble(char)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>unpackDouble</h4>
<pre class="methodSignature">public static&nbsp;double&nbsp;unpackDouble&#8203;(char&nbsp;k)</pre>
<div class="block"><p>
 Convert a packed <code>binary16</code> value <code>k</code> to a
 double-precision floating point value.
 </p>
 <p>
 The function returns:
 </p>
 <ul>
 <li><code>NaN</code> iff <code>isNaN(k)</code></li>
 <li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Double.html?is-external=true#POSITIVE_INFINITY" title="class or interface in java.lang" class="externalLink"><code>Double.POSITIVE_INFINITY</code></a> iff
 <code>k == <a href="#POSITIVE_INFINITY"><code>POSITIVE_INFINITY</code></a></code></li>
 <li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Double.html?is-external=true#NEGATIVE_INFINITY" title="class or interface in java.lang" class="externalLink"><code>Double.NEGATIVE_INFINITY</code></a> iff
 <code>k == <a href="#NEGATIVE_INFINITY"><code>NEGATIVE_INFINITY</code></a></code></li>
 <li><code>-0.0</code> iff <code>k == <a href="#NEGATIVE_ZERO"><code>NEGATIVE_ZERO</code></a></code></li>
 <li><code>0.0</code> iff <code>k == <a href="#POSITIVE_ZERO"><code>POSITIVE_ZERO</code></a></code></li>
 <li><code>(-1.0 * n) * (2 ^ e) * 1.s</code>, for the decoded sign
 <code>n</code> of <code>k</code>, the decoded exponent <code>e</code> of
 <code>k</code>, and the decoded significand <code>s</code> of
 <code>k</code>.</li>
 </ul></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#packDouble(double)"><code>packDouble(double)</code></a></dd>
</dl>
</li>
</ul>
<a id="unpackFloat(char)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>unpackFloat</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;unpackFloat&#8203;(char&nbsp;k)</pre>
<div class="block"><p>
 Convert a packed <code>binary16</code> value <code>k</code> to a
 single-precision floating point value.
 </p>
 <p>
 The function returns:
 </p>
 <ul>
 <li><code>NaN</code> iff <code>isNaN(k)</code></li>
 <li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Float.html?is-external=true#POSITIVE_INFINITY" title="class or interface in java.lang" class="externalLink"><code>Float.POSITIVE_INFINITY</code></a> iff
 <code>k == <a href="#POSITIVE_INFINITY"><code>POSITIVE_INFINITY</code></a></code></li>
 <li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Float.html?is-external=true#NEGATIVE_INFINITY" title="class or interface in java.lang" class="externalLink"><code>Float.NEGATIVE_INFINITY</code></a> iff
 <code>k == <a href="#NEGATIVE_INFINITY"><code>NEGATIVE_INFINITY</code></a></code></li>
 <li><code>-0.0</code> iff <code>k == <a href="#NEGATIVE_ZERO"><code>NEGATIVE_ZERO</code></a></code></li>
 <li><code>0.0</code> iff <code>k == <a href="#POSITIVE_ZERO"><code>POSITIVE_ZERO</code></a></code></li>
 <li><code>(-1.0 * n) * (2 ^ e) * 1.s</code>, for the decoded sign
 <code>n</code> of <code>k</code>, the decoded exponent <code>e</code> of
 <code>k</code>, and the decoded significand <code>s</code> of
 <code>k</code>.</li>
 </ul></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#packFloat(float)"><code>packFloat(float)</code></a></dd>
</dl>
</li>
</ul>
<a id="unpackGetExponentUnbiased(char)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>unpackGetExponentUnbiased</h4>
<pre class="methodSignature">public static&nbsp;int&nbsp;unpackGetExponentUnbiased&#8203;(char&nbsp;k)</pre>
<div class="block"><p>
 Extract and unbias the exponent of the given packed <code>binary16</code>
 value.
 </p>
 <p>
 The exponent is encoded <i>biased</i> as a number in the range
 <code>[0, 31]</code>, with <code>0</code> indicating that the number is
 <i>subnormal</i> and <code>[1, 30]</code> denoting the actual exponent
 plus <a href="#BIAS"><code>BIAS</code></a>. Infinite and <code>NaN</code> values always have an
 exponent of <code>31</code>.
 </p>
 <p>
 This function will therefore return:
 </p>
 <ul>
 <li>
 <code>0 - <a href="#BIAS"><code>BIAS</code></a> = -15</code> iff the input is a <i>subnormal</i>
 number.</li>
 <li>An integer in the range
 <code>[1 - <a href="#BIAS"><code>BIAS</code></a>, 30 - <a href="#BIAS"><code>BIAS</code></a>] = [-14, 15]</code> iff the
 input is a <i>normal</i> number.</li>
 <li>
 <code>16</code> iff the input is <a href="#POSITIVE_INFINITY"><code>POSITIVE_INFINITY</code></a>,
 <a href="#NEGATIVE_INFINITY"><code>NEGATIVE_INFINITY</code></a>, or <code>NaN</code>.</li>
 </ul></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#packSetExponentUnbiasedUnchecked(int)"><code>packSetExponentUnbiasedUnchecked(int)</code></a></dd>
</dl>
</li>
</ul>
<a id="unpackGetSign(char)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>unpackGetSign</h4>
<pre class="methodSignature">public static&nbsp;int&nbsp;unpackGetSign&#8203;(char&nbsp;k)</pre>
<div class="block">Retrieve the sign bit of the given packed <code>binary16</code> value, as
 an integer in the range <code>[0, 1]</code>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#packSetSignUnchecked(int)"><code>packSetSignUnchecked(int)</code></a></dd>
</dl>
</li>
</ul>
<a id="unpackGetSignificand(char)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>unpackGetSignificand</h4>
<pre class="methodSignature">public static&nbsp;int&nbsp;unpackGetSignificand&#8203;(char&nbsp;k)</pre>
<div class="block"><p>
 Return the significand of the given packed <code>binary16</code> value as
 an integer in the range <code>[0, 1023]</code>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#packSetSignificandUnchecked(int)"><code>packSetSignificandUnchecked(int)</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/math/Binary16.html" target="_top">Frames</a></li>
<li><a href="Binary16.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
