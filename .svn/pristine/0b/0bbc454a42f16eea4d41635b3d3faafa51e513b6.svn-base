<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>GLDrawableFactory (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GLDrawableFactory (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6,"i6":6,"i7":6,"i8":6,"i9":6,"i10":6,"i11":10,"i12":6,"i13":9,"i14":9,"i15":9,"i16":9,"i17":9,"i18":6,"i19":6,"i20":6,"i21":6,"i22":10,"i23":9,"i24":6,"i25":6,"i26":6};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLDrawableFactory.html" target="_top">Frames</a></li>
<li><a href="GLDrawableFactory.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl</a></div>
<h2 title="Class GLDrawableFactory" class="title">Class GLDrawableFactory</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.GLDrawableFactory</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public abstract class <span class="typeNameLabel">GLDrawableFactory</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block"><p> Provides a virtual machine- and operating system-independent
    mechanism for creating <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>s.
    </p>
    <p> The <a href="GLCapabilities.html" title="class in com.jogamp.opengl"><code>GLCapabilities</code></a> objects passed
    in to the various factory methods are used as a hint for the
    properties of the returned drawable. The default capabilities
    selection algorithm (equivalent to passing in a null <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesChooser</code></a>) is described in <a href="DefaultGLCapabilitiesChooser.html" title="class in com.jogamp.opengl"><code>DefaultGLCapabilitiesChooser</code></a>. Sophisticated applications needing
    to change the selection algorithm may pass in their own <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesChooser</code></a> which can select from the available pixel
    formats. The GLCapabilitiesChooser mechanism may not be supported
    by all implementations or on all platforms, in which case any
    passed GLCapabilitiesChooser will be ignored.
    </p>

    <p> Because of the multithreaded nature of the Java platform's
    Abstract Window Toolkit, it is typically not possible to immediately
    reject a given <a href="GLCapabilities.html" title="class in com.jogamp.opengl"><code>GLCapabilities</code></a> as being unsupportable by
    either returning <code>null</code> from the creation routines or
    raising a <a href="GLException.html" title="class in com.jogamp.opengl"><code>GLException</code></a>. The semantics of the rejection
    process are (unfortunately) left unspecified for now. The current
    implementation will cause a <a href="GLException.html" title="class in com.jogamp.opengl"><code>GLException</code></a> to be raised
    during the first repaint of the <a href="awt/GLCanvas.html" title="class in com.jogamp.opengl.awt"><code>GLCanvas</code></a> or <a href="awt/GLJPanel.html" title="class in com.jogamp.opengl.awt"><code>GLJPanel</code></a> if the capabilities can not be met.<br>
    <a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLOffscreenAutoDrawable</code></a> are created lazily,
    see <a href="#createOffscreenAutoDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser,int,int)"><code>createOffscreenAutoDrawable(..)</code></a>.
    </p>

    <p> The concrete GLDrawableFactory subclass instantiated by <a href="#getFactory(com.jogamp.opengl.GLProfile)"><code>getFactory</code></a> can be changed by setting the system
    property <code>opengl.factory.class.name</code> to the
    fully-qualified name of the desired class.
    </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#canCreateExternalGLDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice)">canCreateExternalGLDrawable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</code></th>
<td class="colLast">
<div class="block">Returns true if it is possible to create an external GLDrawable
 object via <a href="#createExternalGLDrawable()"><code>createExternalGLDrawable()</code></a>.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#canCreateFBO(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">canCreateFBO</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
            <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</code></th>
<td class="colLast">
<div class="block">Returns true if it is possible to create an <i>framebuffer object</i> (FBO).</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#canCreateGLPbuffer(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">canCreateGLPbuffer</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                  <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</code></th>
<td class="colLast">
<div class="block">Returns true if it is possible to create an <i>pbuffer surface</i>.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>abstract <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createDummyAutoDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)">createDummyAutoDrawable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;deviceReq,
                       boolean&nbsp;createNewDevice,
                       <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;capsRequested,
                       <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser)</code></th>
<td class="colLast">
<div class="block">Creates a <a href="GLDrawable.html#isRealized()"><code>realized</code></a> <i>dummy</i> <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>
 incl it's <i>dummy, invisible</i> <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a>
 as created with <a href="#createDummyDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)"><code>createDummyDrawable(AbstractGraphicsDevice, boolean, GLCapabilitiesImmutable, GLCapabilitiesChooser)</code></a>.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>abstract <a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createDummyDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)">createDummyDrawable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;deviceReq,
                   boolean&nbsp;createNewDevice,
                   <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;capsRequested,
                   <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser)</code></th>
<td class="colLast">
<div class="block">Creates an <a href="GLDrawable.html#isRealized()"><code>unrealized</code></a> dummy <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>abstract <a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createExternalGLContext()">createExternalGLContext</a></span>()</code></th>
<td class="colLast">
<div class="block"> Creates a GLContext object representing an existing OpenGL
 context in an external (third-party) OpenGL-based library.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>abstract <a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createExternalGLDrawable()">createExternalGLDrawable</a></span>()</code></th>
<td class="colLast">
<div class="block"> Creates a <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> object representing an existing
 OpenGL drawable in an external (third-party) OpenGL-based
 library.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>abstract <a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createGLDrawable(com.jogamp.nativewindow.NativeSurface)">createGLDrawable</a></span>&#8203;(<a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a>&nbsp;target)</code></th>
<td class="colLast">
<div class="block">Returns an <a href="GLDrawable.html#isRealized()"><code>unrealized</code></a> GLDrawable according to it's chosen <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>,<br>
 which determines pixel format, on- and offscreen incl.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>abstract <a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl">GLOffscreenAutoDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createOffscreenAutoDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser,int,int)">createOffscreenAutoDrawable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                           <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;caps,
                           <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser,
                           int&nbsp;width,
                           int&nbsp;height)</code></th>
<td class="colLast">
<div class="block">Creates a <a href="GLDrawable.html#isRealized()"><code>realized</code></a> <a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLOffscreenAutoDrawable</code></a>
 incl it's offscreen <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a> with the given capabilites and dimensions.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>abstract <a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createOffscreenDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser,int,int)">createOffscreenDrawable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                       <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;caps,
                       <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser,
                       int&nbsp;width,
                       int&nbsp;height)</code></th>
<td class="colLast">
<div class="block">Creates an <a href="GLDrawable.html#isRealized()"><code>unrealized</code></a> offscreen <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>
 incl it's offscreen <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a> with the given capabilites and dimensions.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>abstract <a href="../nativewindow/ProxySurface.html" title="interface in com.jogamp.nativewindow">ProxySurface</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createProxySurface(com.jogamp.nativewindow.AbstractGraphicsDevice,int,long,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser,com.jogamp.nativewindow.UpstreamSurfaceHook)">createProxySurface</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                  int&nbsp;screenIdx,
                  long&nbsp;windowHandle,
                  <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;caps,
                  <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser,
                  <a href="../nativewindow/UpstreamSurfaceHook.html" title="interface in com.jogamp.nativewindow">UpstreamSurfaceHook</a>&nbsp;upstream)</code></th>
<td class="colLast">
<div class="block">Creates a proxy <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a> w/ defined surface handle,
 i.e.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getAvailableCapabilities(com.jogamp.nativewindow.AbstractGraphicsDevice)">getAvailableCapabilities</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</code></th>
<td class="colLast">
<div class="block">Returns an array of available GLCapabilities for the device.<br>
 The list is sorted by the native ID, ascending.<br>
 The chosen GLProfile statement in the result may not refer to the maximum available profile
 due to implementation constraints, ie using the shared resource.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>abstract <a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultDevice()">getDefaultDevice</a></span>()</code></th>
<td class="colLast">
<div class="block">Retrieve the default <code>device</code> <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a>,
 <a href="../nativewindow/AbstractGraphicsDevice.html#getUnitID()"><code>unit ID</code></a> and <a href="../nativewindow/AbstractGraphicsDevice.html#getUniqueID()"><code>unique ID name</code></a>.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>static <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDesktopFactory()">getDesktopFactory</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the sole GLDrawableFactory instance for the desktop (X11, WGL, ..) if exist or null</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>static <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getEGLFactory()">getEGLFactory</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the sole <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> instance for EGL if exist or null.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>static <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFactory(boolean)">getFactory</a></span>&#8203;(boolean&nbsp;useNativeGLES)</code></th>
<td class="colLast">
<div class="block">Returns the sole <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> instance, either for mobile if <code>usesNativeGLES</code> is true,
 or for desktop otherwise.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>static <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFactory(com.jogamp.nativewindow.AbstractGraphicsDevice)">getFactory</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</code></th>
<td class="colLast">
<div class="block">Returns the sole <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> matching the given <a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsDevice</code></a> instance,
 which will be suitable either for native mobile or native desktop.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>static <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFactory(com.jogamp.opengl.GLProfile)">getFactory</a></span>&#8203;(<a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glProfile)</code></th>
<td class="colLast">
<div class="block">Returns the sole <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> instance.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getIsDeviceCompatible(com.jogamp.nativewindow.AbstractGraphicsDevice)">getIsDeviceCompatible</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>abstract <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl">GLRendererQuirks</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRendererQuirks(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">getRendererQuirks</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                 <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</code></th>
<td class="colLast">
<div class="block">Returns the shared resource's context <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a>.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasOpenGLDesktopSupport()">hasOpenGLDesktopSupport</a></span>()</code></th>
<td class="colLast">
<div class="block">Method returns <code>true</code> if underlying implementation may support native desktop OpenGL,
 otherwise <code>false</code>.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasOpenGLESSupport()">hasOpenGLESSupport</a></span>()</code></th>
<td class="colLast">
<div class="block">Method returns <code>true</code> if underlying implementation may support native embedded OpenGL ES,
 otherwise <code>false</code>.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasRendererQuirk(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile,int)">hasRendererQuirk</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp,
                int&nbsp;quirk)</code></th>
<td class="colLast">
<div class="block">Returns true if the <code>quirk</code> exist in the shared resource's context <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a>.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#initSingleton()">initSingleton</a></span>()</code></th>
<td class="colLast">
<div class="block">Instantiate singleton factories if available, EGLES1, EGLES2 and the OS native ones.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#resetAllDisplayGamma()">resetAllDisplayGamma</a></span>()</code></th>
<td class="colLast">
<div class="block">Resets the gamma, brightness and contrast values of all modified
 displays to their original values before <a href="#setDisplayGamma(com.jogamp.nativewindow.NativeSurface,float,float,float)"><code>setDisplayGamma</code></a>
 was called the first time.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#resetDisplayGamma(com.jogamp.nativewindow.NativeSurface)">resetDisplayGamma</a></span>&#8203;(<a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a>&nbsp;surface)</code></th>
<td class="colLast">
<div class="block">Resets the gamma, brightness and contrast values of the display associated with the given <code>surface</code>
 to its original values before <a href="#setDisplayGamma(com.jogamp.nativewindow.NativeSurface,float,float,float)"><code>setDisplayGamma</code></a>
 was called the first time.</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setDisplayGamma(com.jogamp.nativewindow.NativeSurface,float,float,float)">setDisplayGamma</a></span>&#8203;(<a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a>&nbsp;surface,
               float&nbsp;gamma,
               float&nbsp;brightness,
               float&nbsp;contrast)</code></th>
<td class="colLast">
<div class="block">Sets the gamma, brightness, and contrast of the display associated with the given <code>surface</code>.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="initSingleton()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initSingleton</h4>
<pre class="methodSignature">public static final&nbsp;void&nbsp;initSingleton()</pre>
<div class="block">Instantiate singleton factories if available, EGLES1, EGLES2 and the OS native ones.</div>
</li>
</ul>
<a id="setDisplayGamma(com.jogamp.nativewindow.NativeSurface,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDisplayGamma</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;setDisplayGamma&#8203;(<a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a>&nbsp;surface,
                                        float&nbsp;gamma,
                                        float&nbsp;brightness,
                                        float&nbsp;contrast)
                                 throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<div class="block">Sets the gamma, brightness, and contrast of the display associated with the given <code>surface</code>.
 <p>
 This functionality is not available on all platforms and
 graphics hardware. Returns true if the settings were successfully
 changed, false if not. This method may return false for some
 values of the incoming arguments even on hardware which does
 support the underlying functionality. </p>
 <p>
 If this method returns true, the display settings will
 automatically be reset to their original values upon JVM exit
 (assuming the JVM does not crash); if the user wishes to change
 the display settings back to normal ahead of time,
 use <a href="#resetDisplayGamma(com.jogamp.nativewindow.NativeSurface)"><code>resetDisplayGamma(NativeSurface)</code></a> or <a href="#resetAllDisplayGamma()"><code>resetAllDisplayGamma()</code></a>.
 </p>
 <p>
 It is recommended to call <a href="#resetDisplayGamma(com.jogamp.nativewindow.NativeSurface)"><code>resetDisplayGamma(NativeSurface)</code></a> or <a href="#resetAllDisplayGamma()"><code>resetAllDisplayGamma()</code></a>
 before calling e.g. <code>System.exit()</code> from the application rather than
 rely on the shutdown hook functionality due to inevitable race
 conditions and unspecified behavior during JVM teardown.
 </p>
 <p>
 This method may be called multiple times during the application's
 execution, but calling <a href="#resetDisplayGamma(com.jogamp.nativewindow.NativeSurface)"><code>resetDisplayGamma(NativeSurface)</code></a>
 will only reset the settings to the values
 before the first call to this method. </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>surface</code> - denominates the display device</dd>
<dd><code>gamma</code> - The gamma value, typically > 1.0 (default values vary, but typically roughly 1.0)</dd>
<dd><code>brightness</code> - The brightness value between -1.0 and 1.0, inclusive (default values vary, but typically 0)</dd>
<dd><code>contrast</code> - The contrast, greater than 0.0 (default values vary, but typically 1)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if gamma settings were successfully changed, false if not</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if any of the parameters were out-of-bounds</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#resetDisplayGamma(com.jogamp.nativewindow.NativeSurface)"><code>resetDisplayGamma(NativeSurface)</code></a>, 
<a href="#resetAllDisplayGamma()"><code>resetAllDisplayGamma()</code></a></dd>
</dl>
</li>
</ul>
<a id="resetDisplayGamma(com.jogamp.nativewindow.NativeSurface)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>resetDisplayGamma</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;resetDisplayGamma&#8203;(<a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a>&nbsp;surface)</pre>
<div class="block">Resets the gamma, brightness and contrast values of the display associated with the given <code>surface</code>
 to its original values before <a href="#setDisplayGamma(com.jogamp.nativewindow.NativeSurface,float,float,float)"><code>setDisplayGamma</code></a>
 was called the first time.
 <p>
 While it is not explicitly required that this method be called before
 exiting manually, calling it is recommended because of the inevitable
 unspecified behavior during JVM teardown.
 </p></div>
</li>
</ul>
<a id="resetAllDisplayGamma()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>resetAllDisplayGamma</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;resetAllDisplayGamma()</pre>
<div class="block">Resets the gamma, brightness and contrast values of all modified
 displays to their original values before <a href="#setDisplayGamma(com.jogamp.nativewindow.NativeSurface,float,float,float)"><code>setDisplayGamma</code></a>
 was called the first time.
 <p>
 While it is not explicitly required that this method be called before
 exiting manually, calling it is recommended because of the inevitable
 unspecified behavior during JVM teardown.
 </p></div>
</li>
</ul>
<a id="getDefaultDevice()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultDevice</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;getDefaultDevice()</pre>
<div class="block">Retrieve the default <code>device</code> <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a>,
 <a href="../nativewindow/AbstractGraphicsDevice.html#getUnitID()"><code>unit ID</code></a> and <a href="../nativewindow/AbstractGraphicsDevice.html#getUniqueID()"><code>unique ID name</code></a>. for this factory<br>
 The implementation must return a non <code>null</code> default device, which must not be opened, ie. it's native handle is <code>null</code>.
 <p>
 This method shall return the default device if available
 even if the GLDrawableFactory is not functional and hence not compatible.
 The latter situation may happen because no native OpenGL implementation is available for the specific implementation.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the default shared device for this factory, eg. :0.0 on X11 desktop.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getIsDeviceCompatible(com.jogamp.nativewindow.AbstractGraphicsDevice)"><code>getIsDeviceCompatible(AbstractGraphicsDevice)</code></a></dd>
</dl>
</li>
</ul>
<a id="getIsDeviceCompatible(com.jogamp.nativewindow.AbstractGraphicsDevice)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getIsDeviceCompatible</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;getIsDeviceCompatible&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared the target device, may be <code>null</code> for the platform's default device.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the device is compatible with this factory, ie. if it can be used for GLDrawable creation. Otherwise false.
         This implies validation whether the implementation is functional.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getDefaultDevice()"><code>getDefaultDevice()</code></a></dd>
</dl>
</li>
</ul>
<a id="hasRendererQuirk(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasRendererQuirk</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;hasRendererQuirk&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                      <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp,
                                      int&nbsp;quirk)</pre>
<div class="block">Returns true if the <code>quirk</code> exist in the shared resource's context <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a>.
 <p>
 Convenience method for:
 <pre>
      final GLRendererQuirks glrq = factory.getRendererQuirks(device);
      return null != glrq ? glrq.exist(quirk) : false;
 </pre>
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared the target device, may be <code>null</code> for the platform's default device.</dd>
<dd><code>glp</code> - <a href="GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a> to identify the device's <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a>, maybe <code>null</code></dd>
<dd><code>quirk</code> - the quirk to be tested, e.g. <a href="GLRendererQuirks.html#NoDoubleBufferedPBuffer"><code>GLRendererQuirks.NoDoubleBufferedPBuffer</code></a>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if the quirk is out of range</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getRendererQuirks(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>getRendererQuirks(AbstractGraphicsDevice, GLProfile)</code></a>, 
<a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a></dd>
</dl>
</li>
</ul>
<a id="getRendererQuirks(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRendererQuirks</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLRendererQuirks.html" title="class in com.jogamp.opengl">GLRendererQuirks</a>&nbsp;getRendererQuirks&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                                   <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</pre>
<div class="block">Returns the shared resource's context <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a>.
 <p>
 Implementation calls <a href="GLContext.html#getRendererQuirks()"><code>GLContext.getRendererQuirks()</code></a> on the shared resource context.
 </p>
 <p>
 In case no shared device exist yet or the implementation doesn't support tracking quirks,
 the result is always <code>null</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared the target device, may be <code>null</code> for the platform's default device.</dd>
<dd><code>glp</code> - <a href="GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a> to identify the device's <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a>, maybe <code>null</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLContext.html#getRendererQuirks()"><code>GLContext.getRendererQuirks()</code></a>, 
<a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a></dd>
</dl>
</li>
</ul>
<a id="hasOpenGLDesktopSupport()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasOpenGLDesktopSupport</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;hasOpenGLDesktopSupport()</pre>
<div class="block">Method returns <code>true</code> if underlying implementation may support native desktop OpenGL,
 otherwise <code>false</code>.</div>
</li>
</ul>
<a id="hasOpenGLESSupport()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasOpenGLESSupport</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;hasOpenGLESSupport()</pre>
<div class="block">Method returns <code>true</code> if underlying implementation may support native embedded OpenGL ES,
 otherwise <code>false</code>.</div>
</li>
</ul>
<a id="getDesktopFactory()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDesktopFactory</h4>
<pre class="methodSignature">public static&nbsp;<a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a>&nbsp;getDesktopFactory()</pre>
<div class="block">Returns the sole GLDrawableFactory instance for the desktop (X11, WGL, ..) if exist or null
 <p>
 To fetch the appropriate <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> for native desktop
 or mobile, use <a href="#getFactory(boolean)"><code>getFactory(boolean)</code></a>.
 </p>
 <p>
 It is possible that the desktop <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> will be used for
 native mobile GL profiles, e.g. <a href="../../../../../gluegen/javadoc/com/jogamp/common/os/Platform.OSType.html?is-external=true#IOS" title="class or interface in com.jogamp.common.os" class="externalLink"><code>Platform.OSType.IOS</code></a>.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the matching <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> or <code>null</code> if none is available</dd>
</dl>
</li>
</ul>
<a id="getEGLFactory()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEGLFactory</h4>
<pre class="methodSignature">public static&nbsp;<a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a>&nbsp;getEGLFactory()</pre>
<div class="block">Returns the sole <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> instance for EGL if exist or null.
 <p>
 To fetch the appropriate <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> for native desktop
 or mobile, use <a href="#getFactory(boolean)"><code>getFactory(boolean)</code></a>.
 </p>
 <p>
 It is possible that a non EGL <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> will be used for
 native mobile GL profiles, e.g. <a href="../../../../../gluegen/javadoc/com/jogamp/common/os/Platform.OSType.html?is-external=true#IOS" title="class or interface in com.jogamp.common.os" class="externalLink"><code>Platform.OSType.IOS</code></a>.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the matching <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> or <code>null</code> if none is available</dd>
</dl>
</li>
</ul>
<a id="getFactory(com.jogamp.opengl.GLProfile)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFactory</h4>
<pre class="methodSignature">public static&nbsp;<a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a>&nbsp;getFactory&#8203;(<a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glProfile)
                                    throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Returns the sole <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> instance.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>glProfile</code> - GLProfile to determine the factory type, ie for native mobile GL or native desktop GL.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the matching <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if no matching <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> exists</dd>
</dl>
</li>
</ul>
<a id="getFactory(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFactory</h4>
<pre class="methodSignature">public static&nbsp;<a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a>&nbsp;getFactory&#8203;(boolean&nbsp;useNativeGLES)</pre>
<div class="block">Returns the sole <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> instance, either for mobile if <code>usesNativeGLES</code> is true,
 or for desktop otherwise.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>useNativeGLES</code> - request native mobile GLES support if true</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the matching <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> or <code>null</code> if none is available</dd>
</dl>
</li>
</ul>
<a id="getFactory(com.jogamp.nativewindow.AbstractGraphicsDevice)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFactory</h4>
<pre class="methodSignature">public static&nbsp;<a href="GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a>&nbsp;getFactory&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</pre>
<div class="block">Returns the sole <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> matching the given <a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsDevice</code></a> instance,
 which will be suitable either for native mobile or native desktop.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - the queries <a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsDevice</code></a> seeking for its matching factory</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the matching <a href="GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> or <code>null</code> if none is available</dd>
</dl>
</li>
</ul>
<a id="getAvailableCapabilities(com.jogamp.nativewindow.AbstractGraphicsDevice)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAvailableCapabilities</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&gt;&nbsp;getAvailableCapabilities&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</pre>
<div class="block">Returns an array of available GLCapabilities for the device.<br>
 The list is sorted by the native ID, ascending.<br>
 The chosen GLProfile statement in the result may not refer to the maximum available profile
 due to implementation constraints, ie using the shared resource.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared the target device, may be <code>null</code> for the platform's default device.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A list of <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>'s, maybe empty if none is available.</dd>
</dl>
</li>
</ul>
<a id="createGLDrawable(com.jogamp.nativewindow.NativeSurface)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createGLDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;createGLDrawable&#8203;(<a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a>&nbsp;target)
                                     throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a>,
                                            <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Returns an <a href="GLDrawable.html#isRealized()"><code>unrealized</code></a> GLDrawable according to it's chosen <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>,<br>
 which determines pixel format, on- and offscreen incl. PBuffer type.
 <p>
 The chosen <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> are referenced within the target
 <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a>'s <a href="../nativewindow/AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsConfiguration</code></a>.<p>
 </p>
 <p>
 An onscreen GLDrawable is created if <a href="../nativewindow/CapabilitiesImmutable.html#isOnscreen()"><code>caps.isOnscreen()</code></a> is true.
 </p>
 <p>
 A FBO drawable is created if both <a href="GLCapabilitiesImmutable.html#isFBO()"><code>caps.isFBO()</code></a>
 and <a href="GLContext.html#isFBOAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>canCreateFBO(device, caps.getGLProfile())</code></a> is true.
 </p>
 <p>
 A Pbuffer drawable is created if both <a href="GLCapabilitiesImmutable.html#isPBuffer()"><code>caps.isPBuffer()</code></a>
 and <a href="#canCreateGLPbuffer(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>canCreateGLPbuffer(device)</code></a> is true.
 </p>
 <p>
 If not onscreen and neither FBO nor Pbuffer is available,
 a simple pixmap/bitmap drawable/surface is created, which is unlikely to be hardware accelerated.
 </p></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if the passed target is null</dd>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any window system-specific errors caused
         the creation of the GLDrawable to fail.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#canCreateGLPbuffer(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>canCreateGLPbuffer(AbstractGraphicsDevice, GLProfile)</code></a>, 
<a href="GLContext.html#isFBOAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>GLContext.isFBOAvailable(AbstractGraphicsDevice, GLProfile)</code></a>, 
<a href="../nativewindow/Capabilities.html#isOnscreen()"><code>Capabilities.isOnscreen()</code></a>, 
<a href="GLCapabilities.html#isFBO()"><code>GLCapabilities.isFBO()</code></a>, 
<a href="GLCapabilities.html#isPBuffer()"><code>GLCapabilities.isPBuffer()</code></a>, 
<code>GraphicsConfigurationFactory#chooseGraphicsConfiguration(CapabilitiesImmutable, CapabilitiesImmutable, CapabilitiesChooser, AbstractGraphicsScreen, int)</code></dd>
</dl>
</li>
</ul>
<a id="createOffscreenAutoDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createOffscreenAutoDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl">GLOffscreenAutoDrawable</a>&nbsp;createOffscreenAutoDrawable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                                                    <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;caps,
                                                                    <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser,
                                                                    int&nbsp;width,
                                                                    int&nbsp;height)
                                                             throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Creates a <a href="GLDrawable.html#isRealized()"><code>realized</code></a> <a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLOffscreenAutoDrawable</code></a>
 incl it's offscreen <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a> with the given capabilites and dimensions.
 <p>
 The <a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLOffscreenAutoDrawable</code></a>'s <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> is <a href="GLDrawable.html#isRealized()"><code>realized</code></a>
 <i>without</i> an assigned <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>, hence not initialized completely.<br>

 The <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> can be assigned later manually via <a href="GLAutoDrawable.html#setContext(com.jogamp.opengl.GLContext,boolean)"><code>setContext(ctx)</code></a>
 <i>or</i> it will be created <i>lazily</i> at the 1st <a href="GLAutoDrawable.html#display()"><code>display()</code></a> method call.<br>

 <i>Lazy</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> creation will take a shared <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> into account
 which has been set <a href="GLSharedContextSetter.html#setSharedContext(com.jogamp.opengl.GLContext)"><code>directly</code></a>
 or <a href="GLSharedContextSetter.html#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>via another GLAutoDrawable</code></a>.
 </p>
 <p>
 In case the passed <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> contains default values, i.e.
 <a href="../nativewindow/CapabilitiesImmutable.html#isOnscreen()"><code>caps.isOnscreen()</code></a> <code> == true</code>,
 it is auto-configured. Auto configuration will set <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>caps</code></a> to offscreen
 and FBO <i>or</i> Pbuffer, whichever is available in that order.
 </p>
 <p>
 A FBO based auto drawable, <a href="GLOffscreenAutoDrawable.FBO.html" title="interface in com.jogamp.opengl"><code>GLOffscreenAutoDrawable.FBO</code></a>, is created if both <a href="GLCapabilitiesImmutable.html#isFBO()"><code>caps.isFBO()</code></a>
 and <a href="GLContext.html#isFBOAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>canCreateFBO(device, caps.getGLProfile())</code></a> is true.
 </p>
 <p>
 A Pbuffer based auto drawable is created if both <a href="GLCapabilitiesImmutable.html#isPBuffer()"><code>caps.isPBuffer()</code></a>
 and <a href="#canCreateGLPbuffer(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>canCreateGLPbuffer(device)</code></a> is true.
 </p>
 <p>
 If neither FBO nor Pbuffer is available,
 a simple pixmap/bitmap auto drawable is created, which is unlikely to be hardware accelerated.
 </p>
 <p>
 The resulting <a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLOffscreenAutoDrawable</code></a> has it's own independent device instance using <code>device</code> details.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared device to be used, may be <code>null</code> for the platform's default device.</dd>
<dd><code>caps</code> - the requested GLCapabilties</dd>
<dd><code>chooser</code> - the custom chooser, may be null for default</dd>
<dd><code>width</code> - the requested offscreen width</dd>
<dd><code>height</code> - the requested offscreen height</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the created and realized offscreen <a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLOffscreenAutoDrawable</code></a> instance</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any window system-specific errors caused
         the creation of the Offscreen to fail.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#createOffscreenDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser,int,int)"><code>createOffscreenDrawable(AbstractGraphicsDevice, GLCapabilitiesImmutable, GLCapabilitiesChooser, int, int)</code></a></dd>
</dl>
</li>
</ul>
<a id="createDummyAutoDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createDummyAutoDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;createDummyAutoDrawable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;deviceReq,
                                                       boolean&nbsp;createNewDevice,
                                                       <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;capsRequested,
                                                       <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser)</pre>
<div class="block">Creates a <a href="GLDrawable.html#isRealized()"><code>realized</code></a> <i>dummy</i> <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>
 incl it's <i>dummy, invisible</i> <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a>
 as created with <a href="#createDummyDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)"><code>createDummyDrawable(AbstractGraphicsDevice, boolean, GLCapabilitiesImmutable, GLCapabilitiesChooser)</code></a>.
 <p>
 The <i>dummy</i> <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> is <a href="GLDrawable.html#isRealized()"><code>realized</code></a>
 <i>without</i> an assigned <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>, hence not initialized completely.<br>
 The <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> can be assigned later manually via <a href="GLAutoDrawable.html#setContext(com.jogamp.opengl.GLContext,boolean)"><code>setContext(ctx)</code></a>
 <i>or</i> it will be created <i>lazily</i> at the 1st <a href="GLAutoDrawable.html#display()"><code>display()</code></a> method call.<br>
 <i>Lazy</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> creation will take a shared <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> into account
 which has been set <a href="GLSharedContextSetter.html#setSharedContext(com.jogamp.opengl.GLContext)"><code>directly</code></a>
 or <a href="GLSharedContextSetter.html#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>via another GLAutoDrawable</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>deviceReq</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared device to be used, may be <code>null</code> for the platform's default device.</dd>
<dd><code>createNewDevice</code> - if <code>true</code> a new independent device instance is created from the <code>deviceReq</code>, otherwise <code>deviceReq</code> is used as-is and must be valid!</dd>
<dd><code>capsRequested</code> - the desired <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>, incl. it's <a href="GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a>.
                      For shared context, same <a href="../nativewindow/VisualIDHolder.html#getVisualID(com.jogamp.nativewindow.VisualIDHolder.VIDType)"><code>VisualIDHolder.getVisualID(com.jogamp.nativewindow.VisualIDHolder.VIDType)</code></a>
                      across shared drawables will yield best compatibility.</dd>
<dd><code>chooser</code> - the custom chooser, may be null for default</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the created and realized <i>dummy</i> <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> instance</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#createDummyDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)"><code>createDummyDrawable(AbstractGraphicsDevice, boolean, GLCapabilitiesImmutable, GLCapabilitiesChooser)</code></a></dd>
</dl>
</li>
</ul>
<a id="createOffscreenDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createOffscreenDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;createOffscreenDrawable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                                   <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;caps,
                                                   <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser,
                                                   int&nbsp;width,
                                                   int&nbsp;height)
                                            throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Creates an <a href="GLDrawable.html#isRealized()"><code>unrealized</code></a> offscreen <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>
 incl it's offscreen <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a> with the given capabilites and dimensions.
 <p>
 In case the passed <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> contains default values, i.e.
 <a href="../nativewindow/CapabilitiesImmutable.html#isOnscreen()"><code>caps.isOnscreen()</code></a> <code> == true</code>,
 it is auto-configured. The latter will set offscreen and also FBO <i>or</i> Pbuffer, whichever is available in that order.
 </p>
 <p>
 A resizeable FBO drawable, <a href="GLFBODrawable.Resizeable.html" title="interface in com.jogamp.opengl"><code>GLFBODrawable.Resizeable</code></a>, is created if both <a href="GLCapabilitiesImmutable.html#isFBO()"><code>caps.isFBO()</code></a>
 and <a href="GLContext.html#isFBOAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>canCreateFBO(device, caps.getGLProfile())</code></a> is true.
 </p>
 <p>
 A Pbuffer drawable is created if both <a href="GLCapabilitiesImmutable.html#isPBuffer()"><code>caps.isPBuffer()</code></a>
 and <a href="#canCreateGLPbuffer(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>canCreateGLPbuffer(device)</code></a> is true.
 </p>
 <p>
 If neither FBO nor Pbuffer is available,
 a simple pixmap/bitmap drawable is created, which is unlikely to be hardware accelerated.
 </p>
 <p>
 The resulting <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> has it's own independent device instance using <code>device</code> details.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared device to be used, may be <code>null</code> for the platform's default device.</dd>
<dd><code>caps</code> - the requested GLCapabilties</dd>
<dd><code>chooser</code> - the custom chooser, may be null for default</dd>
<dd><code>width</code> - the requested offscreen width</dd>
<dd><code>height</code> - the requested offscreen height</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the created unrealized offscreen <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any window system-specific errors caused
         the creation of the Offscreen to fail.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><code>#createOffscreenAutoDrawable(AbstractGraphicsDevice, GLCapabilitiesImmutable, GLCapabilitiesChooser, int, int, GLContext)</code></dd>
</dl>
</li>
</ul>
<a id="createDummyDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createDummyDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;createDummyDrawable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;deviceReq,
                                               boolean&nbsp;createNewDevice,
                                               <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;capsRequested,
                                               <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser)</pre>
<div class="block">Creates an <a href="GLDrawable.html#isRealized()"><code>unrealized</code></a> dummy <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>.
 A dummy drawable is not visible on screen and will not be used to render directly to, it maybe on- or offscreen.
 <p>
 It is used to allow the creation of a <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> to query information.
 It also allows creation of framebuffer objects which are used for rendering or creating a shared GLContext w/o actually rendering to this dummy drawable's framebuffer.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>deviceReq</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared device to be used, may be <code>null</code> for the platform's default device.</dd>
<dd><code>createNewDevice</code> - if <code>true</code> a new independent device instance is created from the <code>deviceReq</code>, otherwise <code>deviceReq</code> is used as-is and must be valid!</dd>
<dd><code>capsRequested</code> - the desired <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>, incl. it's <a href="GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a>.
                      For shared context, same <a href="../nativewindow/VisualIDHolder.html#getVisualID(com.jogamp.nativewindow.VisualIDHolder.VIDType)"><code>visual ID</code></a>
                      or <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>caps</code></a>
                      across shared drawables will yield best compatibility.</dd>
<dd><code>chooser</code> - the custom chooser, may be null for default</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the created unrealized dummy <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a></dd>
</dl>
</li>
</ul>
<a id="createProxySurface(com.jogamp.nativewindow.AbstractGraphicsDevice,int,long,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser,com.jogamp.nativewindow.UpstreamSurfaceHook)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createProxySurface</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="../nativewindow/ProxySurface.html" title="interface in com.jogamp.nativewindow">ProxySurface</a>&nbsp;createProxySurface&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                                int&nbsp;screenIdx,
                                                long&nbsp;windowHandle,
                                                <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;caps,
                                                <a href="GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser,
                                                <a href="../nativewindow/UpstreamSurfaceHook.html" title="interface in com.jogamp.nativewindow">UpstreamSurfaceHook</a>&nbsp;upstream)</pre>
<div class="block">Creates a proxy <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a> w/ defined surface handle,
 i.e. a <code>WrappedSurface</code> or <code>GDISurface</code> instance.
 <p>
 It's <a href="../nativewindow/AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsConfiguration</code></a> is properly set according to the given
 <code>windowHandle</code>'s native visualID if set or the given <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>.
 </p>
 <p>
 Lifecycle (creation and destruction) of the given surface handle shall be handled by the caller
 via <a href="../nativewindow/ProxySurface.html#createNotify()"><code>ProxySurface.createNotify()</code></a> and <a href="../nativewindow/ProxySurface.html#destroyNotify()"><code>ProxySurface.destroyNotify()</code></a>.
 </p>
 <p>
 Such surface can be used to instantiate a GLDrawable. With the help of <a href="GLAutoDrawableDelegate.html" title="class in com.jogamp.opengl"><code>GLAutoDrawableDelegate</code></a>
 you will be able to implement a new native windowing system  binding almost on-the-fly,
 see <a href="swt/GLCanvas.html" title="class in com.jogamp.opengl.swt"><code>GLCanvas</code></a>.
 </p>
 <p>
 The resulting <a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLOffscreenAutoDrawable</code></a> has it's own independent device instance using <code>device</code> details
 which may be blocking depending on platform and windowing-toolkit requirements.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared the target device, may be <code>null</code> for the platform's default device.
        Caller has to ensure it is compatible w/ the given <code>windowHandle</code></dd>
<dd><code>screenIdx</code> - matching screen index of given <code>windowHandle</code></dd>
<dd><code>windowHandle</code> - the native window handle</dd>
<dd><code>caps</code> - the requested GLCapabilties</dd>
<dd><code>chooser</code> - the custom chooser, may be null for default</dd>
<dd><code>upstream</code> - optional <a href="../nativewindow/UpstreamSurfaceHook.html" title="interface in com.jogamp.nativewindow"><code>UpstreamSurfaceHook</code></a> allowing control of the <a href="../nativewindow/ProxySurface.html" title="interface in com.jogamp.nativewindow"><code>ProxySurface</code></a>'s lifecycle and data it presents.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the created <a href="../nativewindow/ProxySurface.html" title="interface in com.jogamp.nativewindow"><code>ProxySurface</code></a> instance w/ defined surface handle.</dd>
</dl>
</li>
</ul>
<a id="canCreateFBO(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>canCreateFBO</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;canCreateFBO&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                     <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</pre>
<div class="block">Returns true if it is possible to create an <i>framebuffer object</i> (FBO).
 <p>
 FBO feature is implemented in OpenGL, hence it is <a href="GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a> dependent.
 </p>
 <p>
 FBO support is queried as described in <a href="GLContext.html#hasBasicFBOSupport()"><code>GLContext.hasBasicFBOSupport()</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared the target device, may be <code>null</code> for the platform's default device.</dd>
<dd><code>glp</code> - <a href="GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a> to check for FBO capabilities</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLContext.html#hasBasicFBOSupport()"><code>GLContext.hasBasicFBOSupport()</code></a></dd>
</dl>
</li>
</ul>
<a id="canCreateGLPbuffer(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>canCreateGLPbuffer</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;canCreateGLPbuffer&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                           <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</pre>
<div class="block">Returns true if it is possible to create an <i>pbuffer surface</i>.
 <p>
 Some older graphics cards do not have this capability,
 as well as some new GL implementation, i.e. OpenGL 3 core on OSX.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared the target device, may be <code>null</code> for the platform's default device.</dd>
<dd><code>glp</code> - <a href="GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a> to check for FBO capabilities</dd>
</dl>
</li>
</ul>
<a id="createExternalGLContext()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createExternalGLContext</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;createExternalGLContext()
                                           throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block"><P> Creates a GLContext object representing an existing OpenGL
 context in an external (third-party) OpenGL-based library. This
 GLContext object may be used to draw into this preexisting
 context using its <a href="GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> and <a href="glu/GLU.html" title="class in com.jogamp.opengl.glu"><code>GLU</code></a> objects. New contexts created through
 <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>s may share textures and display lists with
 this external context. </P>

 <P> The underlying OpenGL context must be current on the current
 thread at the time this method is called. The user is responsible
 for the maintenance of the underlying OpenGL context; calls to
 <code>makeCurrent</code> and <code>release</code> on the returned
 GLContext object have no effect. If the underlying OpenGL context
 is destroyed, the <code>destroy</code> method should be called on
 the <code>GLContext</code>. A new <code>GLContext</code> object
 should be created for each newly-created underlying OpenGL
 context.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any window system-specific errors caused
         the creation of the external GLContext to fail.</dd>
</dl>
</li>
</ul>
<a id="canCreateExternalGLDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>canCreateExternalGLDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;canCreateExternalGLDrawable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</pre>
<div class="block">Returns true if it is possible to create an external GLDrawable
 object via <a href="#createExternalGLDrawable()"><code>createExternalGLDrawable()</code></a>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - which <a href="../nativewindow/AbstractGraphicsDevice.html#getConnection()"><code>connection</code></a> denotes the shared the target device, may be <code>null</code> for the platform's default device.</dd>
</dl>
</li>
</ul>
<a id="createExternalGLDrawable()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>createExternalGLDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;createExternalGLDrawable()
                                             throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block"><P> Creates a <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> object representing an existing
 OpenGL drawable in an external (third-party) OpenGL-based
 library. This GLDrawable object may be used to create new,
 fully-functional <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>s on the OpenGL drawable. This
 is useful when interoperating with a third-party OpenGL-based
 library and it is essential to not perturb the state of the
 library's existing context, even to the point of not sharing
 textures or display lists with that context. </P>

 <P> An underlying OpenGL context must be current on the desired
 drawable and the current thread at the time this method is
 called. The user is responsible for the maintenance of the
 underlying drawable. If one or more contexts are created on the
 drawable using <a href="GLDrawable.html#createContext(com.jogamp.opengl.GLContext)"><code>GLDrawable.createContext(com.jogamp.opengl.GLContext)</code></a>, and the drawable
 is deleted by the third-party library, the user is responsible
 for calling <a href="GLContext.html#destroy()"><code>GLContext.destroy()</code></a> on these contexts. </P>

 <P> Calls to <code>setSize</code>, <code>getWidth</code> and
 <code>getHeight</code> are illegal on the returned GLDrawable. If
 these operations are required by the user, they must be performed
 by the third-party library. </P>

 <P> It is legal to create both an external GLContext and
 GLDrawable representing the same third-party OpenGL entities.
 This can be used, for example, to query current state information
 using the external GLContext and then create and set up new
 GLContexts using the external GLDrawable. </P>

 <P> This functionality may not be available on all platforms and
 <a href="#canCreateExternalGLDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice)"><code>canCreateExternalGLDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice)</code></a> should be called first to
 see if it is present. For example, on X11 platforms, this API
 requires the presence of GLX 1.3 or later.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any window system-specific errors caused
         the creation of the external GLDrawable to fail.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLDrawableFactory.html" target="_top">Frames</a></li>
<li><a href="GLDrawableFactory.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
