<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>GLFBODrawable (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GLFBODrawable (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6,"i6":6,"i7":6,"i8":6,"i9":6,"i10":6,"i11":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLFBODrawable.html" target="_top">Frames</a></li>
<li><a href="GLFBODrawable.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl</a></div>
<h2 title="Interface GLFBODrawable" class="title">Interface GLFBODrawable</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Superinterfaces:</dt>
<dd><code><a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code>, <code><a href="../nativewindow/NativeSurfaceHolder.html" title="interface in com.jogamp.nativewindow">NativeSurfaceHolder</a></code></dd>
</dl>
<dl>
<dt>All Known Subinterfaces:</dt>
<dd><code><a href="GLFBODrawable.Resizeable.html" title="interface in com.jogamp.opengl">GLFBODrawable.Resizeable</a></code>, <code><a href="GLOffscreenAutoDrawable.FBO.html" title="interface in com.jogamp.opengl">GLOffscreenAutoDrawable.FBO</a></code></dd>
</dl>
<hr>
<pre>public interface <span class="typeNameLabel">GLFBODrawable</span>
extends <a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></pre>
<div class="block">Platform-independent <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> specialization,
 exposing <a href="FBObject.html" title="class in com.jogamp.opengl"><code>FBObject</code></a> functionality.

 <p>
 A <a href="GLFBODrawable.html" title="interface in com.jogamp.opengl"><code>GLFBODrawable</code></a> is uninitialized until a <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> is bound
 and made current the first time, hence only then it's capabilities <i>fully</i> reflect expectations,
 i.e. color, depth, stencil and MSAA bits will be <i>valid</i> only after the first <a href="GLContext.html#makeCurrent()"><code>makeCurrent()</code></a> call.
 On-/offscreen bits are <i>valid</i> after <a href="GLDrawable.html#setRealized(boolean)"><code>setRealized(true)</code></a>.
 </p>

 <p>
 MSAA is used if <a href="GLCapabilitiesImmutable.html#getNumSamples()"><code>requested</code></a>.
 </p>
 <p>
 Double buffering is used if <a href="GLCapabilitiesImmutable.html#getDoubleBuffered()"><code>requested</code></a>.
 </p>
 <p>
 In MSAA mode, it always uses the implicit 2nd <a href="FBObject.html" title="class in com.jogamp.opengl"><code>framebuffer</code></a> <a href="FBObject.html#getSamplingSinkFBO()"><code>sink</code></a>.
 Hence double buffering is always the case w/ MSAA.
 </p>
 <p>
 In non MSAA a second explicit <a href="FBObject.html" title="class in com.jogamp.opengl"><code>framebuffer</code></a> is being used.
 This method allows compliance w/ the spec, i.e. read and draw framebuffer selection
 and double buffer usage for e.g. <a href="GL.html#glReadPixels(int,int,int,int,int,int,java.nio.Buffer)"><code>glReadPixels(..)</code></a>.
 This method also allows usage of both textures seperately.
 </p>
 <p>
 It would be possible to implement double buffering simply using
 <a href="FBObject.Colorbuffer.html" title="interface in com.jogamp.opengl"><code>FBObject.Colorbuffer</code></a>s with one <a href="FBObject.html" title="class in com.jogamp.opengl"><code>framebuffer</code></a>.
 This would require mode selection and hence complicate the API. Besides, it would
 not support differentiation of read and write framebuffer and hence not be spec compliant.
 </p>
 <p>
 Actual swapping of the <a href="FBObject.Colorbuffer.html" title="interface in com.jogamp.opengl"><code>FBObject.Colorbuffer</code></a>s and/or <a href="FBObject.html" title="class in com.jogamp.opengl"><code>framebuffer</code></a>
 is performed either in the <code>context current hook</code>
 or when <code>swapping buffers</code>, whatever comes first.
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Interface</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static interface&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="GLFBODrawable.Resizeable.html" title="interface in com.jogamp.opengl">GLFBODrawable.Resizeable</a></span></code></th>
<td class="colLast">
<div class="block">Resizeable <a href="GLFBODrawable.html" title="interface in com.jogamp.opengl"><code>GLFBODrawable</code></a> specialization</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#FBOMODE_USE_TEXTURE">FBOMODE_USE_TEXTURE</a></span></code></th>
<td class="colLast">
<div class="block">FBO Mode Bit: Use a <a href="FBObject.TextureAttachment.html" title="class in com.jogamp.opengl"><code>FBObject.TextureAttachment</code></a> for the <a href="#getColorbuffer(int)"><code>render colorbuffer</code></a>, see <a href="#setFBOMode(int)"><code>setFBOMode(int)</code></a>.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code><a href="FBObject.Colorbuffer.html" title="interface in com.jogamp.opengl">FBObject.Colorbuffer</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getColorbuffer(int)">getColorbuffer</a></span>&#8203;(int&nbsp;bufferName)</code></th>
<td class="colLast">
<div class="block">Returns the named <a href="FBObject.Colorbuffer.html" title="interface in com.jogamp.opengl"><code>FBObject.Colorbuffer</code></a> instance.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="FBObject.html" title="class in com.jogamp.opengl">FBObject</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFBObject(int)">getFBObject</a></span>&#8203;(int&nbsp;bufferName)</code></th>
<td class="colLast">
<div class="block">If MSAA is being used and <a href="GL.html#GL_FRONT"><code>GL.GL_FRONT</code></a> is requested,
 the internal <a href="FBObject.html" title="class in com.jogamp.opengl"><code>FBObject</code></a> <a href="FBObject.html#getSamplingSinkFBO()"><code>sample sink</code></a> is being returned.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFBOMode()">getFBOMode</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNumBuffers()">getNumBuffers</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNumSamples()">getNumSamples</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureUnit()">getTextureUnit</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isInitialized()">isInitialized</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#resetSize(com.jogamp.opengl.GL)">resetSize</a></span>&#8203;(<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Notify this instance about upstream size change
 to reconfigure the <a href="FBObject.html" title="class in com.jogamp.opengl"><code>FBObject</code></a>.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setFBOMode(int)">setFBOMode</a></span>&#8203;(int&nbsp;modeBits)</code></th>
<td class="colLast">
<div class="block">Set the FBO mode bits used for FBO creation.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setNumBuffers(int)">setNumBuffers</a></span>&#8203;(int&nbsp;bufferCount)</code></th>
<td class="colLast">
<div class="block">Sets the number of buffers (FBO) being used if using <a href="GLCapabilities.html#getDoubleBuffered()"><code>double buffering</code></a>.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setNumSamples(com.jogamp.opengl.GL,int)">setNumSamples</a></span>&#8203;(<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
             int&nbsp;newSamples)</code></th>
<td class="colLast">
<div class="block">Set the number of sample buffers if using MSAA</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTextureUnit(int)">setTextureUnit</a></span>&#8203;(int&nbsp;unit)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.opengl.GLDrawable">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.opengl.<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></h3>
<code><a href="GLDrawable.html#createContext(com.jogamp.opengl.GLContext)">createContext</a>, <a href="GLDrawable.html#getChosenGLCapabilities()">getChosenGLCapabilities</a>, <a href="GLDrawable.html#getFactory()">getFactory</a>, <a href="GLDrawable.html#getGLProfile()">getGLProfile</a>, <a href="GLDrawable.html#getHandle()">getHandle</a>, <a href="GLDrawable.html#getNativeSurface()">getNativeSurface</a>, <a href="GLDrawable.html#getRequestedGLCapabilities()">getRequestedGLCapabilities</a>, <a href="GLDrawable.html#getSurfaceHeight()">getSurfaceHeight</a>, <a href="GLDrawable.html#getSurfaceWidth()">getSurfaceWidth</a>, <a href="GLDrawable.html#isGLOriented()">isGLOriented</a>, <a href="GLDrawable.html#isRealized()">isRealized</a>, <a href="GLDrawable.html#setRealized(boolean)">setRealized</a>, <a href="GLDrawable.html#swapBuffers()">swapBuffers</a>, <a href="GLDrawable.html#toString()">toString</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="FBOMODE_USE_TEXTURE">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>FBOMODE_USE_TEXTURE</h4>
<pre>static final&nbsp;int FBOMODE_USE_TEXTURE</pre>
<div class="block">FBO Mode Bit: Use a <a href="FBObject.TextureAttachment.html" title="class in com.jogamp.opengl"><code>FBObject.TextureAttachment</code></a> for the <a href="#getColorbuffer(int)"><code>render colorbuffer</code></a>, see <a href="#setFBOMode(int)"><code>setFBOMode(int)</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.opengl.GLFBODrawable.FBOMODE_USE_TEXTURE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="isInitialized()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isInitialized</h4>
<pre class="methodSignature">boolean&nbsp;isInitialized()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>true</code> if initialized, i.e. a <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> is bound and made current once, otherwise <code>false</code>.</dd>
</dl>
</li>
</ul>
<a id="setFBOMode(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setFBOMode</h4>
<pre class="methodSignature">void&nbsp;setFBOMode&#8203;(int&nbsp;modeBits)
         throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Set the FBO mode bits used for FBO creation.
 <p>
 Default value is: <a href="#FBOMODE_USE_TEXTURE"><code>FBOMODE_USE_TEXTURE</code></a>.
 </p>
 <p>
 If <a href="GLRendererQuirks.html#BuggyColorRenderbuffer"><code>GLRendererQuirks.BuggyColorRenderbuffer</code></a> is set,
 <a href="#FBOMODE_USE_TEXTURE"><code>FBOMODE_USE_TEXTURE</code></a> is always added at initialization.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>modeBits</code> - custom FBO mode bits like <a href="#FBOMODE_USE_TEXTURE"><code>FBOMODE_USE_TEXTURE</code></a>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if already initialized, see <a href="#isInitialized()"><code>isInitialized()</code></a>.</dd>
</dl>
</li>
</ul>
<a id="getFBOMode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFBOMode</h4>
<pre class="methodSignature">int&nbsp;getFBOMode()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the used FBO mode bits, mutable via <a href="#setFBOMode(int)"><code>setFBOMode(int)</code></a></dd>
</dl>
</li>
</ul>
<a id="resetSize(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>resetSize</h4>
<pre class="methodSignature">void&nbsp;resetSize&#8203;(<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)
        throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Notify this instance about upstream size change
 to reconfigure the <a href="FBObject.html" title="class in com.jogamp.opengl"><code>FBObject</code></a>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - GL context object bound to this drawable, will be made current during operation.
           A prev. current context will be make current after operation.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if resize operation failed</dd>
</dl>
</li>
</ul>
<a id="getTextureUnit()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureUnit</h4>
<pre class="methodSignature">int&nbsp;getTextureUnit()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the used texture unit</dd>
</dl>
</li>
</ul>
<a id="setTextureUnit(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTextureUnit</h4>
<pre class="methodSignature">void&nbsp;setTextureUnit&#8203;(int&nbsp;unit)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>unit</code> - the texture unit to be used</dd>
</dl>
</li>
</ul>
<a id="setNumSamples(com.jogamp.opengl.GL,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setNumSamples</h4>
<pre class="methodSignature">void&nbsp;setNumSamples&#8203;(<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                   int&nbsp;newSamples)
            throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Set the number of sample buffers if using MSAA</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - GL context object bound to this drawable, will be made current during operation.
           A prev. current context will be make current after operation.</dd>
<dd><code>newSamples</code> - new sample size</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if resetting the FBO failed</dd>
</dl>
</li>
</ul>
<a id="getNumSamples()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumSamples</h4>
<pre class="methodSignature">int&nbsp;getNumSamples()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the number of sample buffers if using MSAA, otherwise 0</dd>
</dl>
</li>
</ul>
<a id="setNumBuffers(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setNumBuffers</h4>
<pre class="methodSignature">int&nbsp;setNumBuffers&#8203;(int&nbsp;bufferCount)
           throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                  <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Sets the number of buffers (FBO) being used if using <a href="GLCapabilities.html#getDoubleBuffered()"><code>double buffering</code></a>.
 <p>
 If <a href="GLCapabilities.html#getDoubleBuffered()"><code>double buffering</code></a> is not chosen, this is a NOP.
 </p>
 <p>
 Must be called before <a href="#isInitialized()"><code>initialization</code></a>, otherwise an exception is thrown.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the new number of buffers (FBO) used, maybe different than the requested <code>bufferCount</code> (see above)</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if already initialized, see <a href="#isInitialized()"><code>isInitialized()</code></a>.</dd>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code></dd>
</dl>
</li>
</ul>
<a id="getNumBuffers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumBuffers</h4>
<pre class="methodSignature">int&nbsp;getNumBuffers()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the number of buffers (FBO) being used. 1 if not using <a href="GLCapabilities.html#getDoubleBuffered()"><code>double buffering</code></a>,
 otherwise &ge; 2, depending on <a href="#setNumBuffers(int)"><code>setNumBuffers(int)</code></a>.</dd>
</dl>
</li>
</ul>
<a id="getFBObject(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFBObject</h4>
<pre class="methodSignature"><a href="FBObject.html" title="class in com.jogamp.opengl">FBObject</a>&nbsp;getFBObject&#8203;(int&nbsp;bufferName)
              throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<div class="block">If MSAA is being used and <a href="GL.html#GL_FRONT"><code>GL.GL_FRONT</code></a> is requested,
 the internal <a href="FBObject.html" title="class in com.jogamp.opengl"><code>FBObject</code></a> <a href="FBObject.html#getSamplingSinkFBO()"><code>sample sink</code></a> is being returned.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bufferName</code> - <a href="GL.html#GL_FRONT"><code>GL.GL_FRONT</code></a> and <a href="GL.html#GL_BACK"><code>GL.GL_BACK</code></a> are valid buffer names</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the named <a href="FBObject.html" title="class in com.jogamp.opengl"><code>FBObject</code></a></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if an illegal buffer name is being used</dd>
</dl>
</li>
</ul>
<a id="getColorbuffer(int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getColorbuffer</h4>
<pre class="methodSignature"><a href="FBObject.Colorbuffer.html" title="interface in com.jogamp.opengl">FBObject.Colorbuffer</a>&nbsp;getColorbuffer&#8203;(int&nbsp;bufferName)
                             throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<div class="block">Returns the named <a href="FBObject.Colorbuffer.html" title="interface in com.jogamp.opengl"><code>FBObject.Colorbuffer</code></a> instance.
 <p>
 If MSAA is being used, only the <a href="GL.html#GL_FRONT"><code>GL.GL_FRONT</code></a> buffer is accessible
 and an exception is being thrown if <a href="GL.html#GL_BACK"><code>GL.GL_BACK</code></a> is being requested.
 </p>
 <p>
 Depending on the <a href="#setFBOMode(int)"><code>fbo mode</code></a> the resulting <a href="FBObject.Colorbuffer.html" title="interface in com.jogamp.opengl"><code>FBObject.Colorbuffer</code></a>
 is either a <a href="FBObject.TextureAttachment.html" title="class in com.jogamp.opengl"><code>FBObject.TextureAttachment</code></a> if <a href="#FBOMODE_USE_TEXTURE"><code>FBOMODE_USE_TEXTURE</code></a> is set,
 otherwise a <a href="FBObject.ColorAttachment.html" title="class in com.jogamp.opengl"><code>FBObject.ColorAttachment</code></a>.
 See <a href="FBObject.Colorbuffer.html#isTextureAttachment()"><code>FBObject.Colorbuffer.isTextureAttachment()</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bufferName</code> - <a href="GL.html#GL_FRONT"><code>GL.GL_FRONT</code></a> and <a href="GL.html#GL_BACK"><code>GL.GL_BACK</code></a> are valid buffer names</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the named <a href="FBObject.Colorbuffer.html" title="interface in com.jogamp.opengl"><code>FBObject.Colorbuffer</code></a></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if using MSAA and <a href="GL.html#GL_BACK"><code>GL.GL_BACK</code></a> is requested or an illegal buffer name is being used</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLFBODrawable.html" target="_top">Frames</a></li>
<li><a href="GLFBODrawable.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
