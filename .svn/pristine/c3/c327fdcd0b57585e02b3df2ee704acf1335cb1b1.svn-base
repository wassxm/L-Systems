<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:25 CET 2023 -->
<title>NativeSurface (NativeWindow API -- 2.4 Specification)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="NativeSurface (NativeWindow API -- 2.4 Specification)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6,"i6":6,"i7":6,"i8":6,"i9":6,"i10":6,"i11":6,"i12":6,"i13":6,"i14":6,"i15":6,"i16":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/nativewindow/NativeSurface.html" target="_top">Frames</a></li>
<li><a href="NativeSurface.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.nativewindow</a></div>
<h2 title="Interface NativeSurface" class="title">Interface NativeSurface</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Superinterfaces:</dt>
<dd><code><a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a></code></dd>
</dl>
<dl>
<dt>All Known Subinterfaces:</dt>
<dd><code><a href="MutableSurface.html" title="interface in com.jogamp.nativewindow">MutableSurface</a></code>, <code><a href="NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a></code>, <code><a href="ProxySurface.html" title="interface in com.jogamp.nativewindow">ProxySurface</a></code></dd>
</dl>
<dl>
<dt>All Known Implementing Classes:</dt>
<dd><code><a href="awt/JAWTWindow.html" title="class in com.jogamp.nativewindow.awt">JAWTWindow</a></code></dd>
</dl>
<hr>
<pre>public interface <span class="typeNameLabel">NativeSurface</span>
extends <a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a></pre>
<div class="block">Provides low-level information required for
 hardware-accelerated rendering using a surface in a platform-independent manner.
 <p>
 All values of this interface are represented in pixel units, if not stated otherwise.
 See <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a>.
 </p>
 <p>
 A NativeSurface created for a particular on- or offscreen component is
 expected to have the same lifetime as that component. As long as
 the component is alive and realized/visible, NativeSurface must be able
 provide information such as the surface handle while it is locked.
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#LOCK_SUCCESS">LOCK_SUCCESS</a></span></code></th>
<td class="colLast">
<div class="block">Returned by <a href="#lockSurface()"><code>lockSurface()</code></a> if the surface is locked, and is unchanged, 3.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#LOCK_SURFACE_CHANGED">LOCK_SURFACE_CHANGED</a></span></code></th>
<td class="colLast">
<div class="block">Returned by <a href="#lockSurface()"><code>lockSurface()</code></a> if the surface is locked, but has changed, 2.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#LOCK_SURFACE_NOT_READY">LOCK_SURFACE_NOT_READY</a></span></code></th>
<td class="colLast">
<div class="block">Returned by <a href="#lockSurface()"><code>lockSurface()</code></a> if the surface is not ready to be locked, 1.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#LOCK_SURFACE_UNLOCKED">LOCK_SURFACE_UNLOCKED</a></span></code></th>
<td class="colLast">
<div class="block">Unlocked state, 0.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addSurfaceUpdatedListener(int,com.jogamp.nativewindow.SurfaceUpdatedListener)">addSurfaceUpdatedListener</a></span>&#8203;(int&nbsp;index,
                         <a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Inserts the given <a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow"><code>SurfaceUpdatedListener</code></a> at the
 specified position in the list.<br></div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addSurfaceUpdatedListener(com.jogamp.nativewindow.SurfaceUpdatedListener)">addSurfaceUpdatedListener</a></span>&#8203;(<a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Appends the given <a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow"><code>SurfaceUpdatedListener</code></a> to the end of the list.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>int[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#convertToPixelUnits(int%5B%5D)">convertToPixelUnits</a></span>&#8203;(int[]&nbsp;windowUnitsAndResult)</code></th>
<td class="colLast">
<div class="block">Converts the given window units into pixel units <i>in place</i>.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>int[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#convertToWindowUnits(int%5B%5D)">convertToWindowUnits</a></span>&#8203;(int[]&nbsp;pixelUnitsAndResult)</code></th>
<td class="colLast">
<div class="block">Converts the given pixel units into window units <i>in place</i>.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDisplayHandle()">getDisplayHandle</a></span>()</code></th>
<td class="colLast">
<div class="block">Convenience: Get display handle from
   AbstractGraphicsConfiguration .</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code><a href="AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsConfiguration</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGraphicsConfiguration()">getGraphicsConfiguration</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the graphics configuration corresponding to this window.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink">RecursiveLock</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getLock()">getLock</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the implementation's <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink"><code>RecursiveLock</code></a> synchronizing multithreaded access
 if used.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getScreenIndex()">getScreenIndex</a></span>()</code></th>
<td class="colLast">
<div class="block">Convenience: Get display handle from
   AbstractGraphicsConfiguration .</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSurfaceHandle()">getSurfaceHandle</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the handle to the surface for this NativeSurface.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSurfaceHeight()">getSurfaceHeight</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the height of the client area excluding insets (window decorations) in pixel units.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSurfaceLockOwner()">getSurfaceLockOwner</a></span>()</code></th>
<td class="colLast">
<div class="block">Return the locking owner's Thread, or null if not locked.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSurfaceWidth()">getSurfaceWidth</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the width of the client area excluding insets (window decorations) in pixel units.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isSurfaceLockedByOtherThread()">isSurfaceLockedByOtherThread</a></span>()</code></th>
<td class="colLast">
<div class="block">Query if surface is locked by another thread, i.e.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lockSurface()">lockSurface</a></span>()</code></th>
<td class="colLast">
<div class="block">Lock the surface of this native window.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#removeSurfaceUpdatedListener(com.jogamp.nativewindow.SurfaceUpdatedListener)">removeSurfaceUpdatedListener</a></span>&#8203;(<a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a>&nbsp;l)</code></th>
<td class="colLast">
<div class="block">Remove the specified <a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow"><code>SurfaceUpdatedListener</code></a> from the list.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#surfaceSwap()">surfaceSwap</a></span>()</code></th>
<td class="colLast">
<div class="block">Provide a mechanism to utilize custom (pre-) swap surface
 code.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#unlockSurface()">unlockSurface</a></span>()</code></th>
<td class="colLast">
<div class="block">Unlock the surface of this native window

 Shall not modify the surface handle, see <a href="#lockSurface()"><code>lockSurface()</code></a></div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.nativewindow.SurfaceUpdatedListener">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.nativewindow.<a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a></h3>
<code><a href="SurfaceUpdatedListener.html#surfaceUpdated(java.lang.Object,com.jogamp.nativewindow.NativeSurface,long)">surfaceUpdated</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="LOCK_SURFACE_UNLOCKED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>LOCK_SURFACE_UNLOCKED</h4>
<pre>static final&nbsp;int LOCK_SURFACE_UNLOCKED</pre>
<div class="block">Unlocked state, 0.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeSurface.LOCK_SURFACE_UNLOCKED">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="LOCK_SURFACE_NOT_READY">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>LOCK_SURFACE_NOT_READY</h4>
<pre>static final&nbsp;int LOCK_SURFACE_NOT_READY</pre>
<div class="block">Returned by <a href="#lockSurface()"><code>lockSurface()</code></a> if the surface is not ready to be locked, 1.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeSurface.LOCK_SURFACE_NOT_READY">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="LOCK_SURFACE_CHANGED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>LOCK_SURFACE_CHANGED</h4>
<pre>static final&nbsp;int LOCK_SURFACE_CHANGED</pre>
<div class="block">Returned by <a href="#lockSurface()"><code>lockSurface()</code></a> if the surface is locked, but has changed, 2.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeSurface.LOCK_SURFACE_CHANGED">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="LOCK_SUCCESS">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>LOCK_SUCCESS</h4>
<pre>static final&nbsp;int LOCK_SUCCESS</pre>
<div class="block">Returned by <a href="#lockSurface()"><code>lockSurface()</code></a> if the surface is locked, and is unchanged, 3.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeSurface.LOCK_SUCCESS">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="getLock()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLock</h4>
<pre class="methodSignature"><a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink">RecursiveLock</a>&nbsp;getLock()</pre>
<div class="block">Returns the implementation's <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink"><code>RecursiveLock</code></a> synchronizing multithreaded access
 if used. Otherwise <code>null</code> is being returned.
 <p>
 <a href="NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a>'s <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink"><code>RecursiveLock</code></a> is only exposed to resolve special
 situations within the implementation and its usage is not advised if not absolutely necessary.
 </p>
 <p>
 Note that certain <a href="NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a> implementations only use the <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink"><code>RecursiveLock</code></a>
 as an upfront re-entrance lock vehicle, but actually acquire and release
 the underlying windowing toolkit's lock facility on the first or last re-entrance lock,
 respectively.
 </p></div>
</li>
</ul>
<a id="lockSurface()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lockSurface</h4>
<pre class="methodSignature">int&nbsp;lockSurface()
         throws <a href="NativeWindowException.html" title="class in com.jogamp.nativewindow">NativeWindowException</a>,
                <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang" class="externalLink">RuntimeException</a></pre>
<div class="block">Lock the surface of this native window.
 <p>
 The surface handle shall be valid after a successfull call,
 ie return a value other than <a href="#LOCK_SURFACE_UNLOCKED"><code>LOCK_SURFACE_UNLOCKED</code></a> and <a href="#LOCK_SURFACE_NOT_READY"><code>LOCK_SURFACE_NOT_READY</code></a>,
 which is
 <pre>
    boolean ok = LOCK_SURFACE_NOT_READY < lockSurface();
 </pre>
 </p>
 <p>
 The caller may need to take care of the result <a href="#LOCK_SURFACE_CHANGED"><code>LOCK_SURFACE_CHANGED</code></a>,
 where the surface handle is valid but has changed.
 </p>
 <p>
 This call is blocking until the surface has been locked
 or a timeout is reached. The latter will throw a runtime exception.
 </p>
 <p>
 This call allows recursion from the same thread.
 </p>
 <p>
 The implementation may want to aquire the
 application level <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink"><code>RecursiveLock</code></a>
 first before proceeding with a native surface lock.
 </p>
 <p>
 The implementation shall also invoke <a href="AbstractGraphicsDevice.html#lock()"><code>AbstractGraphicsDevice.lock()</code></a>
 for the initial lock (recursive count zero).
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><a href="#LOCK_SUCCESS"><code>LOCK_SUCCESS</code></a>, <a href="#LOCK_SURFACE_CHANGED"><code>LOCK_SURFACE_CHANGED</code></a> or <a href="#LOCK_SURFACE_NOT_READY"><code>LOCK_SURFACE_NOT_READY</code></a>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang" class="externalLink">RuntimeException</a></code> - after timeout when waiting for the surface lock</dd>
<dd><code><a href="NativeWindowException.html" title="class in com.jogamp.nativewindow">NativeWindowException</a></code> - if native locking failed, maybe platform related</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink"><code>RecursiveLock</code></a></dd>
</dl>
</li>
</ul>
<a id="unlockSurface()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>unlockSurface</h4>
<pre class="methodSignature">void&nbsp;unlockSurface()</pre>
<div class="block">Unlock the surface of this native window

 Shall not modify the surface handle, see <a href="#lockSurface()"><code>lockSurface()</code></a> <P>

 The implementation shall also invoke <a href="AbstractGraphicsDevice.html#unlock()"><code>AbstractGraphicsDevice.unlock()</code></a>
 for the final unlock (recursive count zero).<P>

 The implementation shall be fail safe, i.e. tolerant in case the native resources
 are already released / unlocked. In this case the implementation shall simply ignore the call.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#lockSurface()"><code>lockSurface()</code></a>, 
<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink"><code>RecursiveLock</code></a></dd>
</dl>
</li>
</ul>
<a id="isSurfaceLockedByOtherThread()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isSurfaceLockedByOtherThread</h4>
<pre class="methodSignature">boolean&nbsp;isSurfaceLockedByOtherThread()</pre>
<div class="block">Query if surface is locked by another thread, i.e. not the current one.
 <br>
 Convenient shortcut for:
 <pre>
   final Thread o = getSurfaceLockOwner();
   if( null != o && Thread.currentThread() != o ) { .. }
 </pre></div>
</li>
</ul>
<a id="getSurfaceLockOwner()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSurfaceLockOwner</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;getSurfaceLockOwner()</pre>
<div class="block">Return the locking owner's Thread, or null if not locked.</div>
</li>
</ul>
<a id="surfaceSwap()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>surfaceSwap</h4>
<pre class="methodSignature">boolean&nbsp;surfaceSwap()</pre>
<div class="block">Provide a mechanism to utilize custom (pre-) swap surface
 code. This method is called before the render toolkit (e.g. JOGL)
 swaps the buffer/surface if double buffering is enabled.
 <p>
 The implementation may itself apply the swapping,
 in which case true shall be returned.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if this method completed swapping the surface,
         otherwise false, in which case eg the GLDrawable
         implementation has to swap the code.</dd>
</dl>
</li>
</ul>
<a id="addSurfaceUpdatedListener(com.jogamp.nativewindow.SurfaceUpdatedListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addSurfaceUpdatedListener</h4>
<pre class="methodSignature">void&nbsp;addSurfaceUpdatedListener&#8203;(<a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a>&nbsp;l)</pre>
<div class="block">Appends the given <a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow"><code>SurfaceUpdatedListener</code></a> to the end of the list.</div>
</li>
</ul>
<a id="addSurfaceUpdatedListener(int,com.jogamp.nativewindow.SurfaceUpdatedListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addSurfaceUpdatedListener</h4>
<pre class="methodSignature">void&nbsp;addSurfaceUpdatedListener&#8203;(int&nbsp;index,
                               <a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a>&nbsp;l)
                        throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></pre>
<div class="block">Inserts the given <a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow"><code>SurfaceUpdatedListener</code></a> at the
 specified position in the list.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>index</code> - Position where the listener will be inserted.
 Should be within (0 <= index && index <= size()).
 An index value of -1 is interpreted as the end of the list, size().</dd>
<dd><code>l</code> - The listener object to be inserted</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code> - If the index is not within (0 <= index && index <= size()), or -1</dd>
</dl>
</li>
</ul>
<a id="removeSurfaceUpdatedListener(com.jogamp.nativewindow.SurfaceUpdatedListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeSurfaceUpdatedListener</h4>
<pre class="methodSignature">void&nbsp;removeSurfaceUpdatedListener&#8203;(<a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow">SurfaceUpdatedListener</a>&nbsp;l)</pre>
<div class="block">Remove the specified <a href="SurfaceUpdatedListener.html" title="interface in com.jogamp.nativewindow"><code>SurfaceUpdatedListener</code></a> from the list.</div>
</li>
</ul>
<a id="getSurfaceHandle()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSurfaceHandle</h4>
<pre class="methodSignature">long&nbsp;getSurfaceHandle()</pre>
<div class="block">Returns the handle to the surface for this NativeSurface. <P>

 The surface handle should be set/update by <a href="#lockSurface()"><code>lockSurface()</code></a>,
 where <a href="#unlockSurface()"><code>unlockSurface()</code></a> is not allowed to modify it.
 After <a href="#unlockSurface()"><code>unlockSurface()</code></a> it is no more guaranteed
 that the surface handle is still valid.

 The surface handle shall reflect the platform one
 for all drawable surface operations, e.g. opengl, swap-buffer. <P>

 On X11 this returns an entity of type Window,
 since there is no differentiation of surface and window there. <BR>
 On Microsoft Windows this returns an entity of type HDC.</div>
</li>
</ul>
<a id="getSurfaceWidth()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSurfaceWidth</h4>
<pre class="methodSignature">int&nbsp;getSurfaceWidth()</pre>
<div class="block">Returns the width of the client area excluding insets (window decorations) in pixel units.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>width of the client area in pixel units</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="NativeWindow.html#getWidth()"><code>NativeWindow.getWidth()</code></a>, 
<a href="#convertToWindowUnits(int%5B%5D)"><code>convertToWindowUnits(int[])</code></a></dd>
</dl>
</li>
</ul>
<a id="getSurfaceHeight()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSurfaceHeight</h4>
<pre class="methodSignature">int&nbsp;getSurfaceHeight()</pre>
<div class="block">Returns the height of the client area excluding insets (window decorations) in pixel units.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>height of the client area in pixel units</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="NativeWindow.html#getHeight()"><code>NativeWindow.getHeight()</code></a>, 
<a href="#convertToWindowUnits(int%5B%5D)"><code>convertToWindowUnits(int[])</code></a></dd>
</dl>
</li>
</ul>
<a id="convertToWindowUnits(int[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>convertToWindowUnits</h4>
<pre class="methodSignature">int[]&nbsp;convertToWindowUnits&#8203;(int[]&nbsp;pixelUnitsAndResult)</pre>
<div class="block">Converts the given pixel units into window units <i>in place</i>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pixelUnitsAndResult</code> - int[2] storage holding the pixel units for the x- and y-coord to convert
                             and the resulting values.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>result int[2] storage pixelUnitsAndResult for chaining holding the converted values</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="ScalableSurface.html" title="interface in com.jogamp.nativewindow"><code>ScalableSurface</code></a></dd>
</dl>
</li>
</ul>
<a id="convertToPixelUnits(int[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>convertToPixelUnits</h4>
<pre class="methodSignature">int[]&nbsp;convertToPixelUnits&#8203;(int[]&nbsp;windowUnitsAndResult)</pre>
<div class="block">Converts the given window units into pixel units <i>in place</i>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>windowUnitsAndResult</code> - int[2] storage holding the window units for the x- and y-coord to convert
                             and the resulting values.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>result int[2] storage windowUnitsAndResult for chaining holding the converted values</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="ScalableSurface.html" title="interface in com.jogamp.nativewindow"><code>ScalableSurface</code></a></dd>
</dl>
</li>
</ul>
<a id="getGraphicsConfiguration()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGraphicsConfiguration</h4>
<pre class="methodSignature"><a href="AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsConfiguration</a>&nbsp;getGraphicsConfiguration()</pre>
<div class="block">Returns the graphics configuration corresponding to this window.
 <p>
 In case the implementation utilizes a delegation pattern to wrap abstract toolkits,
 this method shall return the native <a href="AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsConfiguration</code></a> via <a href="AbstractGraphicsConfiguration.html#getNativeGraphicsConfiguration()"><code>AbstractGraphicsConfiguration.getNativeGraphicsConfiguration()</code></a>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="AbstractGraphicsConfiguration.html#getNativeGraphicsConfiguration()"><code>AbstractGraphicsConfiguration.getNativeGraphicsConfiguration()</code></a>, 
<code>com.jogamp.nativewindow.GraphicsConfigurationFactory#chooseGraphicsConfiguration(Capabilities, CapabilitiesChooser, AbstractGraphicsScreen)</code></dd>
</dl>
</li>
</ul>
<a id="getDisplayHandle()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDisplayHandle</h4>
<pre class="methodSignature">long&nbsp;getDisplayHandle()</pre>
<div class="block">Convenience: Get display handle from
   AbstractGraphicsConfiguration . AbstractGraphicsScreen . AbstractGraphicsDevice</div>
</li>
</ul>
<a id="getScreenIndex()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getScreenIndex</h4>
<pre class="methodSignature">int&nbsp;getScreenIndex()</pre>
<div class="block">Convenience: Get display handle from
   AbstractGraphicsConfiguration . AbstractGraphicsScreen</div>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/nativewindow/NativeSurface.html" target="_top">Frames</a></li>
<li><a href="NativeSurface.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
