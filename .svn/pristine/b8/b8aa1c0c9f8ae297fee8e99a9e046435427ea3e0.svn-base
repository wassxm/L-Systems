<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:28:57 CET 2023 -->
<title>Ringbuffer (GlueGen Runtime Documentation)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Ringbuffer (GlueGen Runtime Documentation)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6,"i6":6,"i7":6,"i8":6,"i9":6,"i10":6,"i11":6,"i12":6,"i13":6,"i14":6,"i15":6,"i16":6,"i17":6,"i18":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/common/util/Ringbuffer.html" target="_top">Frames</a></li>
<li><a href="Ringbuffer.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.common.util</a></div>
<h2 title="Interface Ringbuffer" class="title">Interface Ringbuffer&lt;T&gt;</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Known Implementing Classes:</dt>
<dd><code><a href="LFRingbuffer.html" title="class in com.jogamp.common.util">LFRingbuffer</a></code>, <code><a href="SyncedRingbuffer.html" title="class in com.jogamp.common.util">SyncedRingbuffer</a></code></dd>
</dl>
<hr>
<pre>public interface <span class="typeNameLabel">Ringbuffer&lt;T&gt;</span></pre>
<div class="block">Ring buffer interface, a.k.a circular buffer.
 <p>
 Caller can chose whether to block until get / put is able to proceed or not.
 </p>
 <p>
 Caller can chose whether to pass an empty array and clear references at get,
 or using a preset array for circular access of same objects.
 </p>
 <p>
 Synchronization and hence thread safety details belong to the implementation.
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#capacity()">capacity</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the net capacity of this ring buffer.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#clear()">clear</a></span>()</code></th>
<td class="colLast">
<div class="block">Resets the read and write position according to an empty ring buffer
 and set all ring buffer slots to <code>null</code>.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#dump(java.io.PrintStream,java.lang.String)">dump</a></span>&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html?is-external=true" title="class or interface in java.io" class="externalLink">PrintStream</a>&nbsp;stream,
    <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;prefix)</code></th>
<td class="colLast">
<div class="block">Debug functionality - Dumps the contents of the internal array.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#get()">get</a></span>()</code></th>
<td class="colLast">
<div class="block">Dequeues the oldest enqueued element if available, otherwise null.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getBlocking()">getBlocking</a></span>()</code></th>
<td class="colLast">
<div class="block">Dequeues the oldest enqueued element.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFreeSlots()">getFreeSlots</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the number of free slots available to put.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#growEmptyBuffer(T%5B%5D)">growEmptyBuffer</a></span>&#8203;(<a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>[]&nbsp;newElements)</code></th>
<td class="colLast">
<div class="block">Grows an empty ring buffer, increasing it's capacity about the amount.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#growFullBuffer(int)">growFullBuffer</a></span>&#8203;(int&nbsp;amount)</code></th>
<td class="colLast">
<div class="block">Grows a full ring buffer, increasing it's capacity about the amount.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isEmpty()">isEmpty</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if this ring buffer is empty, otherwise false.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isFull()">isFull</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if this ring buffer is full, otherwise false.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#peek()">peek</a></span>()</code></th>
<td class="colLast">
<div class="block">Peeks the next element at the read position w/o modifying pointer, nor blocking.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code><a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#peekBlocking()">peekBlocking</a></span>()</code></th>
<td class="colLast">
<div class="block">Peeks the next element at the read position w/o modifying pointer, but w/ blocking.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#put(T)">put</a></span>&#8203;(<a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Enqueues the given element.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#putBlocking(T)">putBlocking</a></span>&#8203;(<a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>&nbsp;e)</code></th>
<td class="colLast">
<div class="block">Enqueues the given element.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#putSame(boolean)">putSame</a></span>&#8203;(boolean&nbsp;blocking)</code></th>
<td class="colLast">
<div class="block">Enqueues the same element at it's write position, if not full.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#resetFull(T%5B%5D)">resetFull</a></span>&#8203;(<a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>[]&nbsp;copyFrom)</code></th>
<td class="colLast">
<div class="block">Resets the read and write position according to a full ring buffer
 and fill all slots w/ elements of array <code>copyFrom</code>.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#size()">size</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the number of elements in this ring buffer.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a short string representation incl.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#waitForFreeSlots(int)">waitForFreeSlots</a></span>&#8203;(int&nbsp;count)</code></th>
<td class="colLast">
<div class="block">Blocks until at least <code>count</code> free slots become available.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature"><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<div class="block">Returns a short string representation incl. size/capacity and internal r/w index (impl. dependent).</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a></code>&nbsp;in class&nbsp;<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
<a id="dump(java.io.PrintStream,java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dump</h4>
<pre class="methodSignature">void&nbsp;dump&#8203;(<a href="https://docs.oracle.com/javase/8/docs/api/java/io/PrintStream.html?is-external=true" title="class or interface in java.io" class="externalLink">PrintStream</a>&nbsp;stream,
          <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;prefix)</pre>
<div class="block">Debug functionality - Dumps the contents of the internal array.</div>
</li>
</ul>
<a id="capacity()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>capacity</h4>
<pre class="methodSignature">int&nbsp;capacity()</pre>
<div class="block">Returns the net capacity of this ring buffer.</div>
</li>
</ul>
<a id="clear()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clear</h4>
<pre class="methodSignature">void&nbsp;clear()</pre>
<div class="block">Resets the read and write position according to an empty ring buffer
 and set all ring buffer slots to <code>null</code>.
 <p>
 <a href="#isEmpty()"><code>isEmpty()</code></a> will return <code>true</code> after calling this method.
 </p></div>
</li>
</ul>
<a id="resetFull(java.lang.Object[])">
<!--   -->
</a><a id="resetFull(T[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>resetFull</h4>
<pre class="methodSignature">void&nbsp;resetFull&#8203;(<a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>[]&nbsp;copyFrom)
        throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<div class="block">Resets the read and write position according to a full ring buffer
 and fill all slots w/ elements of array <code>copyFrom</code>.
 <p>
 Array's <code>copyFrom</code> elements will be copied into the internal array,
 hence it's length must be equal to <a href="#capacity()"><code>capacity()</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>copyFrom</code> - Mandatory array w/ length <a href="#capacity()"><code>capacity()</code></a> to be copied into the internal array.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if <code>copyFrom</code> is <code>null</code>.</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if <code>copyFrom</code>'s length is different from <a href="#capacity()"><code>capacity()</code></a>.</dd>
</dl>
</li>
</ul>
<a id="size()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>size</h4>
<pre class="methodSignature">int&nbsp;size()</pre>
<div class="block">Returns the number of elements in this ring buffer.</div>
</li>
</ul>
<a id="getFreeSlots()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFreeSlots</h4>
<pre class="methodSignature">int&nbsp;getFreeSlots()</pre>
<div class="block">Returns the number of free slots available to put.</div>
</li>
</ul>
<a id="isEmpty()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isEmpty</h4>
<pre class="methodSignature">boolean&nbsp;isEmpty()</pre>
<div class="block">Returns true if this ring buffer is empty, otherwise false.</div>
</li>
</ul>
<a id="isFull()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isFull</h4>
<pre class="methodSignature">boolean&nbsp;isFull()</pre>
<div class="block">Returns true if this ring buffer is full, otherwise false.</div>
</li>
</ul>
<a id="get()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>get</h4>
<pre class="methodSignature"><a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>&nbsp;get()</pre>
<div class="block">Dequeues the oldest enqueued element if available, otherwise null.
 <p>
 The returned ring buffer slot will be set to <code>null</code> to release the reference
 and move ownership to the caller.
 </p>
 <p>
 Method is non blocking and returns immediately;.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the oldest put element if available, otherwise null.</dd>
</dl>
</li>
</ul>
<a id="getBlocking()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBlocking</h4>
<pre class="methodSignature"><a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>&nbsp;getBlocking()
       throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></pre>
<div class="block">Dequeues the oldest enqueued element.
 <p>
 The returned ring buffer slot will be set to <code>null</code> to release the reference
 and move ownership to the caller.
 </p>
 <p>
 Methods blocks until an element becomes available via put.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the oldest put element</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></code></dd>
</dl>
</li>
</ul>
<a id="peek()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>peek</h4>
<pre class="methodSignature"><a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>&nbsp;peek()</pre>
<div class="block">Peeks the next element at the read position w/o modifying pointer, nor blocking.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>null</code> if empty, otherwise the element which would be read next.</dd>
</dl>
</li>
</ul>
<a id="peekBlocking()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>peekBlocking</h4>
<pre class="methodSignature"><a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>&nbsp;peekBlocking()
        throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></pre>
<div class="block">Peeks the next element at the read position w/o modifying pointer, but w/ blocking.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>null</code> if empty, otherwise the element which would be read next.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></code></dd>
</dl>
</li>
</ul>
<a id="put(java.lang.Object)">
<!--   -->
</a><a id="put(T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>put</h4>
<pre class="methodSignature">boolean&nbsp;put&#8203;(<a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>&nbsp;e)</pre>
<div class="block">Enqueues the given element.
 <p>
 Returns true if successful, otherwise false in case buffer is full.
 </p>
 <p>
 Method is non blocking and returns immediately;.
 </p></div>
</li>
</ul>
<a id="putBlocking(java.lang.Object)">
<!--   -->
</a><a id="putBlocking(T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>putBlocking</h4>
<pre class="methodSignature">void&nbsp;putBlocking&#8203;(<a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>&nbsp;e)
          throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></pre>
<div class="block">Enqueues the given element.
 <p>
 Method blocks until a free slot becomes available via get.
 </p></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></code></dd>
</dl>
</li>
</ul>
<a id="putSame(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>putSame</h4>
<pre class="methodSignature">boolean&nbsp;putSame&#8203;(boolean&nbsp;blocking)
         throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></pre>
<div class="block">Enqueues the same element at it's write position, if not full.
 <p>
 Returns true if successful, otherwise false in case buffer is full.
 </p>
 <p>
 If <code>blocking</code> is true, method blocks until a free slot becomes available via get.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>blocking</code> - if true, wait until a free slot becomes available via get.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></code></dd>
</dl>
</li>
</ul>
<a id="waitForFreeSlots(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>waitForFreeSlots</h4>
<pre class="methodSignature">void&nbsp;waitForFreeSlots&#8203;(int&nbsp;count)
               throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></pre>
<div class="block">Blocks until at least <code>count</code> free slots become available.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang" class="externalLink">InterruptedException</a></code></dd>
</dl>
</li>
</ul>
<a id="growEmptyBuffer(java.lang.Object[])">
<!--   -->
</a><a id="growEmptyBuffer(T[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>growEmptyBuffer</h4>
<pre class="methodSignature">void&nbsp;growEmptyBuffer&#8203;(<a href="Ringbuffer.html" title="type parameter in Ringbuffer">T</a>[]&nbsp;newElements)
              throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                     <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<div class="block">Grows an empty ring buffer, increasing it's capacity about the amount.
 <p>
 Growing an empty ring buffer increases it's size about the amount, i.e. renders it not empty.
 The new elements are inserted at the read position, able to be read out via <a href="#get()"><code>get()</code></a> etc.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newElements</code> - array of new full elements the empty buffer shall grow about.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if buffer is not empty</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if newElements is null</dd>
</dl>
</li>
</ul>
<a id="growFullBuffer(int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>growFullBuffer</h4>
<pre class="methodSignature">void&nbsp;growFullBuffer&#8203;(int&nbsp;amount)
             throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                    <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<div class="block">Grows a full ring buffer, increasing it's capacity about the amount.
 <p>
 Growing a full ring buffer leaves the size intact, i.e. renders it not full.
 New <code>null</code> elements are inserted at the write position, able to be written to via <a href="#put(T)"><code>put(Object)</code></a> etc.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>amount</code> - the amount of elements the buffer shall grow about</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if buffer is not full</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if amount is < 0</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/common/util/Ringbuffer.html" target="_top">Frames</a></li>
<li><a href="Ringbuffer.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</body>
</html>
