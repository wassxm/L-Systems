<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:33 CET 2023 -->
<title>GLCanvas (JOGL API -- 2.4 Specification)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GLCanvas (JOGL API -- 2.4 Specification)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":9,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":9,"i36":10,"i37":10,"i38":10,"i39":10,"i40":10,"i41":10,"i42":10,"i43":10,"i44":10,"i45":10,"i46":10,"i47":10,"i48":10,"i49":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/swt/GLCanvas.html" target="_top">Frames</a></li>
<li><a href="GLCanvas.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl.swt</a></div>
<h2 title="Class GLCanvas" class="title">Class GLCanvas</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>org.eclipse.swt.widgets.Widget</li>
<li>
<ul class="inheritance">
<li>org.eclipse.swt.widgets.Control</li>
<li>
<ul class="inheritance">
<li>org.eclipse.swt.widgets.Scrollable</li>
<li>
<ul class="inheritance">
<li>org.eclipse.swt.widgets.Composite</li>
<li>
<ul class="inheritance">
<li>org.eclipse.swt.widgets.Canvas</li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.swt.GLCanvas</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><code><a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurfaceHolder.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink">NativeSurfaceHolder</a></code>, <code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code>, <code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code>, <code><a href="../GLSharedContextSetter.html" title="interface in com.jogamp.opengl">GLSharedContextSetter</a></code>, <code>org.eclipse.swt.graphics.Drawable</code></dd>
</dl>
<hr>
<pre>public class <span class="typeNameLabel">GLCanvas</span>
extends org.eclipse.swt.widgets.Canvas
implements <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>, <a href="../GLSharedContextSetter.html" title="interface in com.jogamp.opengl">GLSharedContextSetter</a></pre>
<div class="block">Native SWT Canvas implementing GLAutoDrawable
 <p>
 Implementation allows use of custom <a href="../GLCapabilities.html" title="class in com.jogamp.opengl"><code>GLCapabilities</code></a>.
 </p>
 <p>
 <a name="contextSharing"><h5>OpenGL Context Sharing</h5></a>
 To share a <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> see the following note in the documentation overview:
 <a href="../../../../overview-summary.html#SHARING">context sharing</a>
 as well as <a href="../GLSharedContextSetter.html" title="interface in com.jogamp.opengl"><code>GLSharedContextSetter</code></a>.
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.org.eclipse.swt.widgets.Composite">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;org.eclipse.swt.widgets.Composite</h3>
<code>embeddedHandle</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.org.eclipse.swt.widgets.Widget">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;org.eclipse.swt.widgets.Widget</h3>
<code>handle</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.jogamp.opengl.GLAutoDrawable">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;com.jogamp.opengl.<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></h3>
<code><a href="../GLAutoDrawable.html#SCREEN_CHANGE_ACTION_ENABLED">SCREEN_CHANGE_ACTION_ENABLED</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(org.eclipse.swt.widgets.Composite,int,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)">GLCanvas</a></span>&#8203;(org.eclipse.swt.widgets.Composite&nbsp;parent,
        int&nbsp;style,
        <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;capsReqUser,
        <a href="../GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;capsChooser)</code></th>
<td class="colLast">
<div class="block">Creates a new SWT GLCanvas.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addGLEventListener(int,com.jogamp.opengl.GLEventListener)">addGLEventListener</a></span>&#8203;(int&nbsp;idx,
                  <a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener)</code></th>
<td class="colLast">
<div class="block">Adds the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> at the given index of this drawable queue.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addGLEventListener(com.jogamp.opengl.GLEventListener)">addGLEventListener</a></span>&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener)</code></th>
<td class="colLast">
<div class="block">Adds the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> to the end of this drawable queue.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#areAllGLEventListenerInitialized()">areAllGLEventListenerInitialized</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if all added <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> are initialized, otherwise false.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>static <a href="GLCanvas.html" title="class in com.jogamp.opengl.swt">GLCanvas</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#create(org.eclipse.swt.widgets.Composite,int,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)">create</a></span>&#8203;(org.eclipse.swt.widgets.Composite&nbsp;parent,
      int&nbsp;style,
      <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;caps,
      <a href="../GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser)</code></th>
<td class="colLast">
<div class="block">Creates an instance using <a href="#%3Cinit%3E(org.eclipse.swt.widgets.Composite,int,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)"><code>GLCanvas(Composite, int, GLCapabilitiesImmutable, GLCapabilitiesChooser)</code></a>
 on the SWT thread.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createContext(com.jogamp.opengl.GLContext)">createContext</a></span>&#8203;(<a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;shareWith)</code></th>
<td class="colLast">
<div class="block">Creates a new context for drawing to this drawable that will
 optionally share buffer objects, textures and other server-side OpenGL
 objects with the specified GLContext.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#destroy()">destroy</a></span>()</code></th>
<td class="colLast">
<div class="block">Destroys all resources associated with this GLAutoDrawable,
      inclusive the GLContext.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#display()">display</a></span>()</code></th>
<td class="colLast">
<div class="block">
 Causes OpenGL rendering to be performed for this GLAutoDrawable
 in the following order:
 
      Calling <a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a> for all
          registered <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#dispose()">dispose</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code><a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#disposeGLEventListener(com.jogamp.opengl.GLEventListener,boolean)">disposeGLEventListener</a></span>&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener,
                      boolean&nbsp;remove)</code></th>
<td class="colLast">
<div class="block">Disposes the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> via <a href="../GLEventListener.html#dispose(com.jogamp.opengl.GLAutoDrawable)"><code>dispose(..)</code></a>
 if it has been initialized and added to this queue.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#flushGLRunnables()">flushGLRunnables</a></span>()</code></th>
<td class="colLast">
<div class="block">Flushes all <a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>enqueued</code></a> <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a> of this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>
 including notifying waiting executor.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getAnimator()">getAnimator</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getAutoSwapBufferMode()">getAutoSwapBufferMode</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether automatic buffer swapping is enabled for this
      drawable.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code><a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getChosenGLCapabilities()">getChosenGLCapabilities</a></span>()</code></th>
<td class="colLast">
<div class="block">Fetches the <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> corresponding to the chosen
      OpenGL capabilities (pixel format / visual / GLProfile) for this drawable.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code><a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getContext()">getContext</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the context associated with this drawable.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getContextCreationFlags()">getContextCreationFlags</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDelegatedDrawable()">getDelegatedDrawable</a></span>()</code></th>
<td class="colLast">
<div class="block">If the implementation uses delegation, return the delegated <a href="../GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> instance,
 otherwise return <code>this</code> instance.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getExclusiveContextThread()">getExclusiveContextThread</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code><a href="../GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFactory()">getFactory</a></span>()</code></th>
<td class="colLast">
<div class="block">Return the <a href="../GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> being used to create this instance.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code><a href="../GL.html" title="interface in com.jogamp.opengl">GL</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGL()">getGL</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="../GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> pipeline object this GLAutoDrawable uses.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code><a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLEventListener(int)">getGLEventListener</a></span>&#8203;(int&nbsp;index)</code></th>
<td class="colLast">
<div class="block">Returns the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> at the given index of this drawable queue.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLEventListenerCount()">getGLEventListenerCount</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the number of <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> of this drawable queue.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLEventListenerInitState(com.jogamp.opengl.GLEventListener)">getGLEventListenerInitState</a></span>&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener)</code></th>
<td class="colLast">
<div class="block">Retrieves whether the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> is initialized or not.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code><a href="../GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLProfile()">getGLProfile</a></span>()</code></th>
<td class="colLast">
<div class="block">Fetches the <a href="../GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a> for this drawable.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getHandle()">getHandle</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the GL drawable handle,
 guaranteed to be valid after <a href="../GLDrawable.html#setRealized(boolean)"><code>realization</code></a>
 <i>and</i> while it's <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>surface</code></a> is being <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>locked</code></a>.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code><a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink">NativeSurface</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNativeSurface()">getNativeSurface</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the associated <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface</code></a> of this <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurfaceHolder.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurfaceHolder</code></a>.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code><a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRequestedGLCapabilities()">getRequestedGLCapabilities</a></span>()</code></th>
<td class="colLast">
<div class="block">Fetches the <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> corresponding to the user requested
      OpenGL capabilities (pixel format / visual / GLProfile) for this drawable.</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSurfaceHeight()">getSurfaceHeight</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the height of this <a href="../GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>'s <a href="../GLDrawable.html#getNativeSurface()"><code>surface</code></a> client area in pixel units.</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSurfaceWidth()">getSurfaceWidth</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the width of this <a href="../GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>'s <a href="../GLDrawable.html#getNativeSurface()"><code>surface</code></a> client area in pixel units.</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code><a href="../../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink">RecursiveLock</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getUpstreamLock()">getUpstreamLock</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the recursive lock object of the <a href="../GLAutoDrawable.html#getUpstreamWidget()"><code>upstream widget</code></a>
 to synchronize multithreaded access on top of <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.lockSurface()</code></a>.</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getUpstreamWidget()">getUpstreamWidget</a></span>()</code></th>
<td class="colLast">
<div class="block">Method <i>may</i> return the upstream UI toolkit object
 holding this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> instance, if exist.</div>
</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#invoke(boolean,com.jogamp.opengl.GLRunnable)">invoke</a></span>&#8203;(boolean&nbsp;wait,
      <a href="../GLRunnable.html" title="interface in com.jogamp.opengl">GLRunnable</a>&nbsp;runnable)</code></th>
<td class="colLast">
<div class="block">Enqueues a one-shot <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>,
 which will be executed within the next <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> call
 after all registered <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s
 <a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(GLAutoDrawable)</code></a>
 methods have been called.</div>
</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#invoke(boolean,java.util.List)">invoke</a></span>&#8203;(boolean&nbsp;wait,
      <a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="../GLRunnable.html" title="interface in com.jogamp.opengl">GLRunnable</a>&gt;&nbsp;runnables)</code></th>
<td class="colLast">
<div class="block">Extends <a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>GLAutoDrawable.invoke(boolean, GLRunnable)</code></a> functionality
 allowing to inject a list of <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>s.</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLOriented()">isGLOriented</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns <code>true</code> if the drawable is rendered in
 OpenGL's coordinate system, <i>origin at bottom left</i>.</div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isRealized()">isRealized</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns <code>true</code> if this drawable is realized, otherwise <code>false</code>.</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isThreadGLCapable()">isThreadGLCapable</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether the current thread is capable of
 performing OpenGL-related work.</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#main(java.lang.String%5B%5D)">main</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>[]&nbsp;args)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code><a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#removeGLEventListener(com.jogamp.opengl.GLEventListener)">removeGLEventListener</a></span>&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener)</code></th>
<td class="colLast">
<div class="block">Removes the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> from this drawable queue.</div>
</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setAnimator(com.jogamp.opengl.GLAnimatorControl)">setAnimator</a></span>&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;arg0)</code></th>
<td class="colLast">
<div class="block">Registers the usage of an animator, an <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> implementation.</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setAutoSwapBufferMode(boolean)">setAutoSwapBufferMode</a></span>&#8203;(boolean&nbsp;arg0)</code></th>
<td class="colLast">
<div class="block">Enables or disables automatic buffer swapping for this drawable.</div>
</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code><a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setContext(com.jogamp.opengl.GLContext,boolean)">setContext</a></span>&#8203;(<a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;newCtx,
          boolean&nbsp;destroyPrevCtx)</code></th>
<td class="colLast">
<div class="block">Associate the new context, <code>newtCtx</code>, to this auto-drawable.</div>
</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setContextCreationFlags(int)">setContextCreationFlags</a></span>&#8203;(int&nbsp;arg0)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setExclusiveContextThread(java.lang.Thread)">setExclusiveContextThread</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;t)</code></th>
<td class="colLast">
<div class="block">Dedicates this instance's <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> to the given thread.<br/>
 The thread will exclusively claim the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> via <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> and not release it
 until <a href="../GLAutoDrawable.html#destroy()"><code>GLAutoDrawable.destroy()</code></a> or <code>setExclusiveContextThread(null)</code> has been called.</div>
</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code><a href="../GL.html" title="interface in com.jogamp.opengl">GL</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setGL(com.jogamp.opengl.GL)">setGL</a></span>&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;arg0)</code></th>
<td class="colLast">
<div class="block">Sets the <a href="../GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> pipeline object this GLAutoDrawable uses.</div>
</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setGLEventListenerInitState(com.jogamp.opengl.GLEventListener,boolean)">setGLEventListenerInitState</a></span>&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener,
                           boolean&nbsp;initialized)</code></th>
<td class="colLast">
<div class="block">Sets the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener's</code></a> initialized state.</div>
</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setRealized(boolean)">setRealized</a></span>&#8203;(boolean&nbsp;arg0)</code></th>
<td class="colLast">
<div class="block">Indicates to GLDrawable implementations whether the
 underlying <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>surface</code></a> has been created and can be drawn into.</div>
</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)">setSharedAutoDrawable</a></span>&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;sharedAutoDrawable)</code></th>
<td class="colLast">
<div class="block">Specifies an <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>, which <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>OpenGL context</code></a> shall be shared by this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.</div>
</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setSharedContext(com.jogamp.opengl.GLContext)">setSharedContext</a></span>&#8203;(<a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;sharedContext)</code></th>
<td class="colLast">
<div class="block">Specifies an <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>OpenGL context</code></a>, which shall be shared by this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.</div>
</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#swapBuffers()">swapBuffers</a></span>()</code></th>
<td class="colLast">
<div class="block">Swaps the front and back buffers of this drawable.</div>
</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#update()">update</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.org.eclipse.swt.widgets.Canvas">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;org.eclipse.swt.widgets.Canvas</h3>
<code>drawBackground, getCaret, getIME, scroll, setCaret, setFont, setIME</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.org.eclipse.swt.widgets.Composite">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;org.eclipse.swt.widgets.Composite</h3>
<code>changed, drawBackground, getBackgroundMode, getChildren, getLayout, getLayoutDeferred, getTabList, isLayoutDeferred, layout, layout, layout, layout, layout, setBackgroundMode, setFocus, setLayout, setLayoutDeferred, setTabList</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.org.eclipse.swt.widgets.Scrollable">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;org.eclipse.swt.widgets.Scrollable</h3>
<code>computeTrim, getClientArea, getHorizontalBar, getScrollbarsMode, getVerticalBar</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.org.eclipse.swt.widgets.Control">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;org.eclipse.swt.widgets.Control</h3>
<code>addControlListener, addDragDetectListener, addFocusListener, addGestureListener, addHelpListener, addKeyListener, addMenuDetectListener, addMouseListener, addMouseMoveListener, addMouseTrackListener, addMouseWheelListener, addPaintListener, addTouchListener, addTraverseListener, computeSize, computeSize, dragDetect, dragDetect, forceFocus, getAccessible, getBackground, getBackgroundImage, getBorderWidth, getBounds, getCursor, getDragDetect, getEnabled, getFont, getForeground, getLayoutData, getLocation, getMenu, getMonitor, getOrientation, getParent, getRegion, getShell, getSize, getTextDirection, getToolTipText, getTouchEnabled, getVisible, internal_dispose_GC, internal_new_GC, isAutoScalable, isEnabled, isFocusControl, isReparentable, isVisible, moveAbove, moveBelow, pack, pack, print, redraw, redraw, removeControlListener, removeDragDetectListener, removeFocusListener, removeGestureListener, removeHelpListener, removeKeyListener, removeMenuDetectListener, removeMouseListener, removeMouseMoveListener, removeMouseTrackListener, removeMouseWheelListener, removePaintListener, removeTouchListener, removeTraverseListener, requestLayout, setBackground, setBackgroundImage, setBounds, setBounds, setCapture, setCursor, setDragDetect, setEnabled, setForeground, setLayoutData, setLocation, setLocation, setMenu, setOrientation, setParent, setRedraw, setRegion, setSize, setSize, setTextDirection, setToolTipText, setTouchEnabled, setVisible, toControl, toControl, toDisplay, toDisplay, traverse, traverse, traverse</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.org.eclipse.swt.widgets.Widget">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;org.eclipse.swt.widgets.Widget</h3>
<code>addDisposeListener, addListener, getData, getData, getDisplay, getListeners, getStyle, isAutoDirection, isDisposed, isListening, notifyListeners, removeDisposeListener, removeListener, reskin, setData, setData</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(org.eclipse.swt.widgets.Composite,int,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>GLCanvas</h4>
<pre>public&nbsp;GLCanvas&#8203;(org.eclipse.swt.widgets.Composite&nbsp;parent,
                int&nbsp;style,
                <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;capsReqUser,
                <a href="../GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;capsChooser)</pre>
<div class="block">Creates a new SWT GLCanvas.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>parent</code> - Required (non-null) parent Composite.</dd>
<dd><code>style</code> - Optional SWT style bit-field. The <code>SWT.NO_BACKGROUND</code> bit is set before passing this up to the
           Canvas constructor, so OpenGL handles the background.</dd>
<dd><code>capsReqUser</code> - Optional GLCapabilities. If not provided, the default capabilities for the default GLProfile for the
           graphics device determined by the parent Composite are used. Note that the GLCapabilities that are
           actually used may differ based on the capabilities of the graphics device.</dd>
<dd><code>capsChooser</code> - Optional GLCapabilitiesChooser to customize the selection of the used GLCapabilities based on the
           requested GLCapabilities, and the available capabilities of the graphics device.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="create(org.eclipse.swt.widgets.Composite,int,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>create</h4>
<pre class="methodSignature">public static&nbsp;<a href="GLCanvas.html" title="class in com.jogamp.opengl.swt">GLCanvas</a>&nbsp;create&#8203;(org.eclipse.swt.widgets.Composite&nbsp;parent,
                              int&nbsp;style,
                              <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;caps,
                              <a href="../GLCapabilitiesChooser.html" title="interface in com.jogamp.opengl">GLCapabilitiesChooser</a>&nbsp;chooser)</pre>
<div class="block">Creates an instance using <a href="#%3Cinit%3E(org.eclipse.swt.widgets.Composite,int,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)"><code>GLCanvas(Composite, int, GLCapabilitiesImmutable, GLCapabilitiesChooser)</code></a>
 on the SWT thread.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>parent</code> - Required (non-null) parent Composite.</dd>
<dd><code>style</code> - Optional SWT style bit-field. The <code>SWT.NO_BACKGROUND</code> bit is set before passing this up to the
           Canvas constructor, so OpenGL handles the background.</dd>
<dd><code>caps</code> - Optional GLCapabilities. If not provided, the default capabilities for the default GLProfile for the
           graphics device determined by the parent Composite are used. Note that the GLCapabilities that are
           actually used may differ based on the capabilities of the graphics device.</dd>
<dd><code>chooser</code> - Optional GLCapabilitiesChooser to customize the selection of the used GLCapabilities based on the
           requested GLCapabilities, and the available capabilities of the graphics device.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>a new instance</dd>
</dl>
</li>
</ul>
<a id="setSharedContext(com.jogamp.opengl.GLContext)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSharedContext</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setSharedContext&#8203;(<a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;sharedContext)
                            throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLSharedContextSetter.html#setSharedContext(com.jogamp.opengl.GLContext)">GLSharedContextSetter</a></code></span></div>
<div class="block">Specifies an <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>OpenGL context</code></a>, which shall be shared by this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.
 <p>
 Since the <a href="../GLDrawable.html" title="interface in com.jogamp.opengl"><code>drawable</code></a> and <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>context</code></a> is created
 at <code>GLAutoDrawable initialization</code>
 this method shall be called beforehand to have any effect.
 </p>
 <p>
 A set <i>sharedContext</i> will block context creation, i.e. <code>GLAutoDrawable initialization</code>,
 as long it is not <a href="../GLContext.html#isCreated()"><code>created natively</code></a>.
 </p>
 <p>
 The <i>preferred method</i> of assigning a <i>shared context</i> is
 to <a href="../GLSharedContextSetter.html#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>set the shared GLAutoDrawable</code></a>,
 since this method also takes the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>
 <a href="../GLAutoDrawable.html#areAllGLEventListenerInitialized()"><code>initialization into account</code></a>.
 </p>
 <p>
 See <a href="#lifecycle">Lifecycle Considerations</a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLSharedContextSetter.html#setSharedContext(com.jogamp.opengl.GLContext)">setSharedContext</a></code>&nbsp;in interface&nbsp;<code><a href="../GLSharedContextSetter.html" title="interface in com.jogamp.opengl">GLSharedContextSetter</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sharedContext</code> - The OpenGL context to be shared by this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if a <a href="../GLSharedContextSetter.html#setSharedContext(com.jogamp.opengl.GLContext)"><code>shared GLContext</code></a>
                               or <a href="../GLSharedContextSetter.html#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>shared GLAutoDrawable</code></a> is already set,
                               the given sharedContext is null or equal to this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s context.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLSharedContextSetter.html#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>GLSharedContextSetter.setSharedAutoDrawable(GLAutoDrawable)</code></a></dd>
</dl>
</li>
</ul>
<a id="setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSharedAutoDrawable</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setSharedAutoDrawable&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;sharedAutoDrawable)
                                 throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLSharedContextSetter.html#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)">GLSharedContextSetter</a></code></span></div>
<div class="block">Specifies an <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>, which <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>OpenGL context</code></a> shall be shared by this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.
 <p>
 Since the <a href="../GLDrawable.html" title="interface in com.jogamp.opengl"><code>drawable</code></a> and <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>context</code></a> is created
 at <code>GLAutoDrawable initialization</code>
 this method shall be called beforehand to have any effect.
 </p>
 <p>
 A set <i>sharedAutoDrawable</i> will block context creation, i.e. <a href="GLAutoDrawable.html#initialization">initialization</a>
 as long it's
 <ul>
   <li><a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> is <code>null</code>, or</li>
   <li><a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> has not been <a href="../GLContext.html#isCreated()"><code>created natively</code></a>, or</li>
   <li><a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> are <i>not</i> <a href="../GLAutoDrawable.html#areAllGLEventListenerInitialized()"><code>completely initialized</code></a></li>
 </ul>
 </p>
 <p>
 See <a href="#lifecycle">Lifecycle Considerations</a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLSharedContextSetter.html#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)">setSharedAutoDrawable</a></code>&nbsp;in interface&nbsp;<code><a href="../GLSharedContextSetter.html" title="interface in com.jogamp.opengl">GLSharedContextSetter</a></code></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if a <a href="../GLSharedContextSetter.html#setSharedContext(com.jogamp.opengl.GLContext)"><code>shared GLContext</code></a>
                               or <a href="../GLSharedContextSetter.html#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>shared GLAutoDrawable</code></a> is already set,
                               the given sharedAutoDrawable is null or equal to this GLAutoDrawable.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLSharedContextSetter.html#setSharedContext(com.jogamp.opengl.GLContext)"><code>GLSharedContextSetter.setSharedContext(GLContext)</code></a></dd>
</dl>
</li>
</ul>
<a id="update()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>update</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;update()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>update</code>&nbsp;in class&nbsp;<code>org.eclipse.swt.widgets.Control</code></dd>
</dl>
</li>
</ul>
<a id="dispose()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dispose</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;dispose()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>dispose</code>&nbsp;in class&nbsp;<code>org.eclipse.swt.widgets.Widget</code></dd>
</dl>
</li>
</ul>
<a id="display()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>display</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;display()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#display()">GLAutoDrawable</a></code></span></div>
<div class="block"><p>
 Causes OpenGL rendering to be performed for this GLAutoDrawable
 in the following order:
 <ul>
     <li> Calling <a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a> for all
          registered <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s. </li>
     <li> Executes all one-shot <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>,
          enqueued via <a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>GLAutoDrawable.invoke(boolean, GLRunnable)</code></a>.</li>
 </ul></p>
 <p>
 May be called periodically by a running <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> implementation,<br>
 which must register itself with <a href="../GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)"><code>GLAutoDrawable.setAnimator(com.jogamp.opengl.GLAnimatorControl)</code></a>.</p>
 <p>
 Called automatically by the window system toolkit upon receiving a repaint() request, <br>
 except an <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> implementation <a href="../GLAnimatorControl.html#isAnimating()"><code>GLAnimatorControl.isAnimating()</code></a>.</p>
 <p>
 This routine may also be called manually for better control over the
 rendering process. It is legal to call another GLAutoDrawable's
 display method from within the <a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a> callback.</p>
 <p>
 In case of a new generated OpenGL context,
 the implementation shall call <a href="../GLEventListener.html#init(com.jogamp.opengl.GLAutoDrawable)"><code>init(..)</code></a> for all
 registered <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s <i>before</i> making the
 actual <a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a> calls,
 in case this has not been done yet.</p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#display()">display</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)"><code>GLAutoDrawable.setAnimator(com.jogamp.opengl.GLAnimatorControl)</code></a></dd>
</dl>
</li>
</ul>
<a id="getUpstreamWidget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getUpstreamWidget</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;getUpstreamWidget()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#getUpstreamWidget()">GLAutoDrawable</a></code></span></div>
<div class="block">Method <i>may</i> return the upstream UI toolkit object
 holding this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> instance, if exist.
 <p>
 Currently known Java UI toolkits and it's known return types are:

 <table border="1">
     <tr><td>Toolkit</td>  <td>GLAutoDrawable Implementation</td>            <td>~</td>      <td>Return Type of getUpstreamWidget()</td</tr>
     <tr><td>NEWT</td>     <td><code>GLWindow</code></td>  <td>has a</td>  <td><code>Window</code></td</tr>
     <tr><td>SWT</td>      <td><a href="GLCanvas.html" title="class in com.jogamp.opengl.swt"><code>GLCanvas</code></a></td>   <td>is a</td>   <td><code>Canvas</code></td</tr>
     <tr><td>AWT</td>      <td><a href="../awt/GLCanvas.html" title="class in com.jogamp.opengl.awt"><code>GLCanvas</code></a></td>  <td>is a</td>   <td><a href="http://docs.oracle.com/javase/6/docs/api/java/awt/Canvas.html?is-external=true" title="class or interface in java.awt" class="externalLink"><code>Canvas</code></a></td</tr>
     <tr><td>AWT</td>      <td><a href="../awt/GLJPanel.html" title="class in com.jogamp.opengl.awt"><code>GLJPanel</code></a></td>  <td>is a</td>   <td><a href="http://docs.oracle.com/javase/6/docs/api/javax/swing/JPanel.html?is-external=true" title="class or interface in javax.swing" class="externalLink"><code>JPanel</code></a></td</tr>
 </table>
 However, the result may be other object types than the listed above
 due to new supported toolkits.
 </p>
 <p>
 This method may also return <code>null</code> if no UI toolkit is being used,
 as common for offscreen rendering.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getUpstreamWidget()">getUpstreamWidget</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getUpstreamLock()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getUpstreamLock</h4>
<pre class="methodSignature">public final&nbsp;<a href="../../../../../../gluegen/javadoc/com/jogamp/common/util/locks/RecursiveLock.html?is-external=true" title="class or interface in com.jogamp.common.util.locks" class="externalLink">RecursiveLock</a>&nbsp;getUpstreamLock()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#getUpstreamLock()">GLAutoDrawable</a></code></span></div>
<div class="block">Returns the recursive lock object of the <a href="../GLAutoDrawable.html#getUpstreamWidget()"><code>upstream widget</code></a>
 to synchronize multithreaded access on top of <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.lockSurface()</code></a>.
 <p>
 See <a href="#locking">GLAutoDrawable Locking</a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getUpstreamLock()">getUpstreamLock</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getSurfaceWidth()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSurfaceWidth</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getSurfaceWidth()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#getSurfaceWidth()">GLDrawable</a></code></span></div>
<div class="block">Returns the width of this <a href="../GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>'s <a href="../GLDrawable.html#getNativeSurface()"><code>surface</code></a> client area in pixel units.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#getSurfaceWidth()">getSurfaceWidth</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#getSurfaceWidth()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.getSurfaceWidth()</code></a></dd>
</dl>
</li>
</ul>
<a id="getSurfaceHeight()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSurfaceHeight</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getSurfaceHeight()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#getSurfaceHeight()">GLDrawable</a></code></span></div>
<div class="block">Returns the height of this <a href="../GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>'s <a href="../GLDrawable.html#getNativeSurface()"><code>surface</code></a> client area in pixel units.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#getSurfaceHeight()">getSurfaceHeight</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#getSurfaceHeight()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.getSurfaceHeight()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGLOriented()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLOriented</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;isGLOriented()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#isGLOriented()">GLDrawable</a></code></span></div>
<div class="block">Returns <code>true</code> if the drawable is rendered in
 OpenGL's coordinate system, <i>origin at bottom left</i>.
 Otherwise returns <code>false</code>, i.e. <i>origin at top left</i>.
 <p>
 Default impl. is <code>true</code>, i.e. OpenGL coordinate system.
 </p>
 <p>
 Currently only MS-Windows bitmap offscreen drawable uses a non OpenGL orientation and hence returns <code>false</code>.<br/>
 This removes the need of a vertical flip when used in AWT or Windows applications.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#isGLOriented()">isGLOriented</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="addGLEventListener(com.jogamp.opengl.GLEventListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addGLEventListener</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;addGLEventListener&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#addGLEventListener(com.jogamp.opengl.GLEventListener)">GLAutoDrawable</a></code></span></div>
<div class="block">Adds the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> to the end of this drawable queue.
 The <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listeners</code></a> are notified of events in the order of the queue.
 <p>
 The newly added listener's <a href="../GLEventListener.html#init(com.jogamp.opengl.GLAutoDrawable)"><code>init(..)</code></a>
 method will be called once before any other of it's callback methods.
 See <a href="../GLAutoDrawable.html#getGLEventListenerInitState(com.jogamp.opengl.GLEventListener)"><code>GLAutoDrawable.getGLEventListenerInitState(GLEventListener)</code></a> for details.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#addGLEventListener(com.jogamp.opengl.GLEventListener)">addGLEventListener</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>listener</code> - The GLEventListener object to be inserted</dd>
</dl>
</li>
</ul>
<a id="addGLEventListener(int,com.jogamp.opengl.GLEventListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addGLEventListener</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;addGLEventListener&#8203;(int&nbsp;idx,
                               <a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener)
                        throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#addGLEventListener(int,com.jogamp.opengl.GLEventListener)">GLAutoDrawable</a></code></span></div>
<div class="block">Adds the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> at the given index of this drawable queue.
 The <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listeners</code></a> are notified of events in the order of the queue.
 <p>
 The newly added listener's <a href="../GLEventListener.html#init(com.jogamp.opengl.GLAutoDrawable)"><code>init(..)</code></a>
 method will be called once before any other of it's callback methods.
 See <a href="../GLAutoDrawable.html#getGLEventListenerInitState(com.jogamp.opengl.GLEventListener)"><code>GLAutoDrawable.getGLEventListenerInitState(GLEventListener)</code></a> for details.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#addGLEventListener(int,com.jogamp.opengl.GLEventListener)">addGLEventListener</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>idx</code> - Position where the listener will be inserted.
              Should be within (0 <= index && index <= size()).
              An index value of -1 is interpreted as the end of the list, size().</dd>
<dd><code>listener</code> - The GLEventListener object to be inserted</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code> - If the index is not within (0 <= index && index <= size()), or -1</dd>
</dl>
</li>
</ul>
<a id="getGLEventListenerCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLEventListenerCount</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getGLEventListenerCount()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#getGLEventListenerCount()">GLAutoDrawable</a></code></span></div>
<div class="block">Returns the number of <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> of this drawable queue.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getGLEventListenerCount()">getGLEventListenerCount</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The number of GLEventListener objects of this drawable queue.</dd>
</dl>
</li>
</ul>
<a id="getGLEventListener(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLEventListener</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;getGLEventListener&#8203;(int&nbsp;index)
                                   throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#getGLEventListener(int)">GLAutoDrawable</a></code></span></div>
<div class="block">Returns the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> at the given index of this drawable queue.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getGLEventListener(int)">getGLEventListener</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>index</code> - Position of the listener to be returned.
              Should be within (0 <= index && index < size()).
              An index value of -1 is interpreted as last listener, size()-1.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The GLEventListener object at the given index.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code> - If the index is not within (0 <= index && index < size()), or -1</dd>
</dl>
</li>
</ul>
<a id="areAllGLEventListenerInitialized()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>areAllGLEventListenerInitialized</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;areAllGLEventListenerInitialized()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#areAllGLEventListenerInitialized()">GLAutoDrawable</a></code></span></div>
<div class="block">Returns true if all added <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> are initialized, otherwise false.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#areAllGLEventListenerInitialized()">areAllGLEventListenerInitialized</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getGLEventListenerInitState(com.jogamp.opengl.GLEventListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLEventListenerInitState</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;getGLEventListenerInitState&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#getGLEventListenerInitState(com.jogamp.opengl.GLEventListener)">GLAutoDrawable</a></code></span></div>
<div class="block">Retrieves whether the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> is initialized or not.
 <p>
 After <a href="../GLAutoDrawable.html#addGLEventListener(com.jogamp.opengl.GLEventListener)"><code>adding</code></a> a <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> it is
 marked <i>uninitialized</i> and added to a list of to be initialized <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>.
 If such <i>uninitialized</i> <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>'s handler methods (reshape, display)
 are about to be invoked, it's <a href="../GLEventListener.html#init(com.jogamp.opengl.GLAutoDrawable)"><code>init(..)</code></a> method is invoked first.
 Afterwards the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> is marked <i>initialized</i>
 and removed from the list of to be initialized <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>.
 </p>
 <p>
 This methods returns the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> initialized state,
 i.e. returns <code>false</code> if it is included in the list of to be initialized <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>,
 otherwise <code>true</code>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getGLEventListenerInitState(com.jogamp.opengl.GLEventListener)">getGLEventListenerInitState</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>listener</code> - the GLEventListener object to query it's initialized state.</dd>
</dl>
</li>
</ul>
<a id="setGLEventListenerInitState(com.jogamp.opengl.GLEventListener,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setGLEventListenerInitState</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setGLEventListenerInitState&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener,
                                        boolean&nbsp;initialized)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#setGLEventListenerInitState(com.jogamp.opengl.GLEventListener,boolean)">GLAutoDrawable</a></code></span></div>
<div class="block">Sets the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener's</code></a> initialized state.
 <p>
 This methods allows manually setting the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> initialized state,
 i.e. adding it to, or removing it from the list of to be initialized <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>.
 See <a href="../GLAutoDrawable.html#getGLEventListenerInitState(com.jogamp.opengl.GLEventListener)"><code>GLAutoDrawable.getGLEventListenerInitState(GLEventListener)</code></a> for details.
 </p>
 <p>
 <b>Warning:</b> This method does not validate whether the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener's</code></a>
 is member of this drawable queue, i.e. <a href="../GLAutoDrawable.html#addGLEventListener(com.jogamp.opengl.GLEventListener)"><code>added</code></a>.
 </p>
 <p>
 This method is only exposed to allow users full control over the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>'s state
 and is usually not recommended to change.
 </p>
 <p>
 One use case is moving a <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> and their initialized <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>
 from one <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> to another,
 where a subsequent <a href="../GLEventListener.html#init(com.jogamp.opengl.GLAutoDrawable)"><code>init(..)</code></a> call after adding it
 to the new owner is neither required nor desired.
 See <a href="../util/GLDrawableUtil.html#swapGLContextAndAllGLEventListener(com.jogamp.opengl.GLAutoDrawable,com.jogamp.opengl.GLAutoDrawable)"><code>swapGLContextAndAllGLEventListener(..)</code></a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#setGLEventListenerInitState(com.jogamp.opengl.GLEventListener,boolean)">setGLEventListenerInitState</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>listener</code> - the GLEventListener object to perform a state change.</dd>
<dd><code>initialized</code> - if <code>true</code>, mark the listener initialized, otherwise uninitialized.</dd>
</dl>
</li>
</ul>
<a id="disposeGLEventListener(com.jogamp.opengl.GLEventListener,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>disposeGLEventListener</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;disposeGLEventListener&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener,
                                              boolean&nbsp;remove)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#disposeGLEventListener(com.jogamp.opengl.GLEventListener,boolean)">GLAutoDrawable</a></code></span></div>
<div class="block">Disposes the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> via <a href="../GLEventListener.html#dispose(com.jogamp.opengl.GLAutoDrawable)"><code>dispose(..)</code></a>
 if it has been initialized and added to this queue.
 <p>
 If <code>remove</code> is <code>true</code>, the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> is removed from this drawable queue before disposal,
 otherwise marked uninitialized.
 </p>
 <p>
 If an <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> is being attached and the current thread is different
 than <a href="../GLAnimatorControl.html#getThread()"><code>the animator's thread</code></a>, it is paused during the operation.
 </p>
 <p>
 Note that this is an expensive operation, since <a href="../GLEventListener.html#dispose(com.jogamp.opengl.GLAutoDrawable)"><code>dispose(..)</code></a>
 is decorated by <a href="../GLContext.html#makeCurrent()"><code>GLContext.makeCurrent()</code></a> and <a href="../GLContext.html#release()"><code>GLContext.release()</code></a>.
 </p>
 <p>
 Use <a href="../GLAutoDrawable.html#removeGLEventListener(com.jogamp.opengl.GLEventListener)"><code>removeGLEventListener(listener)</code></a> instead
 if you just want to remove the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> and <i>don't care</i> about the disposal of the it's (OpenGL) resources.
 </p>
 <p>
 Also note that this is done from within a particular drawable's
 <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> handler (reshape, display, etc.), that it is not
 guaranteed that all other listeners will be evaluated properly
 during this update cycle.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#disposeGLEventListener(com.jogamp.opengl.GLEventListener,boolean)">disposeGLEventListener</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>listener</code> - The GLEventListener object to be disposed and removed if <code>remove</code> is <code>true</code></dd>
<dd><code>remove</code> - pass <code>true</code> to have the <code>listener</code> removed from this drawable queue, otherwise pass <code>false</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the disposed and/or removed GLEventListener, or null if no action was performed, i.e. listener was not added</dd>
</dl>
</li>
</ul>
<a id="removeGLEventListener(com.jogamp.opengl.GLEventListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeGLEventListener</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;removeGLEventListener&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;listener)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#removeGLEventListener(com.jogamp.opengl.GLEventListener)">GLAutoDrawable</a></code></span></div>
<div class="block">Removes the given <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a> from this drawable queue.
 <p>
 This is an inexpensive operation, since the removed listener's
 <a href="../GLEventListener.html#dispose(com.jogamp.opengl.GLAutoDrawable)"><code>dispose(..)</code></a> method will <i>not</i> be called.
 </p>
 <p>
 Use <a href="../GLAutoDrawable.html#disposeGLEventListener(com.jogamp.opengl.GLEventListener,boolean)"><code>disposeGLEventListener(listener, true)</code></a>
 instead to ensure disposal of the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>listener</code></a>'s (OpenGL) resources.
 </p>
 <p>
 Note that if this is done from within a particular drawable's
 <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> handler (reshape, display, etc.), that it is not
 guaranteed that all other listeners will be evaluated properly
 during this update cycle.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#removeGLEventListener(com.jogamp.opengl.GLEventListener)">removeGLEventListener</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>listener</code> - The GLEventListener object to be removed</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the removed GLEventListener, or null if listener was not added</dd>
</dl>
</li>
</ul>
<a id="destroy()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>destroy</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;destroy()</pre>
<div class="block">Destroys all resources associated with this GLAutoDrawable,
      inclusive the GLContext.
      If a window is attached to it's implementation, it shall be closed.
      Causes disposing of all OpenGL resources
      by calling <a href="../GLEventListener.html#dispose(com.jogamp.opengl.GLAutoDrawable)"><code>dispose(..)</code></a> for all
      registered <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s. Called automatically by the
      window system toolkit upon receiving a destroy notification. This
      routine may be called manually.

 <p>
 This impl. calls this class's <a href="#dispose()"><code>dispose()</code></a> SWT override,
 where the actual implementation resides.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#destroy()">destroy</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getAnimator()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAnimator</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;getAnimator()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getAnimator()">getAnimator</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the registered <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> implementation, using this <code>GLAutoDrawable</code>.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)"><code>GLAutoDrawable.setAnimator(com.jogamp.opengl.GLAnimatorControl)</code></a>, 
<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a></dd>
</dl>
</li>
</ul>
<a id="setExclusiveContextThread(java.lang.Thread)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setExclusiveContextThread</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;setExclusiveContextThread&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;t)
                                       throws <a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#setExclusiveContextThread(java.lang.Thread)">GLAutoDrawable</a></code></span></div>
<div class="block">Dedicates this instance's <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> to the given thread.<br/>
 The thread will exclusively claim the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> via <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> and not release it
 until <a href="../GLAutoDrawable.html#destroy()"><code>GLAutoDrawable.destroy()</code></a> or <code>setExclusiveContextThread(null)</code> has been called.
 <p>
 Default non-exclusive behavior is <i>requested</i> via <code>setExclusiveContextThread(null)</code>,
 which will cause the next call of <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> on the exclusive thread to
 release the <a href="../GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>. Only after it's async release, <a href="../GLAutoDrawable.html#getExclusiveContextThread()"><code>GLAutoDrawable.getExclusiveContextThread()</code></a>
 will return <code>null</code>.
 </p>
 <p>
 To release a previous made exclusive thread, a user issues <code>setExclusiveContextThread(null)</code>
 and may poll <a href="../GLAutoDrawable.html#getExclusiveContextThread()"><code>GLAutoDrawable.getExclusiveContextThread()</code></a> until it returns <code>null</code>,
 <i>while</i> the exclusive thread is still running.
 </p>
 <p>
 Note: Setting a new exclusive thread without properly releasing a previous one
 will throw an GLException.
 </p>
 <p>
 Note: Utilizing this feature w/ AWT could lead to an AWT-EDT deadlock, depending on the AWT implementation.
 Hence it is advised not to use it with native AWT GLAutoDrawable like GLCanvas.
 </p>
 <p>
 One scenario could be to dedicate the context to the <a href="../GLAnimatorControl.html#getThread()"><code>animator thread</code></a>
 and spare redundant context switches, see <a href="../util/AnimatorBase.html#setExclusiveContext(boolean)"><code>AnimatorBase.setExclusiveContext(boolean)</code></a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#setExclusiveContextThread(java.lang.Thread)">setExclusiveContextThread</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>t</code> - the exclusive thread to claim the context, or <code>null</code> for default operation.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>previous exclusive context thread</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - If an exclusive thread is still active but a new one is attempted to be set</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../util/AnimatorBase.html#setExclusiveContext(boolean)"><code>AnimatorBase.setExclusiveContext(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="getExclusiveContextThread()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getExclusiveContextThread</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html?is-external=true" title="class or interface in java.lang" class="externalLink">Thread</a>&nbsp;getExclusiveContextThread()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getExclusiveContextThread()">getExclusiveContextThread</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAutoDrawable.html#setExclusiveContextThread(java.lang.Thread)"><code>GLAutoDrawable.setExclusiveContextThread(Thread)</code></a></dd>
</dl>
</li>
</ul>
<a id="getAutoSwapBufferMode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAutoSwapBufferMode</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;getAutoSwapBufferMode()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#getAutoSwapBufferMode()">GLAutoDrawable</a></code></span></div>
<div class="block">Indicates whether automatic buffer swapping is enabled for this
      drawable. See <a href="../GLAutoDrawable.html#setAutoSwapBufferMode(boolean)"><code>GLAutoDrawable.setAutoSwapBufferMode(boolean)</code></a>.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getAutoSwapBufferMode()">getAutoSwapBufferMode</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getDelegatedDrawable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDelegatedDrawable</h4>
<pre class="methodSignature">public final&nbsp;<a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;getDelegatedDrawable()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#getDelegatedDrawable()">GLAutoDrawable</a></code></span></div>
<div class="block">If the implementation uses delegation, return the delegated <a href="../GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> instance,
 otherwise return <code>this</code> instance.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getDelegatedDrawable()">getDelegatedDrawable</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getContext()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getContext</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;getContext()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#getContext()">GLAutoDrawable</a></code></span></div>
<div class="block">Returns the context associated with this drawable. The returned
 context will be synchronized.
 Don't rely on it's identity, the context may change.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getContext()">getContext</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getContextCreationFlags()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getContextCreationFlags</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getContextCreationFlags()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getContextCreationFlags()">getContextCreationFlags</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Additional context creation flags</dd>
</dl>
</li>
</ul>
<a id="getGL()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGL</h4>
<pre class="methodSignature">public&nbsp;<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;getGL()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#getGL()">GLAutoDrawable</a></code></span></div>
<div class="block">Returns the <a href="../GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> pipeline object this GLAutoDrawable uses.
      If this method is called outside of the <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>'s callback methods (init, display, etc.) it may
      return null. Users should not rely on the identity of the
      returned GL object; for example, users should not maintain a
      hash table with the GL object as the key. Additionally, the GL
      object should not be cached in client code, but should be
      re-fetched from the GLAutoDrawable at the beginning of each call
      to init, display, etc.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#getGL()">getGL</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="invoke(boolean,com.jogamp.opengl.GLRunnable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>invoke</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;invoke&#8203;(boolean&nbsp;wait,
                      <a href="../GLRunnable.html" title="interface in com.jogamp.opengl">GLRunnable</a>&nbsp;runnable)
               throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)">GLAutoDrawable</a></code></span></div>
<div class="block">Enqueues a one-shot <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>,
 which will be executed within the next <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> call
 after all registered <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>s
 <a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(GLAutoDrawable)</code></a>
 methods have been called.
 <p>
 If no <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> is animating (default),<br>
 or if the current thread is the animator thread,<br>
 a <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> call is issued after enqueue the <code>GLRunnable</code>,
 hence the <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a> will be executed right away.<br/>
 </p>
 <p>
 If an <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>animator</code></a> is running,<br>
 no explicit <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> call is issued, allowing the <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>animator</code></a> to perform at due time.<br>
 </p>
 <p>
 If <code>wait</code> is <code>true</code> the call blocks until the <code>glRunnable</code>
 has been executed by the <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>animator</code></a>, otherwise the method returns immediately.
 </p>
 <p>
 If <code>wait</code> is <code>true</code> <b>and</b>
 <a href="../GLDrawable.html#isRealized()"><code>GLDrawable.isRealized()</code></a> returns <code>false</code> <i>or</i> <a href="../GLAutoDrawable.html#getContext()"><code>GLAutoDrawable.getContext()</code></a> returns <code>null</code>,
 the call is ignored and returns <code>false</code>.<br>
 This helps avoiding deadlocking the caller.
 </p>
 <p>
 The internal queue of <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>'s is being flushed with <a href="../GLAutoDrawable.html#destroy()"><code>GLAutoDrawable.destroy()</code></a>
 where all blocked callers are being notified.
 </p>
 <p>
 To avoid a deadlock situation which causes an <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink"><code>IllegalStateException</code></a> one should
 avoid issuing <a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>invoke</code></a> while this <a href="#locking">GLAutoDrawable is being locked</a>.<br>
 Detected deadlock situations throwing an <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink"><code>IllegalStateException</code></a> are:
 <ul>
   <li><a href="../GLAutoDrawable.html#getAnimator()"><code>Animator</code></a> is running on another thread and waiting and is locked on current thread, but is not <a href="../GLAutoDrawable.html#isThreadGLCapable()"><code>GL-Thread</code></a></li>
   <li>No <a href="../GLAutoDrawable.html#getAnimator()"><code>Animator</code></a> is running on another thread and is locked on current thread, but is not <a href="../GLAutoDrawable.html#isThreadGLCapable()"><code>GL-Thread</code></a></li>
 </ul>
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)">invoke</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>wait</code> - if <code>true</code> block until execution of <code>glRunnable</code> is finished, otherwise return immediately w/o waiting</dd>
<dd><code>runnable</code> - the <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a> to execute within <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>true</code> if the <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a> has been processed or queued, otherwise <code>false</code>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - in case of a detected deadlock situation ahead, see above.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)"><code>GLAutoDrawable.setAnimator(GLAnimatorControl)</code></a>, 
<a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a>, 
<a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>, 
<a href="../GLAutoDrawable.html#invoke(boolean,java.util.List)"><code>GLAutoDrawable.invoke(boolean, List)</code></a>, 
<a href="../GLAutoDrawable.html#flushGLRunnables()"><code>GLAutoDrawable.flushGLRunnables()</code></a></dd>
</dl>
</li>
</ul>
<a id="invoke(boolean,java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>invoke</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;invoke&#8203;(boolean&nbsp;wait,
                      <a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="../GLRunnable.html" title="interface in com.jogamp.opengl">GLRunnable</a>&gt;&nbsp;runnables)
               throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#invoke(boolean,java.util.List)">GLAutoDrawable</a></code></span></div>
<div class="block">Extends <a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>GLAutoDrawable.invoke(boolean, GLRunnable)</code></a> functionality
 allowing to inject a list of <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>s.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#invoke(boolean,java.util.List)">invoke</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>wait</code> - if <code>true</code> block until execution of the last <code>glRunnable</code> is finished, otherwise return immediately w/o waiting</dd>
<dd><code>runnables</code> - the <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>s to execute within <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>true</code> if the <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a>s has been processed or queued, otherwise <code>false</code>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - in case of a detected deadlock situation ahead, see <a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>GLAutoDrawable.invoke(boolean, GLRunnable)</code></a>.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>GLAutoDrawable.invoke(boolean, GLRunnable)</code></a>, 
<a href="../GLAutoDrawable.html#flushGLRunnables()"><code>GLAutoDrawable.flushGLRunnables()</code></a></dd>
</dl>
</li>
</ul>
<a id="flushGLRunnables()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>flushGLRunnables</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;flushGLRunnables()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#flushGLRunnables()">GLAutoDrawable</a></code></span></div>
<div class="block">Flushes all <a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>enqueued</code></a> <a href="../GLRunnable.html" title="interface in com.jogamp.opengl"><code>GLRunnable</code></a> of this <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>
 including notifying waiting executor.
 <p>
 The executor which might have been blocked until notified
 will be unblocked and all tasks removed from the queue.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#flushGLRunnables()">flushGLRunnables</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>GLAutoDrawable.invoke(boolean, GLRunnable)</code></a></dd>
</dl>
</li>
</ul>
<a id="setAnimator(com.jogamp.opengl.GLAnimatorControl)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setAnimator</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setAnimator&#8203;(<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl">GLAnimatorControl</a>&nbsp;arg0)
                 throws <a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)">GLAutoDrawable</a></code></span></div>
<div class="block">Registers the usage of an animator, an <a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a> implementation.
 The animator will be queried whether it's animating, ie periodically issuing <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> calls or not.
 <p>
 This method shall be called by an animator implementation only,<br>
 e.g. <a href="../util/AnimatorBase.html#add(com.jogamp.opengl.GLAutoDrawable)"><code>AnimatorBase.add(com.jogamp.opengl.GLAutoDrawable)</code></a>, passing it's control implementation,<br>
 and <a href="../util/AnimatorBase.html#remove(com.jogamp.opengl.GLAutoDrawable)"><code>AnimatorBase.remove(com.jogamp.opengl.GLAutoDrawable)</code></a>, passing <code>null</code>.
 </p>
 <p>
 Impacts <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> and <a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>GLAutoDrawable.invoke(boolean, GLRunnable)</code></a> semantics.</p><br></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)">setAnimator</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>arg0</code> - <code>null</code> reference indicates no animator is using
                        this <code>GLAutoDrawable</code>,<br>
                        a valid reference indicates an animator is using this <code>GLAutoDrawable</code>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if an animator is already registered.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a>, 
<a href="../GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)"><code>GLAutoDrawable.invoke(boolean, GLRunnable)</code></a>, 
<a href="../GLAnimatorControl.html" title="interface in com.jogamp.opengl"><code>GLAnimatorControl</code></a></dd>
</dl>
</li>
</ul>
<a id="setAutoSwapBufferMode(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setAutoSwapBufferMode</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setAutoSwapBufferMode&#8203;(boolean&nbsp;arg0)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#setAutoSwapBufferMode(boolean)">GLAutoDrawable</a></code></span></div>
<div class="block">Enables or disables automatic buffer swapping for this drawable.
      By default this property is set to true; when true, after all
      GLEventListeners have been called for a display() event, the
      front and back buffers are swapped, displaying the results of
      the render. When disabled, the user is responsible for calling
      {@link #swapBuffers(..)} manually.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#setAutoSwapBufferMode(boolean)">setAutoSwapBufferMode</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="setContext(com.jogamp.opengl.GLContext,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setContext</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;setContext&#8203;(<a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;newCtx,
                            boolean&nbsp;destroyPrevCtx)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#setContext(com.jogamp.opengl.GLContext,boolean)">GLAutoDrawable</a></code></span></div>
<div class="block">Associate the new context, <code>newtCtx</code>, to this auto-drawable.
 <p>
 Remarks:
 <ul>
   <li>The currently associated context will be destroyed if <code>destroyPrevCtx</code> is <code>true</code>,
       otherwise it will be disassociated from this auto-drawable
       via <a href="../GLContext.html#setGLDrawable(com.jogamp.opengl.GLDrawable,boolean)"><code>setGLDrawable(null, true);</code></a> including <a href="../GL.html#glFinish()"><code>glFinish()</code></a>.</li>
   <li>The new context will be associated with this auto-drawable
       via <a href="../GLContext.html#setGLDrawable(com.jogamp.opengl.GLDrawable,boolean)"><code>newCtx.setGLDrawable(drawable, true);</code></a>.</li>
   <li>If the old context was current on this thread, it is being released after disassociating this auto-drawable.</li>
   <li>If the new context was current on this thread, it is being released before associating this auto-drawable
       and made current afterwards.</li>
   <li>Implementation may issue <code>#makeCurrent()</code> and <code>#release()</code> while drawable reassociation.</li>
   <li>The user shall take extra care of thread synchronization,
       i.e. lock the involved <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>auto-drawable's</code></a>
       <a href="../GLAutoDrawable.html#getUpstreamLock()"><code>upstream-locks</code></a> and <a href="../GLDrawable.html#getNativeSurface()"><code>surfaces</code></a>
       to avoid a race condition. See <a href="#locking">GLAutoDrawable Locking</a>.</li>
 </ul>
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#setContext(com.jogamp.opengl.GLContext,boolean)">setContext</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newCtx</code> - the new context, maybe <code>null</code> for dis-association.</dd>
<dd><code>destroyPrevCtx</code> - if <code>true</code>, destroy the previous context if exists</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the previous GLContext, maybe <code>null</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLContext.html#setGLDrawable(com.jogamp.opengl.GLDrawable,boolean)"><code>GLContext.setGLDrawable(GLDrawable, boolean)</code></a>, 
<a href="../GLContext.html#setGLReadDrawable(com.jogamp.opengl.GLDrawable)"><code>GLContext.setGLReadDrawable(GLDrawable)</code></a>, 
<code>GLDrawableHelper.switchContext(GLDrawable, GLContext, boolean, GLContext, int)</code></dd>
</dl>
</li>
</ul>
<a id="setContextCreationFlags(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setContextCreationFlags</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setContextCreationFlags&#8203;(int&nbsp;arg0)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#setContextCreationFlags(int)">setContextCreationFlags</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>arg0</code> - Additional context creation flags.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLContext.html#setContextCreationFlags(int)"><code>GLContext.setContextCreationFlags(int)</code></a>, 
<a href="../GLContext.html#enableGLDebugMessage(boolean)"><code>GLContext.enableGLDebugMessage(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="setGL(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setGL</h4>
<pre class="methodSignature">public&nbsp;<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;setGL&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;arg0)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#setGL(com.jogamp.opengl.GL)">GLAutoDrawable</a></code></span></div>
<div class="block">Sets the <a href="../GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> pipeline object this GLAutoDrawable uses.
      This should only be called from within the GLEventListener's
      callback methods, and usually only from within the init()
      method, in order to install a composable pipeline. See the JOGL
      demos for examples.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#setGL(com.jogamp.opengl.GL)">setGL</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the set GL pipeline or null if not successful</dd>
</dl>
</li>
</ul>
<a id="createContext(com.jogamp.opengl.GLContext)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createContext</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;createContext&#8203;(<a href="../GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;shareWith)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLAutoDrawable.html#createContext(com.jogamp.opengl.GLContext)">GLAutoDrawable</a></code></span></div>
<div class="block">Creates a new context for drawing to this drawable that will
 optionally share buffer objects, textures and other server-side OpenGL
 objects with the specified GLContext.
 <p>
 The GLContext <code>share</code> need not be associated with this
 GLDrawable and may be null if sharing of display lists and other
 objects is not desired. See the note in the overview
 documentation
 <a href="../../../overview-summary.html#SHARING">context sharing</a>
 as well as <a href="../GLSharedContextSetter.html" title="interface in com.jogamp.opengl"><code>GLSharedContextSetter</code></a>.
 </p>
 <p>
 This GLAutoDrawable implementation holds it's own GLContext reference,
 thus created a GLContext using this methods won't replace it implicitly.
 To replace or set this GLAutoDrawable's GLContext you need to call <a href="../GLAutoDrawable.html#setContext(com.jogamp.opengl.GLContext,boolean)"><code>GLAutoDrawable.setContext(GLContext, boolean)</code></a>.
 </p>
 <p>
 The GLAutoDrawable implementation shall also set the
 context creation flags as customized w/ <a href="../GLAutoDrawable.html#setContextCreationFlags(int)"><code>GLAutoDrawable.setContextCreationFlags(int)</code></a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#createContext(com.jogamp.opengl.GLContext)">createContext</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#createContext(com.jogamp.opengl.GLContext)">createContext</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getChosenGLCapabilities()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getChosenGLCapabilities</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;getChosenGLCapabilities()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#getChosenGLCapabilities()">GLDrawable</a></code></span></div>
<div class="block">Fetches the <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> corresponding to the chosen
      OpenGL capabilities (pixel format / visual / GLProfile) for this drawable.
      <p>
      This query only returns the chosen capabilities if <a href="../GLDrawable.html#isRealized()"><code>GLDrawable.isRealized()</code></a>.
      </p>
      <p>
      On some platforms, the pixel format is not directly associated
      with the drawable; a best attempt is made to return a reasonable
      value in this case.
      </p>
      <p>
      This object shall be directly associated to the attached <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface</code></a>'s
      <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/AbstractGraphicsConfiguration.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>AbstractGraphicsConfiguration</code></a>, and if changes are necessary,
      they should reflect those as well.
      </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#getChosenGLCapabilities()">getChosenGLCapabilities</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The immutable queried instance.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLDrawable.html#getRequestedGLCapabilities()"><code>GLDrawable.getRequestedGLCapabilities()</code></a></dd>
</dl>
</li>
</ul>
<a id="getRequestedGLCapabilities()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRequestedGLCapabilities</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;getRequestedGLCapabilities()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#getRequestedGLCapabilities()">GLDrawable</a></code></span></div>
<div class="block">Fetches the <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a> corresponding to the user requested
      OpenGL capabilities (pixel format / visual / GLProfile) for this drawable.
      <p>
      If <a href="../GLDrawable.html#isRealized()"><code>realized</code></a>, <a href="../GLDrawable.html#getChosenGLCapabilities()"><code>the chosen capabilities</code></a>
      reflect the actual selected OpenGL capabilities.
      </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#getRequestedGLCapabilities()">getRequestedGLCapabilities</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The immutable queried instance.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLDrawable.html#getChosenGLCapabilities()"><code>GLDrawable.getChosenGLCapabilities()</code></a></dd>
</dl>
</li>
</ul>
<a id="getFactory()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFactory</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLDrawableFactory.html" title="class in com.jogamp.opengl">GLDrawableFactory</a>&nbsp;getFactory()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#getFactory()">GLDrawable</a></code></span></div>
<div class="block">Return the <a href="../GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>GLDrawableFactory</code></a> being used to create this instance.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#getFactory()">getFactory</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getGLProfile()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLProfile</h4>
<pre class="methodSignature">public&nbsp;<a href="../GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;getGLProfile()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#getGLProfile()">GLDrawable</a></code></span></div>
<div class="block">Fetches the <a href="../GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a> for this drawable.
      Returns the GLProfile object, no copy.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#getGLProfile()">getGLProfile</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="getHandle()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getHandle</h4>
<pre class="methodSignature">public&nbsp;long&nbsp;getHandle()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#getHandle()">GLDrawable</a></code></span></div>
<div class="block">Returns the GL drawable handle,
 guaranteed to be valid after <a href="../GLDrawable.html#setRealized(boolean)"><code>realization</code></a>
 <i>and</i> while it's <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>surface</code></a> is being <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>locked</code></a>.
 <p>
 It is usually identical to the underlying windowing toolkit <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>surface</code></a>'s
 <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#getSurfaceHandle()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>handle</code></a>
 or an intermediate layer to suite GL, e.g. an EGL surface.
 </p>
 <p>
 On EGL it is represented by the EGLSurface.<br>
 On X11/GLX it is represented by either the Window XID, GLXPixmap, or GLXPbuffer.<br>
 On Windows it is represented by the HDC, which may change with each <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.lockSurface()</code></a>.<br>
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#getHandle()">getHandle</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLDrawable.html#setRealized(boolean)"><code>GLDrawable.setRealized(boolean)</code></a>, 
<a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.lockSurface()</code></a>, 
<a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#unlockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.unlockSurface()</code></a></dd>
</dl>
</li>
</ul>
<a id="getNativeSurface()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNativeSurface</h4>
<pre class="methodSignature">public&nbsp;<a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink">NativeSurface</a>&nbsp;getNativeSurface()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#getNativeSurface()">GLDrawable</a></code></span></div>
<div class="block">Returns the associated <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface</code></a> of this <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurfaceHolder.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurfaceHolder</code></a>.
 <p>
 Returns the underlying <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface</code></a> which <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#getSurfaceHandle()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>native handle</code></a>
 represents this OpenGL drawable's native resource.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#getNativeSurface()">getNativeSurface</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurfaceHolder.html?is-external=true#getNativeSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink">getNativeSurface</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurfaceHolder.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink">NativeSurfaceHolder</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLDrawable.html#getHandle()"><code>GLDrawable.getHandle()</code></a></dd>
</dl>
</li>
</ul>
<a id="isRealized()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isRealized</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;isRealized()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#isRealized()">GLDrawable</a></code></span></div>
<div class="block">Returns <code>true</code> if this drawable is realized, otherwise <code>false</code>.
 <p>
 A drawable can be realized and unrealized via <a href="../GLDrawable.html#setRealized(boolean)"><code>GLDrawable.setRealized(boolean)</code></a>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#isRealized()">isRealized</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLDrawable.html#setRealized(boolean)"><code>GLDrawable.setRealized(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="setRealized(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setRealized</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setRealized&#8203;(boolean&nbsp;arg0)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#setRealized(boolean)">GLDrawable</a></code></span></div>
<div class="block">Indicates to GLDrawable implementations whether the
 underlying <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>surface</code></a> has been created and can be drawn into.
 <p>
 If realized, the <a href="../GLDrawable.html#getHandle()"><code>drawable handle</code></a> may become
 valid while it's <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>surface</code></a> is being <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>locked</code></a>.
 </p>
 <p>
 End users do not need to call this method; it is not necessary to
 call <code>setRealized</code> on a <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>
 as these perform the appropriate calls on their underlying GLDrawables internally.
 </p>
 <p>
 Developers implementing new OpenGL components for various window
 toolkits need to call this method against GLDrawables obtained
 from the GLDrawableFactory via the
 <a href="../GLDrawableFactory.html#createGLDrawable(com.jogamp.nativewindow.NativeSurface)"><code>GLDrawableFactory.createGLDrawable(NativeSurface)</code></a> method.
 It must typically be
 called with an argument of <code>true</code> when the component
 associated with the GLDrawable is realized and with an argument
 of <code>false</code> just before the component is unrealized.
 For the AWT, this means calling <code>setRealized(true)</code> in
 the <code>addNotify</code> method and with an argument of
 <code>false</code> in the <code>removeNotify</code> method.
 </p>
 <p>
 <code>GLDrawable</code> implementations should handle multiple
 cycles of <code>setRealized(true)</code> /
 <code>setRealized(false)</code> calls. Most, if not all, Java
 window toolkits have a persistent object associated with a given
 component, regardless of whether that component is currently
 realized. The <CODE>GLDrawable</CODE> object associated with a
 particular component is intended to be similarly persistent. A
 <CODE>GLDrawable</CODE> is intended to be created for a given
 component when it is constructed and live as long as that
 component. <code>setRealized</code> allows the
 <code>GLDrawable</code> to re-initialize and destroy any
 associated resources as the component becomes realized and
 unrealized, respectively.
 </p>
 <p>
 With an argument of <code>true</code>,
 the minimum implementation shall call
 <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface's lockSurface()</code></a> and if successful:
 <ul>
    <li> Update the <a href="../GLCapabilities.html" title="class in com.jogamp.opengl"><code>GLCapabilities</code></a>, which are associated with
         the attached <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface</code></a>'s <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/AbstractGraphicsConfiguration.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>AbstractGraphicsConfiguration</code></a>.</li>
    <li> Release the lock with <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#unlockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface's unlockSurface()</code></a>.</li>
 </ul><br>
 This is important since <a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface's lockSurface()</code></a>
 ensures resolving the window/surface handles, and the drawable's <a href="../GLCapabilities.html" title="class in com.jogamp.opengl"><code>GLCapabilities</code></a>
 might have changed.
 </p>
 <p>
 Calling this method has no other effects. For example, if
 <code>removeNotify</code> is called on a Canvas implementation
 for which a GLDrawable has been created, it is also necessary to
 destroy all OpenGL contexts associated with that GLDrawable. This
 is not done automatically by the implementation.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#setRealized(boolean)">setRealized</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../GLDrawable.html#isRealized()"><code>GLDrawable.isRealized()</code></a>, 
<a href="../GLDrawable.html#getHandle()"><code>GLDrawable.getHandle()</code></a>, 
<a href="../../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurface.html?is-external=true#lockSurface()" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>NativeSurface.lockSurface()</code></a></dd>
</dl>
</li>
</ul>
<a id="swapBuffers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>swapBuffers</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;swapBuffers()
                 throws <a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../GLDrawable.html#swapBuffers()">GLDrawable</a></code></span></div>
<div class="block">Swaps the front and back buffers of this drawable. For <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> implementations, when automatic buffer swapping
      is enabled (as is the default), this method is called
      automatically and should not be called by the end user.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#swapBuffers()">swapBuffers</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code></dd>
</dl>
</li>
</ul>
<a id="isThreadGLCapable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isThreadGLCapable</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isThreadGLCapable()</pre>
<div class="block">Indicates whether the current thread is capable of
 performing OpenGL-related work.
 <p>
 Implementation utilizes this knowledge to determine
 whether <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a> performs the OpenGL commands on the current thread directly
 or spawns them on the dedicated OpenGL thread.
 </p>
 <p>
 Implementation always supports multithreading, hence method always returns <code>true</code>.
 </p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLAutoDrawable.html#isThreadGLCapable()">isThreadGLCapable</a></code>&nbsp;in interface&nbsp;<code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></dd>
</dl>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../GLDrawable.html#toString()">toString</a></code>&nbsp;in interface&nbsp;<code><a href="../GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></dd>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>org.eclipse.swt.widgets.Composite</code></dd>
</dl>
</li>
</ul>
<a id="main(java.lang.String[])">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>main</h4>
<pre class="methodSignature">public static&nbsp;void&nbsp;main&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>[]&nbsp;args)</pre>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/swt/GLCanvas.html" target="_top">Frames</a></li>
<li><a href="GLCanvas.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
