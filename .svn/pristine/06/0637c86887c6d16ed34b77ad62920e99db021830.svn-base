<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>FloatUtil (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="FloatUtil (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9,"i5":9,"i6":9,"i7":9,"i8":9,"i9":9,"i10":9,"i11":9,"i12":9,"i13":9,"i14":9,"i15":9,"i16":9,"i17":9,"i18":9,"i19":9,"i20":9,"i21":9,"i22":9,"i23":9,"i24":9,"i25":9,"i26":9,"i27":9,"i28":9,"i29":9,"i30":9,"i31":9,"i32":9,"i33":9,"i34":9,"i35":9,"i36":9,"i37":9,"i38":9,"i39":9,"i40":9,"i41":9,"i42":9,"i43":9,"i44":9,"i45":9,"i46":9,"i47":9,"i48":9,"i49":9,"i50":9,"i51":9,"i52":9,"i53":9,"i54":9,"i55":9,"i56":9,"i57":9,"i58":9,"i59":9,"i60":9,"i61":9,"i62":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/math/FloatUtil.html" target="_top">Frames</a></li>
<li><a href="FloatUtil.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl.math</a></div>
<h2 title="Class FloatUtil" class="title">Class FloatUtil</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.math.FloatUtil</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public final class <span class="typeNameLabel">FloatUtil</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Basic Float math utility functions.
 <p>
 Implementation assumes linear matrix layout in column-major order
 matching OpenGL's implementation, illustration:
 <pre>
    Row-Major                  Column-Major (OpenGL):

        |  0   1   2   3 |         |  0   4   8  12 |
        |                |         |                |
        |  4   5   6   7 |         |  1   5   9  13 |
    M = |                |     M = |                |
        |  8   9  10  11 |         |  2   6  10  14 |
        |                |         |                |
        | 12  13  14  15 |         |  3   7  11  15 |

           C   R                      C   R
         m[0*4+3] = tx;             m[0+4*3] = tx;
         m[1*4+3] = ty;             m[1+4*3] = ty;
         m[2*4+3] = tz;             m[2+4*3] = tz;
 </pre>
 </p>
 <p>
 <ul>
   <li><a href="http://web.archive.org/web/20041029003853/http://www.j3d.org/matrix_faq/matrfaq_latest.html">Matrix-FAQ</a></li>
   <li><a href="https://en.wikipedia.org/wiki/Matrix_%28mathematics%29">Wikipedia-Matrix</a></li>
   <li><a href="http://www.euclideanspace.com/maths/algebra/matrix/index.htm">euclideanspace.com-Matrix</a></li>
 </ul>
 </p>
 <p>
 Implementation utilizes unrolling of small vertices and matrices wherever possible
 while trying to access memory in a linear fashion for performance reasons, see:
 <ul>
   <li><a href="https://code.google.com/p/java-matrix-benchmark/">java-matrix-benchmark</a></li>
   <li><a href="https://github.com/lessthanoptimal/ejml">EJML Efficient Java Matrix Library</a></li>
 </ul>
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEBUG">DEBUG</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#E">E</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#EPSILON">EPSILON</a></span></code></th>
<td class="colLast">
<div class="block">Epsilon for floating point 1.1920928955078125E-7f, as once computed via <a href="#getMachineEpsilon()"><code>getMachineEpsilon()</code></a> on an AMD-64 CPU.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#HALF_PI">HALF_PI</a></span></code></th>
<td class="colLast">
<div class="block">The value PI/2, i.e.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#INV_DEVIANCE">INV_DEVIANCE</a></span></code></th>
<td class="colLast">
<div class="block">Inversion Epsilon, used with equals method to determine if two inverted matrices are close enough to be considered equal.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#PI">PI</a></span></code></th>
<td class="colLast">
<div class="block">The value PI, i.e.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#QUARTER_PI">QUARTER_PI</a></span></code></th>
<td class="colLast">
<div class="block">The value PI/4, i.e.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#SQUARED_PI">SQUARED_PI</a></span></code></th>
<td class="colLast">
<div class="block">The value PI^2.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TWO_PI">TWO_PI</a></span></code></th>
<td class="colLast">
<div class="block">The value 2PI, i.e.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E()">FloatUtil</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#abs(float)">abs</a></span>&#8203;(float&nbsp;a)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#acos(float)">acos</a></span>&#8203;(float&nbsp;a)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#asin(float)">asin</a></span>&#8203;(float&nbsp;a)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#atan(float)">atan</a></span>&#8203;(float&nbsp;a)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#atan2(float,float)">atan2</a></span>&#8203;(float&nbsp;y,
     float&nbsp;x)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#compare(float,float)">compare</a></span>&#8203;(float&nbsp;a,
       float&nbsp;b)</code></th>
<td class="colLast">
<div class="block">Return true if both values are equal w/o regarding an epsilon.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#compare(float,float,float)">compare</a></span>&#8203;(float&nbsp;a,
       float&nbsp;b,
       float&nbsp;epsilon)</code></th>
<td class="colLast">
<div class="block">Return true if both values are equal, i.e.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#copyMatrixColumn(float%5B%5D,int,int,float%5B%5D,int)">copyMatrixColumn</a></span>&#8203;(float[]&nbsp;m_in,
                int&nbsp;m_in_off,
                int&nbsp;column,
                float[]&nbsp;v_out,
                int&nbsp;v_out_off)</code></th>
<td class="colLast">
<div class="block">Copy the named column of the given column-major matrix to v_out.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#copyMatrixRow(float%5B%5D,int,int,float%5B%5D,int)">copyMatrixRow</a></span>&#8203;(float[]&nbsp;m_in,
             int&nbsp;m_in_off,
             int&nbsp;row,
             float[]&nbsp;v_out,
             int&nbsp;v_out_off)</code></th>
<td class="colLast">
<div class="block">Copy the named row of the given column-major matrix to v_out.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#cos(float)">cos</a></span>&#8203;(float&nbsp;a)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMachineEpsilon()">getMachineEpsilon</a></span>()</code></th>
<td class="colLast">
<div class="block">Return computed machine Epsilon value.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getOrthoWinZ(float,float,float)">getOrthoWinZ</a></span>&#8203;(float&nbsp;orthoZ,
            float&nbsp;zNear,
            float&nbsp;zFar)</code></th>
<td class="colLast">
<div class="block">Returns orthogonal distance
 (1f/zNear-1f/orthoDist)/(1f/zNear-1f/zFar);</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getZBufferEpsilon(int,float,float)">getZBufferEpsilon</a></span>&#8203;(int&nbsp;zBits,
                 float&nbsp;z,
                 float&nbsp;zNear)</code></th>
<td class="colLast">
<div class="block">Returns resolution of Z buffer of given parameter,
 see <a href="http://www.sjbaker.org/steve/omniv/love_your_z_buffer.html">Love Your Z-Buffer</a>.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getZBufferValue(int,float,float,float)">getZBufferValue</a></span>&#8203;(int&nbsp;zBits,
               float&nbsp;z,
               float&nbsp;zNear,
               float&nbsp;zFar)</code></th>
<td class="colLast">
<div class="block">Returns Z buffer value of given parameter,
 see <a href="http://www.sjbaker.org/steve/omniv/love_your_z_buffer.html">Love Your Z-Buffer</a>.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#invertMatrix(float%5B%5D,float%5B%5D)">invertMatrix</a></span>&#8203;(float[]&nbsp;msrc,
            float[]&nbsp;mres)</code></th>
<td class="colLast">
<div class="block">Invert the given matrix.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#invertMatrix(float%5B%5D,int,float%5B%5D,int)">invertMatrix</a></span>&#8203;(float[]&nbsp;msrc,
            int&nbsp;msrc_offset,
            float[]&nbsp;mres,
            int&nbsp;mres_offset)</code></th>
<td class="colLast">
<div class="block">Invert the given matrix.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isEqual(float,float)">isEqual</a></span>&#8203;(float&nbsp;a,
       float&nbsp;b)</code></th>
<td class="colLast">
<div class="block">Return true if both values are equal w/o regarding an epsilon.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isEqual(float,float,float)">isEqual</a></span>&#8203;(float&nbsp;a,
       float&nbsp;b,
       float&nbsp;epsilon)</code></th>
<td class="colLast">
<div class="block">Return true if both values are equal, i.e.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isZero(float,float)">isZero</a></span>&#8203;(float&nbsp;a,
      float&nbsp;epsilon)</code></th>
<td class="colLast">
<div class="block">Return true if value is zero, i.e.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeFrustum(float%5B%5D,int,boolean,float,float,float,float,float,float)">makeFrustum</a></span>&#8203;(float[]&nbsp;m,
           int&nbsp;m_offset,
           boolean&nbsp;initM,
           float&nbsp;left,
           float&nbsp;right,
           float&nbsp;bottom,
           float&nbsp;top,
           float&nbsp;zNear,
           float&nbsp;zFar)</code></th>
<td class="colLast">
<div class="block">Make given matrix the frustum matrix based on given parameters.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeIdentity(float%5B%5D)">makeIdentity</a></span>&#8203;(float[]&nbsp;m)</code></th>
<td class="colLast">
<div class="block">Make matrix an identity matrix</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeIdentity(float%5B%5D,int)">makeIdentity</a></span>&#8203;(float[]&nbsp;m,
            int&nbsp;m_offset)</code></th>
<td class="colLast">
<div class="block">Make matrix an identity matrix</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeLookAt(float%5B%5D,int,float%5B%5D,int,float%5B%5D,int,float%5B%5D,int,float%5B%5D)">makeLookAt</a></span>&#8203;(float[]&nbsp;m,
          int&nbsp;m_offset,
          float[]&nbsp;eye,
          int&nbsp;eye_offset,
          float[]&nbsp;center,
          int&nbsp;center_offset,
          float[]&nbsp;up,
          int&nbsp;up_offset,
          float[]&nbsp;mat4Tmp)</code></th>
<td class="colLast">
<div class="block">Make given matrix the <i>look-at</i> matrix based on given parameters.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeOrtho(float%5B%5D,int,boolean,float,float,float,float,float,float)">makeOrtho</a></span>&#8203;(float[]&nbsp;m,
         int&nbsp;m_offset,
         boolean&nbsp;initM,
         float&nbsp;left,
         float&nbsp;right,
         float&nbsp;bottom,
         float&nbsp;top,
         float&nbsp;zNear,
         float&nbsp;zFar)</code></th>
<td class="colLast">
<div class="block">Make given matrix the orthogonal matrix based on given parameters.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makePerspective(float%5B%5D,int,boolean,float,float,float,float)">makePerspective</a></span>&#8203;(float[]&nbsp;m,
               int&nbsp;m_off,
               boolean&nbsp;initM,
               float&nbsp;fovy_rad,
               float&nbsp;aspect,
               float&nbsp;zNear,
               float&nbsp;zFar)</code></th>
<td class="colLast">
<div class="block">Make given matrix the perspective <a href="#makeFrustum(float%5B%5D,int,boolean,float,float,float,float,float,float)"><code>frustum</code></a>
 matrix based on given parameters.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makePerspective(float%5B%5D,int,boolean,com.jogamp.opengl.math.FovHVHalves,float,float)">makePerspective</a></span>&#8203;(float[]&nbsp;m,
               int&nbsp;m_offset,
               boolean&nbsp;initM,
               <a href="FovHVHalves.html" title="class in com.jogamp.opengl.math">FovHVHalves</a>&nbsp;fovhv,
               float&nbsp;zNear,
               float&nbsp;zFar)</code></th>
<td class="colLast">
<div class="block">Make given matrix the perspective <a href="#makeFrustum(float%5B%5D,int,boolean,float,float,float,float,float,float)"><code>frustum</code></a>
 matrix based on given parameters.</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makePick(float%5B%5D,int,float,float,float,float,int%5B%5D,int,float%5B%5D)">makePick</a></span>&#8203;(float[]&nbsp;m,
        int&nbsp;m_offset,
        float&nbsp;x,
        float&nbsp;y,
        float&nbsp;deltaX,
        float&nbsp;deltaY,
        int[]&nbsp;viewport,
        int&nbsp;viewport_offset,
        float[]&nbsp;mat4Tmp)</code></th>
<td class="colLast">
<div class="block">Make given matrix the <i>pick</i> matrix based on given parameters.</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeRotationAxis(float%5B%5D,int,float,float,float,float,float%5B%5D)">makeRotationAxis</a></span>&#8203;(float[]&nbsp;m,
                int&nbsp;m_offset,
                float&nbsp;angrad,
                float&nbsp;x,
                float&nbsp;y,
                float&nbsp;z,
                float[]&nbsp;tmpVec3f)</code></th>
<td class="colLast">
<div class="block">Make a rotation matrix from the given axis and angle in radians.</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeRotationEuler(float%5B%5D,int,float,float,float)">makeRotationEuler</a></span>&#8203;(float[]&nbsp;m,
                 int&nbsp;m_offset,
                 float&nbsp;bankX,
                 float&nbsp;headingY,
                 float&nbsp;attitudeZ)</code></th>
<td class="colLast">
<div class="block">Make a concatenated rotation matrix in column-major order from the given Euler rotation angles in radians.</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeScale(float%5B%5D,boolean,float,float,float)">makeScale</a></span>&#8203;(float[]&nbsp;m,
         boolean&nbsp;initM,
         float&nbsp;sx,
         float&nbsp;sy,
         float&nbsp;sz)</code></th>
<td class="colLast">
<div class="block">Make a scale matrix in column-major order from the given axis factors</div>
</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeScale(float%5B%5D,int,boolean,float,float,float)">makeScale</a></span>&#8203;(float[]&nbsp;m,
         int&nbsp;m_offset,
         boolean&nbsp;initM,
         float&nbsp;sx,
         float&nbsp;sy,
         float&nbsp;sz)</code></th>
<td class="colLast">
<div class="block">Make a scale matrix in column-major order from the given axis factors</div>
</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeTranslation(float%5B%5D,boolean,float,float,float)">makeTranslation</a></span>&#8203;(float[]&nbsp;m,
               boolean&nbsp;initM,
               float&nbsp;tx,
               float&nbsp;ty,
               float&nbsp;tz)</code></th>
<td class="colLast">
<div class="block">Make a translation matrix in column-major order from the given axis deltas</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeTranslation(float%5B%5D,int,boolean,float,float,float)">makeTranslation</a></span>&#8203;(float[]&nbsp;m,
               int&nbsp;m_offset,
               boolean&nbsp;initM,
               float&nbsp;tx,
               float&nbsp;ty,
               float&nbsp;tz)</code></th>
<td class="colLast">
<div class="block">Make a translation matrix in column-major order from the given axis deltas</div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mapObjToWinCoords(float,float,float,float%5B%5D,int%5B%5D,int,float%5B%5D,int,float%5B%5D,float%5B%5D)">mapObjToWinCoords</a></span>&#8203;(float&nbsp;objx,
                 float&nbsp;objy,
                 float&nbsp;objz,
                 float[]&nbsp;mat4PMv,
                 int[]&nbsp;viewport,
                 int&nbsp;viewport_offset,
                 float[]&nbsp;win_pos,
                 int&nbsp;win_pos_offset,
                 float[]&nbsp;vec4Tmp1,
                 float[]&nbsp;vec4Tmp2)</code></th>
<td class="colLast">
<div class="block">Map object coordinates to window coordinates.</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mapObjToWinCoords(float,float,float,float%5B%5D,int,float%5B%5D,int,int%5B%5D,int,float%5B%5D,int,float%5B%5D,float%5B%5D)">mapObjToWinCoords</a></span>&#8203;(float&nbsp;objx,
                 float&nbsp;objy,
                 float&nbsp;objz,
                 float[]&nbsp;modelMatrix,
                 int&nbsp;modelMatrix_offset,
                 float[]&nbsp;projMatrix,
                 int&nbsp;projMatrix_offset,
                 int[]&nbsp;viewport,
                 int&nbsp;viewport_offset,
                 float[]&nbsp;win_pos,
                 int&nbsp;win_pos_offset,
                 float[]&nbsp;vec4Tmp1,
                 float[]&nbsp;vec4Tmp2)</code></th>
<td class="colLast">
<div class="block">Map object coordinates to window coordinates.</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mapWinToObjCoords(float,float,float,float%5B%5D,int%5B%5D,int,float%5B%5D,int,float%5B%5D,float%5B%5D)">mapWinToObjCoords</a></span>&#8203;(float&nbsp;winx,
                 float&nbsp;winy,
                 float&nbsp;winz,
                 float[]&nbsp;mat4PMvI,
                 int[]&nbsp;viewport,
                 int&nbsp;viewport_offset,
                 float[]&nbsp;obj_pos,
                 int&nbsp;obj_pos_offset,
                 float[]&nbsp;vec4Tmp1,
                 float[]&nbsp;vec4Tmp2)</code></th>
<td class="colLast">
<div class="block">Map window coordinates to object coordinates.</div>
</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mapWinToObjCoords(float,float,float,float%5B%5D,int,float%5B%5D,int,int%5B%5D,int,float%5B%5D,int,float%5B%5D,float%5B%5D)">mapWinToObjCoords</a></span>&#8203;(float&nbsp;winx,
                 float&nbsp;winy,
                 float&nbsp;winz,
                 float[]&nbsp;modelMatrix,
                 int&nbsp;modelMatrix_offset,
                 float[]&nbsp;projMatrix,
                 int&nbsp;projMatrix_offset,
                 int[]&nbsp;viewport,
                 int&nbsp;viewport_offset,
                 float[]&nbsp;obj_pos,
                 int&nbsp;obj_pos_offset,
                 float[]&nbsp;mat4Tmp1,
                 float[]&nbsp;mat4Tmp2)</code></th>
<td class="colLast">
<div class="block">Map window coordinates to object coordinates.</div>
</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mapWinToObjCoords(float,float,float,float,float%5B%5D,int%5B%5D,int,float%5B%5D,int,float%5B%5D,int,float%5B%5D,float%5B%5D)">mapWinToObjCoords</a></span>&#8203;(float&nbsp;winx,
                 float&nbsp;winy,
                 float&nbsp;winz1,
                 float&nbsp;winz2,
                 float[]&nbsp;mat4PMvI,
                 int[]&nbsp;viewport,
                 int&nbsp;viewport_offset,
                 float[]&nbsp;obj1_pos,
                 int&nbsp;obj1_pos_offset,
                 float[]&nbsp;obj2_pos,
                 int&nbsp;obj2_pos_offset,
                 float[]&nbsp;vec4Tmp1,
                 float[]&nbsp;vec4Tmp2)</code></th>
<td class="colLast">
<div class="block">Map two window coordinates to two object coordinates,
 distinguished by their z component.</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mapWinToObjCoords(float,float,float,float,float%5B%5D,int,float%5B%5D,int,int%5B%5D,int,float,float,float%5B%5D,int,float%5B%5D,float%5B%5D)">mapWinToObjCoords</a></span>&#8203;(float&nbsp;winx,
                 float&nbsp;winy,
                 float&nbsp;winz,
                 float&nbsp;clipw,
                 float[]&nbsp;modelMatrix,
                 int&nbsp;modelMatrix_offset,
                 float[]&nbsp;projMatrix,
                 int&nbsp;projMatrix_offset,
                 int[]&nbsp;viewport,
                 int&nbsp;viewport_offset,
                 float&nbsp;near,
                 float&nbsp;far,
                 float[]&nbsp;obj_pos,
                 int&nbsp;obj_pos_offset,
                 float[]&nbsp;mat4Tmp1,
                 float[]&nbsp;mat4Tmp2)</code></th>
<td class="colLast">
<div class="block">Map window coordinates to object coordinates.</div>
</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mapWinToRay(float,float,float,float,float%5B%5D,int,float%5B%5D,int,int%5B%5D,int,com.jogamp.opengl.math.Ray,float%5B%5D,float%5B%5D,float%5B%5D)">mapWinToRay</a></span>&#8203;(float&nbsp;winx,
           float&nbsp;winy,
           float&nbsp;winz0,
           float&nbsp;winz1,
           float[]&nbsp;modelMatrix,
           int&nbsp;modelMatrix_offset,
           float[]&nbsp;projMatrix,
           int&nbsp;projMatrix_offset,
           int[]&nbsp;viewport,
           int&nbsp;viewport_offset,
           <a href="Ray.html" title="class in com.jogamp.opengl.math">Ray</a>&nbsp;ray,
           float[]&nbsp;mat4Tmp1,
           float[]&nbsp;mat4Tmp2,
           float[]&nbsp;vec4Tmp2)</code></th>
<td class="colLast">
<div class="block">Map two window coordinates w/ shared X/Y and distinctive Z
 to a <a href="Ray.html" title="class in com.jogamp.opengl.math"><code>Ray</code></a>.</div>
</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#matrixDeterminant(float%5B%5D)">matrixDeterminant</a></span>&#8203;(float[]&nbsp;m)</code></th>
<td class="colLast">
<div class="block">Returns the determinant of the given matrix</div>
</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#matrixDeterminant(float%5B%5D,int)">matrixDeterminant</a></span>&#8203;(float[]&nbsp;m,
                 int&nbsp;m_offset)</code></th>
<td class="colLast">
<div class="block">Returns the determinant of the given matrix</div>
</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#matrixRowToString(java.lang.StringBuilder,java.lang.String,float%5B%5D,int,int,int,boolean,int)">matrixRowToString</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
                 <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
                 float[]&nbsp;a,
                 int&nbsp;aOffset,
                 int&nbsp;rows,
                 int&nbsp;columns,
                 boolean&nbsp;rowMajorOrder,
                 int&nbsp;row)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#matrixRowToString(java.lang.StringBuilder,java.lang.String,java.nio.FloatBuffer,int,int,int,boolean,int)">matrixRowToString</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
                 <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
                 <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
                 int&nbsp;aOffset,
                 int&nbsp;rows,
                 int&nbsp;columns,
                 boolean&nbsp;rowMajorOrder,
                 int&nbsp;row)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#matrixToString(java.lang.StringBuilder,java.lang.String,java.lang.String,float%5B%5D,int,float%5B%5D,int,int,int,boolean)">matrixToString</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;rowPrefix,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
              float[]&nbsp;a,
              int&nbsp;aOffset,
              float[]&nbsp;b,
              int&nbsp;bOffset,
              int&nbsp;rows,
              int&nbsp;columns,
              boolean&nbsp;rowMajorOrder)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#matrixToString(java.lang.StringBuilder,java.lang.String,java.lang.String,float%5B%5D,int,int,int,boolean)">matrixToString</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;rowPrefix,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
              float[]&nbsp;a,
              int&nbsp;aOffset,
              int&nbsp;rows,
              int&nbsp;columns,
              boolean&nbsp;rowMajorOrder)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#matrixToString(java.lang.StringBuilder,java.lang.String,java.lang.String,java.nio.FloatBuffer,int,int,int,boolean)">matrixToString</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;rowPrefix,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
              int&nbsp;aOffset,
              int&nbsp;rows,
              int&nbsp;columns,
              boolean&nbsp;rowMajorOrder)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#matrixToString(java.lang.StringBuilder,java.lang.String,java.lang.String,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,int,int,boolean)">matrixToString</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;rowPrefix,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
              int&nbsp;aOffset,
              <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;b,
              int&nbsp;bOffset,
              int&nbsp;rows,
              int&nbsp;columns,
              boolean&nbsp;rowMajorOrder)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multMatrix(float%5B%5D,float%5B%5D)">multMatrix</a></span>&#8203;(float[]&nbsp;a,
          float[]&nbsp;b)</code></th>
<td class="colLast">
<div class="block">Multiply matrix: [a] = [a] x [b]</div>
</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multMatrix(float%5B%5D,float%5B%5D,float%5B%5D)">multMatrix</a></span>&#8203;(float[]&nbsp;a,
          float[]&nbsp;b,
          float[]&nbsp;d)</code></th>
<td class="colLast">
<div class="block">Multiply matrix: [d] = [a] x [b]</div>
</td>
</tr>
<tr id="i50" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multMatrix(float%5B%5D,int,float%5B%5D,int)">multMatrix</a></span>&#8203;(float[]&nbsp;a,
          int&nbsp;a_off,
          float[]&nbsp;b,
          int&nbsp;b_off)</code></th>
<td class="colLast">
<div class="block">Multiply matrix: [a] = [a] x [b]</div>
</td>
</tr>
<tr id="i51" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multMatrix(float%5B%5D,int,float%5B%5D,int,float%5B%5D,int)">multMatrix</a></span>&#8203;(float[]&nbsp;a,
          int&nbsp;a_off,
          float[]&nbsp;b,
          int&nbsp;b_off,
          float[]&nbsp;d,
          int&nbsp;d_off)</code></th>
<td class="colLast">
<div class="block">Multiply matrix: [d] = [a] x [b]</div>
</td>
</tr>
<tr id="i52" class="altColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multMatrix(java.nio.FloatBuffer,java.nio.FloatBuffer)">multMatrix</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
          <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;b)</code></th>
<td class="colLast">
<div class="block">Multiply matrix: [a] = [a] x [b]</div>
</td>
</tr>
<tr id="i53" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multMatrix(java.nio.FloatBuffer,java.nio.FloatBuffer,float%5B%5D)">multMatrix</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
          <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;b,
          float[]&nbsp;d)</code></th>
<td class="colLast">
<div class="block">Multiply matrix: [d] = [a] x [b]</div>
</td>
</tr>
<tr id="i54" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multMatrixVec(float%5B%5D,float%5B%5D,float%5B%5D)">multMatrixVec</a></span>&#8203;(float[]&nbsp;m_in,
             float[]&nbsp;v_in,
             float[]&nbsp;v_out)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i55" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multMatrixVec(float%5B%5D,int,float%5B%5D,int,float%5B%5D,int)">multMatrixVec</a></span>&#8203;(float[]&nbsp;m_in,
             int&nbsp;m_in_off,
             float[]&nbsp;v_in,
             int&nbsp;v_in_off,
             float[]&nbsp;v_out,
             int&nbsp;v_out_off)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i56" class="altColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#multMatrixVec(java.nio.FloatBuffer,float%5B%5D,float%5B%5D)">multMatrixVec</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;m_in,
             float[]&nbsp;v_in,
             float[]&nbsp;v_out)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i57" class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#pow(float,float)">pow</a></span>&#8203;(float&nbsp;a,
   float&nbsp;b)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i58" class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sin(float)">sin</a></span>&#8203;(float&nbsp;a)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i59" class="rowColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sqrt(float)">sqrt</a></span>&#8203;(float&nbsp;a)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i60" class="altColor">
<td class="colFirst"><code>static float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#tan(float)">tan</a></span>&#8203;(float&nbsp;a)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i61" class="rowColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#transposeMatrix(float%5B%5D,float%5B%5D)">transposeMatrix</a></span>&#8203;(float[]&nbsp;msrc,
               float[]&nbsp;mres)</code></th>
<td class="colLast">
<div class="block">Transpose the given matrix.</div>
</td>
</tr>
<tr id="i62" class="altColor">
<td class="colFirst"><code>static float[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#transposeMatrix(float%5B%5D,int,float%5B%5D,int)">transposeMatrix</a></span>&#8203;(float[]&nbsp;msrc,
               int&nbsp;msrc_offset,
               float[]&nbsp;mres,
               int&nbsp;mres_offset)</code></th>
<td class="colLast">
<div class="block">Transpose the given matrix.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="DEBUG">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DEBUG</h4>
<pre>public static final&nbsp;boolean DEBUG</pre>
</li>
</ul>
<a id="E">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>E</h4>
<pre>public static final&nbsp;float E</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.math.FloatUtil.E">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="PI">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PI</h4>
<pre>public static final&nbsp;float PI</pre>
<div class="block">The value PI, i.e. 180 degrees in radians.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.math.FloatUtil.PI">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TWO_PI">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TWO_PI</h4>
<pre>public static final&nbsp;float TWO_PI</pre>
<div class="block">The value 2PI, i.e. 360 degrees in radians.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.math.FloatUtil.TWO_PI">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="HALF_PI">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>HALF_PI</h4>
<pre>public static final&nbsp;float HALF_PI</pre>
<div class="block">The value PI/2, i.e. 90 degrees in radians.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.math.FloatUtil.HALF_PI">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="QUARTER_PI">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>QUARTER_PI</h4>
<pre>public static final&nbsp;float QUARTER_PI</pre>
<div class="block">The value PI/4, i.e. 45 degrees in radians.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.math.FloatUtil.QUARTER_PI">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="SQUARED_PI">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>SQUARED_PI</h4>
<pre>public static final&nbsp;float SQUARED_PI</pre>
<div class="block">The value PI^2.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.math.FloatUtil.SQUARED_PI">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="EPSILON">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>EPSILON</h4>
<pre>public static final&nbsp;float EPSILON</pre>
<div class="block">Epsilon for floating point 1.1920928955078125E-7f, as once computed via <a href="#getMachineEpsilon()"><code>getMachineEpsilon()</code></a> on an AMD-64 CPU.
 <p>
 Definition of machine epsilon guarantees that:
 <pre>
        1.0f + EPSILON != 1.0f
 </pre>
 In other words: <i>machEps</i> is the maximum relative error of the chosen rounding procedure.
 </p>
 <p>
 A number can be considered zero if it is in the range (or in the set):
 <pre>
    <b>MaybeZeroSet</b> e ]-<i>machEps</i> .. <i>machEps</i>[  <i>(exclusive)</i>
 </pre>
 While comparing floating point values, <i>machEps</i> allows to clip the relative error:
 <pre>
    boolean isZero    = afloat < EPSILON;
    boolean isNotZero = afloat >= EPSILON;

    boolean isEqual    = abs(bfloat - afloat) < EPSILON;
    boolean isNotEqual = abs(bfloat - afloat) >= EPSILON;
 </pre>
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isEqual(float,float,float)"><code>isEqual(float, float, float)</code></a>, 
<a href="#isZero(float,float)"><code>isZero(float, float)</code></a>, 
<a href="../../../../constant-values.html#com.jogamp.opengl.math.FloatUtil.EPSILON">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="INV_DEVIANCE">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>INV_DEVIANCE</h4>
<pre>public static final&nbsp;float INV_DEVIANCE</pre>
<div class="block">Inversion Epsilon, used with equals method to determine if two inverted matrices are close enough to be considered equal.
 <p>
 Using 9.999999747378752E-6f, which is ~100 times <a href="#EPSILON"><code>EPSILON</code></a>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.math.FloatUtil.INV_DEVIANCE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>FloatUtil</h4>
<pre>public&nbsp;FloatUtil()</pre>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="makeIdentity(float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeIdentity</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeIdentity&#8203;(float[]&nbsp;m,
                                   int&nbsp;m_offset)</pre>
<div class="block">Make matrix an identity matrix</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
</dl>
</li>
</ul>
<a id="makeIdentity(float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeIdentity</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeIdentity&#8203;(float[]&nbsp;m)</pre>
<div class="block">Make matrix an identity matrix</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
</dl>
</li>
</ul>
<a id="makeTranslation(float[],int,boolean,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeTranslation</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeTranslation&#8203;(float[]&nbsp;m,
                                      int&nbsp;m_offset,
                                      boolean&nbsp;initM,
                                      float&nbsp;tx,
                                      float&nbsp;ty,
                                      float&nbsp;tz)</pre>
<div class="block">Make a translation matrix in column-major order from the given axis deltas
 <pre>
      Translation matrix (Column Order):
      1 0 0 0
      0 1 0 0
      0 0 1 0
      x y z 1
 </pre>
 <p>
 All matrix fields are only set if <code>initM</code> is <code>true</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>initM</code> - if true, given matrix will be initialized w/ identity matrix,
              otherwise only the diagonal and last-row is set.
              The latter can be utilized to share a once <a href="#makeIdentity(float%5B%5D,int)"><code>identity set</code></a> matrix
              for <a href="#makeScale(float%5B%5D,int,boolean,float,float,float)"><code>scaling</code></a>
              and <a href="#makeTranslation(float%5B%5D,int,boolean,float,float,float)"><code>translation</code></a>,
              while leaving the other fields untouched for performance reasons.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
</dl>
</li>
</ul>
<a id="makeTranslation(float[],boolean,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeTranslation</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeTranslation&#8203;(float[]&nbsp;m,
                                      boolean&nbsp;initM,
                                      float&nbsp;tx,
                                      float&nbsp;ty,
                                      float&nbsp;tz)</pre>
<div class="block">Make a translation matrix in column-major order from the given axis deltas
 <pre>
      Translation matrix (Column Order):
      1 0 0 0
      0 1 0 0
      0 0 1 0
      x y z 1
 </pre>
 <p>
 All matrix fields are only set if <code>initM</code> is <code>true</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>initM</code> - if true, given matrix will be initialized w/ identity matrix,
              otherwise only the diagonal and last-row is set.
              The latter can be utilized to share a once <a href="#makeIdentity(float%5B%5D,int)"><code>identity set</code></a> matrix
              for <a href="#makeScale(float%5B%5D,int,boolean,float,float,float)"><code>scaling</code></a>
              and <a href="#makeTranslation(float%5B%5D,int,boolean,float,float,float)"><code>translation</code></a>,
              while leaving the other fields untouched for performance reasons.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
</dl>
</li>
</ul>
<a id="makeScale(float[],int,boolean,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeScale</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeScale&#8203;(float[]&nbsp;m,
                                int&nbsp;m_offset,
                                boolean&nbsp;initM,
                                float&nbsp;sx,
                                float&nbsp;sy,
                                float&nbsp;sz)</pre>
<div class="block">Make a scale matrix in column-major order from the given axis factors
 <pre>
      Scale matrix (Any Order):
      x 0 0 0
      0 y 0 0
      0 0 z 0
      0 0 0 1
 </pre>
 <p>
 All matrix fields are only set if <code>initM</code> is <code>true</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>initM</code> - if true, given matrix will be initialized w/ identity matrix,
              otherwise only the diagonal and last-row is set.
              The latter can be utilized to share a once <a href="#makeIdentity(float%5B%5D,int)"><code>identity set</code></a> matrix
              for <a href="#makeScale(float%5B%5D,int,boolean,float,float,float)"><code>scaling</code></a>
              and <a href="#makeTranslation(float%5B%5D,int,boolean,float,float,float)"><code>translation</code></a>,
              while leaving the other fields untouched for performance reasons.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
</dl>
</li>
</ul>
<a id="makeScale(float[],boolean,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeScale</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeScale&#8203;(float[]&nbsp;m,
                                boolean&nbsp;initM,
                                float&nbsp;sx,
                                float&nbsp;sy,
                                float&nbsp;sz)</pre>
<div class="block">Make a scale matrix in column-major order from the given axis factors
 <pre>
      Scale matrix (Any Order):
      x 0 0 0
      0 y 0 0
      0 0 z 0
      0 0 0 1
 </pre>
 <p>
 All matrix fields are only set if <code>initM</code> is <code>true</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>initM</code> - if true, given matrix will be initialized w/ identity matrix,
              otherwise only the diagonal and last-row is set.
              The latter can be utilized to share a once <a href="#makeIdentity(float%5B%5D,int)"><code>identity set</code></a> matrix
              for <a href="#makeScale(float%5B%5D,int,boolean,float,float,float)"><code>scaling</code></a>
              and <a href="#makeTranslation(float%5B%5D,int,boolean,float,float,float)"><code>translation</code></a>,
              while leaving the other fields untouched for performance reasons.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
</dl>
</li>
</ul>
<a id="makeRotationAxis(float[],int,float,float,float,float,float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeRotationAxis</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeRotationAxis&#8203;(float[]&nbsp;m,
                                       int&nbsp;m_offset,
                                       float&nbsp;angrad,
                                       float&nbsp;x,
                                       float&nbsp;y,
                                       float&nbsp;z,
                                       float[]&nbsp;tmpVec3f)</pre>
<div class="block">Make a rotation matrix from the given axis and angle in radians.
 <pre>
        Rotation matrix (Column Order):
        xx(1-c)+c  xy(1-c)+zs xz(1-c)-ys 0
        xy(1-c)-zs yy(1-c)+c  yz(1-c)+xs 0
        xz(1-c)+ys yz(1-c)-xs zz(1-c)+c  0
        0          0          0          1
 </pre>
 <p>
 All matrix fields are set.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="http://web.archive.org/web/20041029003853/http://www.j3d.org/matrix_faq/matrfaq_latest.html#Q38">Matrix-FAQ Q38</a></dd>
</dl>
</li>
</ul>
<a id="makeRotationEuler(float[],int,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeRotationEuler</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeRotationEuler&#8203;(float[]&nbsp;m,
                                        int&nbsp;m_offset,
                                        float&nbsp;bankX,
                                        float&nbsp;headingY,
                                        float&nbsp;attitudeZ)</pre>
<div class="block">Make a concatenated rotation matrix in column-major order from the given Euler rotation angles in radians.
 <p>
 The rotations are applied in the given order:
 <ul>
  <li>y - heading</li>
  <li>z - attitude</li>
  <li>x - bank</li>
 </ul>
 </p>
 <p>
 All matrix fields are set.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>bankX</code> - the Euler pitch angle in radians. (rotation about the X axis)</dd>
<dd><code>headingY</code> - the Euler yaw angle in radians. (rotation about the Y axis)</dd>
<dd><code>attitudeZ</code> - the Euler roll angle in radians. (rotation about the Z axis)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining
 <p>
 Implementation does not use Quaternion and hence is exposed to
 <a href="http://web.archive.org/web/20041029003853/http://www.j3d.org/matrix_faq/matrfaq_latest.html#Q34">Gimbal-Lock</a>
 </p></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="http://web.archive.org/web/20041029003853/http://www.j3d.org/matrix_faq/matrfaq_latest.html#Q36">Matrix-FAQ Q36</a>, 
<a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToMatrix/index.htm">euclideanspace.com-eulerToMatrix</a></dd>
</dl>
</li>
</ul>
<a id="makeOrtho(float[],int,boolean,float,float,float,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeOrtho</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeOrtho&#8203;(float[]&nbsp;m,
                                int&nbsp;m_offset,
                                boolean&nbsp;initM,
                                float&nbsp;left,
                                float&nbsp;right,
                                float&nbsp;bottom,
                                float&nbsp;top,
                                float&nbsp;zNear,
                                float&nbsp;zFar)</pre>
<div class="block">Make given matrix the orthogonal matrix based on given parameters.
 <pre>
      Ortho matrix (Column Order):
      2/dx  0     0    0
      0     2/dy  0    0
      0     0     2/dz 0
      tx    ty    tz   1
 </pre>
 <p>
 All matrix fields are only set if <code>initM</code> is <code>true</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>initM</code> - if true, given matrix will be initialized w/ identity matrix,
              otherwise only the orthogonal fields are set.</dd>
<dd><code>left</code> - </dd>
<dd><code>right</code> - </dd>
<dd><code>bottom</code> - </dd>
<dd><code>top</code> - </dd>
<dd><code>zNear</code> - </dd>
<dd><code>zFar</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
</dl>
</li>
</ul>
<a id="makeFrustum(float[],int,boolean,float,float,float,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeFrustum</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeFrustum&#8203;(float[]&nbsp;m,
                                  int&nbsp;m_offset,
                                  boolean&nbsp;initM,
                                  float&nbsp;left,
                                  float&nbsp;right,
                                  float&nbsp;bottom,
                                  float&nbsp;top,
                                  float&nbsp;zNear,
                                  float&nbsp;zFar)
                           throws <a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Make given matrix the frustum matrix based on given parameters.
 <pre>
      Frustum matrix (Column Order):
      2*zNear/dx   0          0   0
      0            2*zNear/dy 0   0
      A            B          C  -1
      0            0          D   0
 </pre>
 <p>
 All matrix fields are only set if <code>initM</code> is <code>true</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>initM</code> - if true, given matrix will be initialized w/ identity matrix,
              otherwise only the frustum fields are set.</dd>
<dd><code>left</code> - </dd>
<dd><code>right</code> - </dd>
<dd><code>bottom</code> - </dd>
<dd><code>top</code> - </dd>
<dd><code>zNear</code> - </dd>
<dd><code>zFar</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if <code>zNear &lt;= 0</code> or <code>zFar &lt;= zNear</code>
                     or <code>left == right</code>, or <code>bottom == top</code>.</dd>
</dl>
</li>
</ul>
<a id="makePerspective(float[],int,boolean,float,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makePerspective</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makePerspective&#8203;(float[]&nbsp;m,
                                      int&nbsp;m_off,
                                      boolean&nbsp;initM,
                                      float&nbsp;fovy_rad,
                                      float&nbsp;aspect,
                                      float&nbsp;zNear,
                                      float&nbsp;zFar)
                               throws <a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Make given matrix the perspective <a href="#makeFrustum(float%5B%5D,int,boolean,float,float,float,float,float,float)"><code>frustum</code></a>
 matrix based on given parameters.
 <p>
 All matrix fields are only set if <code>initM</code> is <code>true</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>initM</code> - if true, given matrix will be initialized w/ identity matrix,
              otherwise only the frustum fields are set.</dd>
<dd><code>fovy_rad</code> - angle in radians</dd>
<dd><code>aspect</code> - aspect ratio width / height</dd>
<dd><code>zNear</code> - </dd>
<dd><code>zFar</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if <code>zNear &lt;= 0</code> or <code>zFar &lt;= zNear</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#makeFrustum(float%5B%5D,int,boolean,float,float,float,float,float,float)"><code>makeFrustum(float[], int, boolean, float, float, float, float, float, float)</code></a></dd>
</dl>
</li>
</ul>
<a id="makePerspective(float[],int,boolean,com.jogamp.opengl.math.FovHVHalves,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makePerspective</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makePerspective&#8203;(float[]&nbsp;m,
                                      int&nbsp;m_offset,
                                      boolean&nbsp;initM,
                                      <a href="FovHVHalves.html" title="class in com.jogamp.opengl.math">FovHVHalves</a>&nbsp;fovhv,
                                      float&nbsp;zNear,
                                      float&nbsp;zFar)
                               throws <a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Make given matrix the perspective <a href="#makeFrustum(float%5B%5D,int,boolean,float,float,float,float,float,float)"><code>frustum</code></a>
 matrix based on given parameters.
 <p>
 All matrix fields are only set if <code>initM</code> is <code>true</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>initM</code> - if true, given matrix will be initialized w/ identity matrix,
              otherwise only the frustum fields are set.</dd>
<dd><code>fovhv</code> - <a href="FovHVHalves.html" title="class in com.jogamp.opengl.math"><code>FovHVHalves</code></a> field of view in both directions, may not be centered, either in radians or tangent</dd>
<dd><code>zNear</code> - </dd>
<dd><code>zFar</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix for chaining</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if <code>zNear &lt;= 0</code> or <code>zFar &lt;= zNear</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#makeFrustum(float%5B%5D,int,boolean,float,float,float,float,float,float)"><code>makeFrustum(float[], int, boolean, float, float, float, float, float, float)</code></a>, 
<a href="geom/Frustum.html#updateByFovDesc(float%5B%5D,int,boolean,com.jogamp.opengl.math.geom.Frustum.FovDesc)"><code>Frustum.updateByFovDesc(float[], int, boolean, Frustum.FovDesc)</code></a></dd>
</dl>
</li>
</ul>
<a id="makeLookAt(float[],int,float[],int,float[],int,float[],int,float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeLookAt</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makeLookAt&#8203;(float[]&nbsp;m,
                                 int&nbsp;m_offset,
                                 float[]&nbsp;eye,
                                 int&nbsp;eye_offset,
                                 float[]&nbsp;center,
                                 int&nbsp;center_offset,
                                 float[]&nbsp;up,
                                 int&nbsp;up_offset,
                                 float[]&nbsp;mat4Tmp)</pre>
<div class="block">Make given matrix the <i>look-at</i> matrix based on given parameters.
 <p>
 Consist out of two matrix multiplications:
 <pre>
   <b>R</b> = <b>L</b> x <b>T</b>,
   with <b>L</b> for <i>look-at</i> matrix and
        <b>T</b> for eye translation.

   Result <b>R</b> can be utilized for <i>modelview</i> multiplication, i.e.
          <b>M</b> = <b>M</b> x <b>R</b>,
          with <b>M</b> being the <i>modelview</i> matrix.
 </pre>
 </p>
 <p>
 All matrix fields are set.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order, result only</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>eye</code> - 3 component eye vector</dd>
<dd><code>eye_offset</code> - </dd>
<dd><code>center</code> - 3 component center vector</dd>
<dd><code>center_offset</code> - </dd>
<dd><code>up</code> - 3 component up vector</dd>
<dd><code>up_offset</code> - </dd>
<dd><code>mat4Tmp</code> - temp float[16] storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix <code>m</code> for chaining</dd>
</dl>
</li>
</ul>
<a id="makePick(float[],int,float,float,float,float,int[],int,float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makePick</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;makePick&#8203;(float[]&nbsp;m,
                               int&nbsp;m_offset,
                               float&nbsp;x,
                               float&nbsp;y,
                               float&nbsp;deltaX,
                               float&nbsp;deltaY,
                               int[]&nbsp;viewport,
                               int&nbsp;viewport_offset,
                               float[]&nbsp;mat4Tmp)</pre>
<div class="block">Make given matrix the <i>pick</i> matrix based on given parameters.
 <p>
 Traditional <code>gluPickMatrix</code> implementation.
 </p>
 <p>
 Consist out of two matrix multiplications:
 <pre>
   <b>R</b> = <b>T</b> x <b>S</b>,
   with <b>T</b> for viewport translation matrix and
        <b>S</b> for viewport scale matrix.

   Result <b>R</b> can be utilized for <i>projection</i> multiplication, i.e.
          <b>P</b> = <b>P</b> x <b>R</b>,
          with <b>P</b> being the <i>projection</i> matrix.
 </pre>
 </p>
 <p>
 To effectively use the generated pick matrix for picking,
 call <a href="#makePick(float%5B%5D,int,float,float,float,float,int%5B%5D,int,float%5B%5D)"><code>makePick</code></a>
 and multiply a <a href="#makePerspective(float%5B%5D,int,boolean,float,float,float,float)"><code>custom perspective matrix</code></a>
 by this pick matrix. Then you may load the result onto the perspective matrix stack.
 </p>
 <p>
 All matrix fields are set.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order, result only</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>x</code> - the center x-component of a picking region in window coordinates</dd>
<dd><code>y</code> - the center y-component of a picking region in window coordinates</dd>
<dd><code>deltaX</code> - the width of the picking region in window coordinates.</dd>
<dd><code>deltaY</code> - the height of the picking region in window coordinates.</dd>
<dd><code>viewport</code> - 4 component viewport vector</dd>
<dd><code>viewport_offset</code> - </dd>
<dd><code>mat4Tmp</code> - temp float[16] storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given matrix <code>m</code> for chaining or <code>null</code> if either delta value is <= zero.</dd>
</dl>
</li>
</ul>
<a id="transposeMatrix(float[],int,float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>transposeMatrix</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;transposeMatrix&#8203;(float[]&nbsp;msrc,
                                      int&nbsp;msrc_offset,
                                      float[]&nbsp;mres,
                                      int&nbsp;mres_offset)</pre>
<div class="block">Transpose the given matrix.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msrc</code> - 4x4 matrix in column-major order, the source</dd>
<dd><code>msrc_offset</code> - offset in given array <i>msrc</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>mres</code> - 4x4 matrix in column-major order, the result</dd>
<dd><code>mres_offset</code> - offset in given array <i>mres</i>, i.e. start of the 4x4 matrix</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result matrix <i>mres</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="transposeMatrix(float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>transposeMatrix</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;transposeMatrix&#8203;(float[]&nbsp;msrc,
                                      float[]&nbsp;mres)</pre>
<div class="block">Transpose the given matrix.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msrc</code> - 4x4 matrix in column-major order, the source</dd>
<dd><code>mres</code> - 4x4 matrix in column-major order, the result</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result matrix <i>mres</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="matrixDeterminant(float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>matrixDeterminant</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;matrixDeterminant&#8203;(float[]&nbsp;m,
                                      int&nbsp;m_offset)</pre>
<div class="block">Returns the determinant of the given matrix</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order, the source</dd>
<dd><code>m_offset</code> - offset in given array <i>m</i>, i.e. start of the 4x4 matrix</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the matrix determinant</dd>
</dl>
</li>
</ul>
<a id="matrixDeterminant(float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>matrixDeterminant</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;matrixDeterminant&#8203;(float[]&nbsp;m)</pre>
<div class="block">Returns the determinant of the given matrix</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m</code> - 4x4 matrix in column-major order, the source</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the matrix determinant</dd>
</dl>
</li>
</ul>
<a id="invertMatrix(float[],int,float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>invertMatrix</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;invertMatrix&#8203;(float[]&nbsp;msrc,
                                   int&nbsp;msrc_offset,
                                   float[]&nbsp;mres,
                                   int&nbsp;mres_offset)</pre>
<div class="block">Invert the given matrix.
 <p>
 Returns <code>null</code> if inversion is not possible,
 e.g. matrix is singular due to a bad matrix.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msrc</code> - 4x4 matrix in column-major order, the source</dd>
<dd><code>msrc_offset</code> - offset in given array <i>msrc</i>, i.e. start of the 4x4 matrix</dd>
<dd><code>mres</code> - 4x4 matrix in column-major order, the result - may be <code>msrc</code> (in-place)</dd>
<dd><code>mres_offset</code> - offset in given array <i>mres</i>, i.e. start of the 4x4 matrix - may be <code>msrc_offset</code> (in-place)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result matrix <i>mres</i> for chaining if successful, otherwise <code>null</code>. See above.</dd>
</dl>
</li>
</ul>
<a id="invertMatrix(float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>invertMatrix</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;invertMatrix&#8203;(float[]&nbsp;msrc,
                                   float[]&nbsp;mres)</pre>
<div class="block">Invert the given matrix.
 <p>
 Returns <code>null</code> if inversion is not possible,
 e.g. matrix is singular due to a bad matrix.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msrc</code> - 4x4 matrix in column-major order, the source</dd>
<dd><code>mres</code> - 4x4 matrix in column-major order, the result - may be <code>msrc</code> (in-place)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result matrix <i>mres</i> for chaining if successful, otherwise <code>null</code>. See above.</dd>
</dl>
</li>
</ul>
<a id="mapObjToWinCoords(float,float,float,float[],int,float[],int,int[],int,float[],int,float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mapObjToWinCoords</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;mapObjToWinCoords&#8203;(float&nbsp;objx,
                                        float&nbsp;objy,
                                        float&nbsp;objz,
                                        float[]&nbsp;modelMatrix,
                                        int&nbsp;modelMatrix_offset,
                                        float[]&nbsp;projMatrix,
                                        int&nbsp;projMatrix_offset,
                                        int[]&nbsp;viewport,
                                        int&nbsp;viewport_offset,
                                        float[]&nbsp;win_pos,
                                        int&nbsp;win_pos_offset,
                                        float[]&nbsp;vec4Tmp1,
                                        float[]&nbsp;vec4Tmp2)</pre>
<div class="block">Map object coordinates to window coordinates.
 <p>
 Traditional <code>gluProject</code> implementation.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>objx</code> - </dd>
<dd><code>objy</code> - </dd>
<dd><code>objz</code> - </dd>
<dd><code>modelMatrix</code> - 4x4 modelview matrix</dd>
<dd><code>modelMatrix_offset</code> - </dd>
<dd><code>projMatrix</code> - 4x4 projection matrix</dd>
<dd><code>projMatrix_offset</code> - </dd>
<dd><code>viewport</code> - 4 component viewport vector</dd>
<dd><code>viewport_offset</code> - </dd>
<dd><code>win_pos</code> - 3 component window coordinate, the result</dd>
<dd><code>win_pos_offset</code> - </dd>
<dd><code>vec4Tmp1</code> - 4 component vector for temp storage</dd>
<dd><code>vec4Tmp2</code> - 4 component vector for temp storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if successful, otherwise false (z is 1)</dd>
</dl>
</li>
</ul>
<a id="mapObjToWinCoords(float,float,float,float[],int[],int,float[],int,float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mapObjToWinCoords</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;mapObjToWinCoords&#8203;(float&nbsp;objx,
                                        float&nbsp;objy,
                                        float&nbsp;objz,
                                        float[]&nbsp;mat4PMv,
                                        int[]&nbsp;viewport,
                                        int&nbsp;viewport_offset,
                                        float[]&nbsp;win_pos,
                                        int&nbsp;win_pos_offset,
                                        float[]&nbsp;vec4Tmp1,
                                        float[]&nbsp;vec4Tmp2)</pre>
<div class="block">Map object coordinates to window coordinates.
 <p>
 Traditional <code>gluProject</code> implementation.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>objx</code> - </dd>
<dd><code>objy</code> - </dd>
<dd><code>objz</code> - </dd>
<dd><code>mat4PMv</code> - [projection] x [modelview] matrix, i.e. P x Mv</dd>
<dd><code>viewport</code> - 4 component viewport vector</dd>
<dd><code>viewport_offset</code> - </dd>
<dd><code>win_pos</code> - 3 component window coordinate, the result</dd>
<dd><code>win_pos_offset</code> - </dd>
<dd><code>vec4Tmp1</code> - 4 component vector for temp storage</dd>
<dd><code>vec4Tmp2</code> - 4 component vector for temp storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if successful, otherwise false (z is 1)</dd>
</dl>
</li>
</ul>
<a id="mapWinToObjCoords(float,float,float,float[],int,float[],int,int[],int,float[],int,float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mapWinToObjCoords</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;mapWinToObjCoords&#8203;(float&nbsp;winx,
                                        float&nbsp;winy,
                                        float&nbsp;winz,
                                        float[]&nbsp;modelMatrix,
                                        int&nbsp;modelMatrix_offset,
                                        float[]&nbsp;projMatrix,
                                        int&nbsp;projMatrix_offset,
                                        int[]&nbsp;viewport,
                                        int&nbsp;viewport_offset,
                                        float[]&nbsp;obj_pos,
                                        int&nbsp;obj_pos_offset,
                                        float[]&nbsp;mat4Tmp1,
                                        float[]&nbsp;mat4Tmp2)</pre>
<div class="block">Map window coordinates to object coordinates.
 <p>
 Traditional <code>gluUnProject</code> implementation.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>winx</code> - </dd>
<dd><code>winy</code> - </dd>
<dd><code>winz</code> - </dd>
<dd><code>modelMatrix</code> - 4x4 modelview matrix</dd>
<dd><code>modelMatrix_offset</code> - </dd>
<dd><code>projMatrix</code> - 4x4 projection matrix</dd>
<dd><code>projMatrix_offset</code> - </dd>
<dd><code>viewport</code> - 4 component viewport vector</dd>
<dd><code>viewport_offset</code> - </dd>
<dd><code>obj_pos</code> - 3 component object coordinate, the result</dd>
<dd><code>obj_pos_offset</code> - </dd>
<dd><code>mat4Tmp1</code> - 16 component matrix for temp storage</dd>
<dd><code>mat4Tmp2</code> - 16 component matrix for temp storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if successful, otherwise false (failed to invert matrix, or becomes infinity due to zero z)</dd>
</dl>
</li>
</ul>
<a id="mapWinToObjCoords(float,float,float,float[],int[],int,float[],int,float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mapWinToObjCoords</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;mapWinToObjCoords&#8203;(float&nbsp;winx,
                                        float&nbsp;winy,
                                        float&nbsp;winz,
                                        float[]&nbsp;mat4PMvI,
                                        int[]&nbsp;viewport,
                                        int&nbsp;viewport_offset,
                                        float[]&nbsp;obj_pos,
                                        int&nbsp;obj_pos_offset,
                                        float[]&nbsp;vec4Tmp1,
                                        float[]&nbsp;vec4Tmp2)</pre>
<div class="block">Map window coordinates to object coordinates.
 <p>
 Traditional <code>gluUnProject</code> implementation.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>winx</code> - </dd>
<dd><code>winy</code> - </dd>
<dd><code>winz</code> - </dd>
<dd><code>mat4PMvI</code> - inverse [projection] x [modelview] matrix, i.e. Inv(P x Mv)</dd>
<dd><code>viewport</code> - 4 component viewport vector</dd>
<dd><code>viewport_offset</code> - </dd>
<dd><code>obj_pos</code> - 3 component object coordinate, the result</dd>
<dd><code>obj_pos_offset</code> - </dd>
<dd><code>vec4Tmp1</code> - 4 component vector for temp storage</dd>
<dd><code>vec4Tmp2</code> - 4 component vector for temp storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if successful, otherwise false (failed to invert matrix, or becomes infinity due to zero z)</dd>
</dl>
</li>
</ul>
<a id="mapWinToObjCoords(float,float,float,float,float[],int[],int,float[],int,float[],int,float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mapWinToObjCoords</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;mapWinToObjCoords&#8203;(float&nbsp;winx,
                                        float&nbsp;winy,
                                        float&nbsp;winz1,
                                        float&nbsp;winz2,
                                        float[]&nbsp;mat4PMvI,
                                        int[]&nbsp;viewport,
                                        int&nbsp;viewport_offset,
                                        float[]&nbsp;obj1_pos,
                                        int&nbsp;obj1_pos_offset,
                                        float[]&nbsp;obj2_pos,
                                        int&nbsp;obj2_pos_offset,
                                        float[]&nbsp;vec4Tmp1,
                                        float[]&nbsp;vec4Tmp2)</pre>
<div class="block">Map two window coordinates to two object coordinates,
 distinguished by their z component.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>winx</code> - </dd>
<dd><code>winy</code> - </dd>
<dd><code>winz1</code> - </dd>
<dd><code>winz2</code> - </dd>
<dd><code>mat4PMvI</code> - inverse [projection] x [modelview] matrix, i.e. Inv(P x Mv)</dd>
<dd><code>viewport</code> - 4 component viewport vector</dd>
<dd><code>viewport_offset</code> - </dd>
<dd><code>obj1_pos</code> - 3 component object coordinate, the result for winz1</dd>
<dd><code>obj1_pos_offset</code> - </dd>
<dd><code>obj2_pos</code> - 3 component object coordinate, the result for winz2</dd>
<dd><code>obj2_pos_offset</code> - </dd>
<dd><code>vec4Tmp1</code> - 4 component vector for temp storage</dd>
<dd><code>vec4Tmp2</code> - 4 component vector for temp storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if successful, otherwise false (failed to invert matrix, or becomes infinity due to zero z)</dd>
</dl>
</li>
</ul>
<a id="mapWinToObjCoords(float,float,float,float,float[],int,float[],int,int[],int,float,float,float[],int,float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mapWinToObjCoords</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;mapWinToObjCoords&#8203;(float&nbsp;winx,
                                        float&nbsp;winy,
                                        float&nbsp;winz,
                                        float&nbsp;clipw,
                                        float[]&nbsp;modelMatrix,
                                        int&nbsp;modelMatrix_offset,
                                        float[]&nbsp;projMatrix,
                                        int&nbsp;projMatrix_offset,
                                        int[]&nbsp;viewport,
                                        int&nbsp;viewport_offset,
                                        float&nbsp;near,
                                        float&nbsp;far,
                                        float[]&nbsp;obj_pos,
                                        int&nbsp;obj_pos_offset,
                                        float[]&nbsp;mat4Tmp1,
                                        float[]&nbsp;mat4Tmp2)</pre>
<div class="block">Map window coordinates to object coordinates.
 <p>
 Traditional <code>gluUnProject4</code> implementation.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>winx</code> - </dd>
<dd><code>winy</code> - </dd>
<dd><code>winz</code> - </dd>
<dd><code>clipw</code> - </dd>
<dd><code>modelMatrix</code> - 4x4 modelview matrix</dd>
<dd><code>modelMatrix_offset</code> - </dd>
<dd><code>projMatrix</code> - 4x4 projection matrix</dd>
<dd><code>projMatrix_offset</code> - </dd>
<dd><code>viewport</code> - 4 component viewport vector</dd>
<dd><code>viewport_offset</code> - </dd>
<dd><code>near</code> - </dd>
<dd><code>far</code> - </dd>
<dd><code>obj_pos</code> - 4 component object coordinate, the result</dd>
<dd><code>obj_pos_offset</code> - </dd>
<dd><code>mat4Tmp1</code> - 16 component matrix for temp storage</dd>
<dd><code>mat4Tmp2</code> - 16 component matrix for temp storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if successful, otherwise false (failed to invert matrix, or becomes infinity due to zero z)</dd>
</dl>
</li>
</ul>
<a id="mapWinToRay(float,float,float,float,float[],int,float[],int,int[],int,com.jogamp.opengl.math.Ray,float[],float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mapWinToRay</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;mapWinToRay&#8203;(float&nbsp;winx,
                                  float&nbsp;winy,
                                  float&nbsp;winz0,
                                  float&nbsp;winz1,
                                  float[]&nbsp;modelMatrix,
                                  int&nbsp;modelMatrix_offset,
                                  float[]&nbsp;projMatrix,
                                  int&nbsp;projMatrix_offset,
                                  int[]&nbsp;viewport,
                                  int&nbsp;viewport_offset,
                                  <a href="Ray.html" title="class in com.jogamp.opengl.math">Ray</a>&nbsp;ray,
                                  float[]&nbsp;mat4Tmp1,
                                  float[]&nbsp;mat4Tmp2,
                                  float[]&nbsp;vec4Tmp2)</pre>
<div class="block">Map two window coordinates w/ shared X/Y and distinctive Z
 to a <a href="Ray.html" title="class in com.jogamp.opengl.math"><code>Ray</code></a>. The resulting <a href="Ray.html" title="class in com.jogamp.opengl.math"><code>Ray</code></a> maybe used for <i>picking</i>
 using a <code>bounding box</code>.
 <p>
 Notes for picking <i>winz0</i> and <i>winz1</i>:
 <ul>
   <li>see <a href="#getZBufferEpsilon(int,float,float)"><code>getZBufferEpsilon(int, float, float)</code></a></li>
   <li>see <a href="#getZBufferValue(int,float,float,float)"><code>getZBufferValue(int, float, float, float)</code></a></li>
   <li>see <a href="#getOrthoWinZ(float,float,float)"><code>getOrthoWinZ(float, float, float)</code></a></li>
 </ul>
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>winx</code> - </dd>
<dd><code>winy</code> - </dd>
<dd><code>winz0</code> - </dd>
<dd><code>winz1</code> - </dd>
<dd><code>modelMatrix</code> - 4x4 modelview matrix</dd>
<dd><code>modelMatrix_offset</code> - </dd>
<dd><code>projMatrix</code> - 4x4 projection matrix</dd>
<dd><code>projMatrix_offset</code> - </dd>
<dd><code>viewport</code> - 4 component viewport vector</dd>
<dd><code>viewport_offset</code> - </dd>
<dd><code>ray</code> - storage for the resulting <a href="Ray.html" title="class in com.jogamp.opengl.math"><code>Ray</code></a></dd>
<dd><code>mat4Tmp1</code> - 16 component matrix for temp storage</dd>
<dd><code>mat4Tmp2</code> - 16 component matrix for temp storage</dd>
<dd><code>vec4Tmp2</code> - 4 component vector for temp storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if successful, otherwise false (failed to invert matrix, or becomes z is infinity)</dd>
</dl>
</li>
</ul>
<a id="multMatrix(float[],int,float[],int,float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multMatrix</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;multMatrix&#8203;(float[]&nbsp;a,
                                 int&nbsp;a_off,
                                 float[]&nbsp;b,
                                 int&nbsp;b_off,
                                 float[]&nbsp;d,
                                 int&nbsp;d_off)</pre>
<div class="block">Multiply matrix: [d] = [a] x [b]</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - 4x4 matrix in column-major order</dd>
<dd><code>b</code> - 4x4 matrix in column-major order</dd>
<dd><code>d</code> - result a*b in column-major order</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result matrix <i>d</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="multMatrix(float[],float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multMatrix</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;multMatrix&#8203;(float[]&nbsp;a,
                                 float[]&nbsp;b,
                                 float[]&nbsp;d)</pre>
<div class="block">Multiply matrix: [d] = [a] x [b]</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - 4x4 matrix in column-major order</dd>
<dd><code>b</code> - 4x4 matrix in column-major order</dd>
<dd><code>d</code> - result a*b in column-major order</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result matrix <i>d</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="multMatrix(float[],int,float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multMatrix</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;multMatrix&#8203;(float[]&nbsp;a,
                                 int&nbsp;a_off,
                                 float[]&nbsp;b,
                                 int&nbsp;b_off)</pre>
<div class="block">Multiply matrix: [a] = [a] x [b]</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>b</code> - 4x4 matrix in column-major order</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result matrix <i>a</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="multMatrix(float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multMatrix</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;multMatrix&#8203;(float[]&nbsp;a,
                                 float[]&nbsp;b)</pre>
<div class="block">Multiply matrix: [a] = [a] x [b]</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>b</code> - 4x4 matrix in column-major order</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result matrix <i>a</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="multMatrix(java.nio.FloatBuffer,java.nio.FloatBuffer,float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multMatrix</h4>
<pre class="methodSignature">public static&nbsp;void&nbsp;multMatrix&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
                              <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;b,
                              float[]&nbsp;d)</pre>
<div class="block">Multiply matrix: [d] = [a] x [b]</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - 4x4 matrix in column-major order</dd>
<dd><code>b</code> - 4x4 matrix in column-major order</dd>
<dd><code>d</code> - result a*b in column-major order</dd>
</dl>
</li>
</ul>
<a id="multMatrix(java.nio.FloatBuffer,java.nio.FloatBuffer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multMatrix</h4>
<pre class="methodSignature">public static&nbsp;void&nbsp;multMatrix&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
                              <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;b)</pre>
<div class="block">Multiply matrix: [a] = [a] x [b]</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - 4x4 matrix in column-major order (also result)</dd>
<dd><code>b</code> - 4x4 matrix in column-major order</dd>
</dl>
</li>
</ul>
<a id="multMatrixVec(float[],int,float[],int,float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multMatrixVec</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;multMatrixVec&#8203;(float[]&nbsp;m_in,
                                    int&nbsp;m_in_off,
                                    float[]&nbsp;v_in,
                                    int&nbsp;v_in_off,
                                    float[]&nbsp;v_out,
                                    int&nbsp;v_out_off)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m_in</code> - 4x4 matrix in column-major order</dd>
<dd><code>m_in_off</code> - </dd>
<dd><code>v_in</code> - 4-component column-vector</dd>
<dd><code>v_out</code> - m_in * v_in</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result vector <i>v_out</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="multMatrixVec(float[],float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multMatrixVec</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;multMatrixVec&#8203;(float[]&nbsp;m_in,
                                    float[]&nbsp;v_in,
                                    float[]&nbsp;v_out)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m_in</code> - 4x4 matrix in column-major order</dd>
<dd><code>m_in_off</code> - </dd>
<dd><code>v_in</code> - 4-component column-vector</dd>
<dd><code>v_out</code> - m_in * v_in</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result vector <i>v_out</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="multMatrixVec(java.nio.FloatBuffer,float[],float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>multMatrixVec</h4>
<pre class="methodSignature">public static&nbsp;void&nbsp;multMatrixVec&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;m_in,
                                 float[]&nbsp;v_in,
                                 float[]&nbsp;v_out)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m_in</code> - 4x4 matrix in column-major order</dd>
<dd><code>v_in</code> - 4-component column-vector</dd>
<dd><code>v_out</code> - m_in * v_in</dd>
</dl>
</li>
</ul>
<a id="copyMatrixColumn(float[],int,int,float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>copyMatrixColumn</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;copyMatrixColumn&#8203;(float[]&nbsp;m_in,
                                       int&nbsp;m_in_off,
                                       int&nbsp;column,
                                       float[]&nbsp;v_out,
                                       int&nbsp;v_out_off)</pre>
<div class="block">Copy the named column of the given column-major matrix to v_out.
 <p>
 v_out may be 3 or 4 components long, hence the 4th row may not be stored.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m_in</code> - input column-major matrix</dd>
<dd><code>m_in_off</code> - offset to input matrix</dd>
<dd><code>column</code> - named column to copy</dd>
<dd><code>v_out</code> - the column-vector storage, at least 3 components long</dd>
<dd><code>v_out_off</code> - offset to storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result vector <i>v_out</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="copyMatrixRow(float[],int,int,float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>copyMatrixRow</h4>
<pre class="methodSignature">public static&nbsp;float[]&nbsp;copyMatrixRow&#8203;(float[]&nbsp;m_in,
                                    int&nbsp;m_in_off,
                                    int&nbsp;row,
                                    float[]&nbsp;v_out,
                                    int&nbsp;v_out_off)</pre>
<div class="block">Copy the named row of the given column-major matrix to v_out.
 <p>
 v_out may be 3 or 4 components long, hence the 4th column may not be stored.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>m_in</code> - input column-major matrix</dd>
<dd><code>m_in_off</code> - offset to input matrix</dd>
<dd><code>row</code> - named row to copy</dd>
<dd><code>v_out</code> - the row-vector storage, at least 3 components long</dd>
<dd><code>v_out_off</code> - offset to storage</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>given result vector <i>v_out</i> for chaining</dd>
</dl>
</li>
</ul>
<a id="matrixRowToString(java.lang.StringBuilder,java.lang.String,java.nio.FloatBuffer,int,int,int,boolean,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>matrixRowToString</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;matrixRowToString&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
                                              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
                                              <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
                                              int&nbsp;aOffset,
                                              int&nbsp;rows,
                                              int&nbsp;columns,
                                              boolean&nbsp;rowMajorOrder,
                                              int&nbsp;row)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sb</code> - optional passed StringBuilder instance to be used</dd>
<dd><code>f</code> - the format string of one floating point, i.e. "%10.5f", see <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Formatter.html?is-external=true" title="class or interface in java.util" class="externalLink"><code>Formatter</code></a></dd>
<dd><code>a</code> - mxn matrix (rows x columns)</dd>
<dd><code>aOffset</code> - offset to <code>a</code>'s current position</dd>
<dd><code>rows</code> - </dd>
<dd><code>columns</code> - </dd>
<dd><code>rowMajorOrder</code> - if true floats are layed out in row-major-order, otherwise column-major-order (OpenGL)</dd>
<dd><code>row</code> - row number to print</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>matrix row string representation</dd>
</dl>
</li>
</ul>
<a id="matrixRowToString(java.lang.StringBuilder,java.lang.String,float[],int,int,int,boolean,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>matrixRowToString</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;matrixRowToString&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
                                              <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
                                              float[]&nbsp;a,
                                              int&nbsp;aOffset,
                                              int&nbsp;rows,
                                              int&nbsp;columns,
                                              boolean&nbsp;rowMajorOrder,
                                              int&nbsp;row)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sb</code> - optional passed StringBuilder instance to be used</dd>
<dd><code>f</code> - the format string of one floating point, i.e. "%10.5f", see <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Formatter.html?is-external=true" title="class or interface in java.util" class="externalLink"><code>Formatter</code></a></dd>
<dd><code>a</code> - mxn matrix (rows x columns)</dd>
<dd><code>aOffset</code> - offset to <code>a</code>'s current position</dd>
<dd><code>rows</code> - </dd>
<dd><code>columns</code> - </dd>
<dd><code>rowMajorOrder</code> - if true floats are layed out in row-major-order, otherwise column-major-order (OpenGL)</dd>
<dd><code>row</code> - row number to print</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>matrix row string representation</dd>
</dl>
</li>
</ul>
<a id="matrixToString(java.lang.StringBuilder,java.lang.String,java.lang.String,java.nio.FloatBuffer,int,int,int,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>matrixToString</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;matrixToString&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;rowPrefix,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
                                           int&nbsp;aOffset,
                                           int&nbsp;rows,
                                           int&nbsp;columns,
                                           boolean&nbsp;rowMajorOrder)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sb</code> - optional passed StringBuilder instance to be used</dd>
<dd><code>rowPrefix</code> - optional prefix for each row</dd>
<dd><code>f</code> - the format string of one floating point, i.e. "%10.5f", see <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Formatter.html?is-external=true" title="class or interface in java.util" class="externalLink"><code>Formatter</code></a></dd>
<dd><code>a</code> - mxn matrix (rows x columns)</dd>
<dd><code>aOffset</code> - offset to <code>a</code>'s current position</dd>
<dd><code>rows</code> - </dd>
<dd><code>columns</code> - </dd>
<dd><code>rowMajorOrder</code> - if true floats are layed out in row-major-order, otherwise column-major-order (OpenGL)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>matrix string representation</dd>
</dl>
</li>
</ul>
<a id="matrixToString(java.lang.StringBuilder,java.lang.String,java.lang.String,float[],int,int,int,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>matrixToString</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;matrixToString&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;rowPrefix,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
                                           float[]&nbsp;a,
                                           int&nbsp;aOffset,
                                           int&nbsp;rows,
                                           int&nbsp;columns,
                                           boolean&nbsp;rowMajorOrder)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sb</code> - optional passed StringBuilder instance to be used</dd>
<dd><code>rowPrefix</code> - optional prefix for each row</dd>
<dd><code>f</code> - the format string of one floating point, i.e. "%10.5f", see <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Formatter.html?is-external=true" title="class or interface in java.util" class="externalLink"><code>Formatter</code></a></dd>
<dd><code>a</code> - mxn matrix (rows x columns)</dd>
<dd><code>aOffset</code> - offset to <code>a</code>'s current position</dd>
<dd><code>rows</code> - </dd>
<dd><code>columns</code> - </dd>
<dd><code>rowMajorOrder</code> - if true floats are layed out in row-major-order, otherwise column-major-order (OpenGL)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>matrix string representation</dd>
</dl>
</li>
</ul>
<a id="matrixToString(java.lang.StringBuilder,java.lang.String,java.lang.String,java.nio.FloatBuffer,int,java.nio.FloatBuffer,int,int,int,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>matrixToString</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;matrixToString&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;rowPrefix,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;a,
                                           int&nbsp;aOffset,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;b,
                                           int&nbsp;bOffset,
                                           int&nbsp;rows,
                                           int&nbsp;columns,
                                           boolean&nbsp;rowMajorOrder)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sb</code> - optional passed StringBuilder instance to be used</dd>
<dd><code>rowPrefix</code> - optional prefix for each row</dd>
<dd><code>f</code> - the format string of one floating point, i.e. "%10.5f", see <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Formatter.html?is-external=true" title="class or interface in java.util" class="externalLink"><code>Formatter</code></a></dd>
<dd><code>a</code> - 4x4 matrix in column major order (OpenGL)</dd>
<dd><code>aOffset</code> - offset to <code>a</code>'s current position</dd>
<dd><code>b</code> - 4x4 matrix in column major order (OpenGL)</dd>
<dd><code>bOffset</code> - offset to <code>a</code>'s current position</dd>
<dd><code>rows</code> - </dd>
<dd><code>columns</code> - </dd>
<dd><code>rowMajorOrder</code> - if true floats are layed out in row-major-order, otherwise column-major-order (OpenGL)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>side by side representation</dd>
</dl>
</li>
</ul>
<a id="matrixToString(java.lang.StringBuilder,java.lang.String,java.lang.String,float[],int,float[],int,int,int,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>matrixToString</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;matrixToString&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;rowPrefix,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;f,
                                           float[]&nbsp;a,
                                           int&nbsp;aOffset,
                                           float[]&nbsp;b,
                                           int&nbsp;bOffset,
                                           int&nbsp;rows,
                                           int&nbsp;columns,
                                           boolean&nbsp;rowMajorOrder)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sb</code> - optional passed StringBuilder instance to be used</dd>
<dd><code>rowPrefix</code> - optional prefix for each row</dd>
<dd><code>f</code> - the format string of one floating point, i.e. "%10.5f", see <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Formatter.html?is-external=true" title="class or interface in java.util" class="externalLink"><code>Formatter</code></a></dd>
<dd><code>a</code> - 4x4 matrix in column major order (OpenGL)</dd>
<dd><code>aOffset</code> - offset to <code>a</code>'s current position</dd>
<dd><code>b</code> - 4x4 matrix in column major order (OpenGL)</dd>
<dd><code>bOffset</code> - offset to <code>a</code>'s current position</dd>
<dd><code>rows</code> - </dd>
<dd><code>columns</code> - </dd>
<dd><code>rowMajorOrder</code> - if true floats are layed out in row-major-order, otherwise column-major-order (OpenGL)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>side by side representation</dd>
</dl>
</li>
</ul>
<a id="getMachineEpsilon()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMachineEpsilon</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;getMachineEpsilon()</pre>
<div class="block">Return computed machine Epsilon value.
 <p>
 The machine Epsilon value is computed once.
 </p>
 <p>
 On a reference machine the result was <a href="#EPSILON"><code>EPSILON</code></a> in 23 iterations.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#EPSILON"><code>EPSILON</code></a></dd>
</dl>
</li>
</ul>
<a id="isEqual(float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isEqual</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isEqual&#8203;(float&nbsp;a,
                              float&nbsp;b)</pre>
<div class="block">Return true if both values are equal w/o regarding an epsilon.
 <p>
 Implementation considers following corner cases:
 <ul>
    <li>NaN == NaN</li>
    <li>+Inf == +Inf</li>
    <li>-Inf == -Inf</li>
 </ul>
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isEqual(float,float,float)"><code>isEqual(float, float, float)</code></a></dd>
</dl>
</li>
</ul>
<a id="isEqual(float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isEqual</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isEqual&#8203;(float&nbsp;a,
                              float&nbsp;b,
                              float&nbsp;epsilon)</pre>
<div class="block">Return true if both values are equal, i.e. their absolute delta < <code>epsilon</code>.
 <p>
 Implementation considers following corner cases:
 <ul>
    <li>NaN == NaN</li>
    <li>+Inf == +Inf</li>
    <li>-Inf == -Inf</li>
 </ul>
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#EPSILON"><code>EPSILON</code></a></dd>
</dl>
</li>
</ul>
<a id="compare(float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compare</h4>
<pre class="methodSignature">public static&nbsp;int&nbsp;compare&#8203;(float&nbsp;a,
                          float&nbsp;b)</pre>
<div class="block">Return true if both values are equal w/o regarding an epsilon.
 <p>
 Implementation considers following corner cases:
 <ul>
    <li>NaN == NaN</li>
    <li>+Inf == +Inf</li>
    <li>-Inf == -Inf</li>
    <li>NaN > 0</li>
    <li>+Inf > -Inf</li>
 </ul>
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#compare(float,float,float)"><code>compare(float, float, float)</code></a></dd>
</dl>
</li>
</ul>
<a id="compare(float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compare</h4>
<pre class="methodSignature">public static&nbsp;int&nbsp;compare&#8203;(float&nbsp;a,
                          float&nbsp;b,
                          float&nbsp;epsilon)</pre>
<div class="block">Return true if both values are equal, i.e. their absolute delta < <code>epsilon</code>.
 <p>
 Implementation considers following corner cases:
 <ul>
    <li>NaN == NaN</li>
    <li>+Inf == +Inf</li>
    <li>-Inf == -Inf</li>
    <li>NaN > 0</li>
    <li>+Inf > -Inf</li>
 </ul>
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#EPSILON"><code>EPSILON</code></a></dd>
</dl>
</li>
</ul>
<a id="isZero(float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isZero</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isZero&#8203;(float&nbsp;a,
                             float&nbsp;epsilon)</pre>
<div class="block">Return true if value is zero, i.e. it's absolute value < <code>epsilon</code>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#EPSILON"><code>EPSILON</code></a></dd>
</dl>
</li>
</ul>
<a id="abs(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>abs</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;abs&#8203;(float&nbsp;a)</pre>
</li>
</ul>
<a id="pow(float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>pow</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;pow&#8203;(float&nbsp;a,
                        float&nbsp;b)</pre>
</li>
</ul>
<a id="sin(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sin</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;sin&#8203;(float&nbsp;a)</pre>
</li>
</ul>
<a id="asin(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>asin</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;asin&#8203;(float&nbsp;a)</pre>
</li>
</ul>
<a id="cos(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>cos</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;cos&#8203;(float&nbsp;a)</pre>
</li>
</ul>
<a id="acos(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>acos</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;acos&#8203;(float&nbsp;a)</pre>
</li>
</ul>
<a id="tan(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tan</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;tan&#8203;(float&nbsp;a)</pre>
</li>
</ul>
<a id="atan(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>atan</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;atan&#8203;(float&nbsp;a)</pre>
</li>
</ul>
<a id="atan2(float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>atan2</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;atan2&#8203;(float&nbsp;y,
                          float&nbsp;x)</pre>
</li>
</ul>
<a id="sqrt(float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sqrt</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;sqrt&#8203;(float&nbsp;a)</pre>
</li>
</ul>
<a id="getZBufferEpsilon(int,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getZBufferEpsilon</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;getZBufferEpsilon&#8203;(int&nbsp;zBits,
                                      float&nbsp;z,
                                      float&nbsp;zNear)</pre>
<div class="block">Returns resolution of Z buffer of given parameter,
 see <a href="http://www.sjbaker.org/steve/omniv/love_your_z_buffer.html">Love Your Z-Buffer</a>.
 <pre>
  return z * z / ( zNear * (1&lt;&lt;zBits) - z )
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>zBits</code> - number of bits of Z precision, i.e. z-buffer depth</dd>
<dd><code>z</code> - distance from the eye to the object</dd>
<dd><code>zNear</code> - distance from eye to near clip plane</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>smallest resolvable Z separation at this range.</dd>
</dl>
</li>
</ul>
<a id="getZBufferValue(int,float,float,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getZBufferValue</h4>
<pre class="methodSignature">public static&nbsp;int&nbsp;getZBufferValue&#8203;(int&nbsp;zBits,
                                  float&nbsp;z,
                                  float&nbsp;zNear,
                                  float&nbsp;zFar)</pre>
<div class="block">Returns Z buffer value of given parameter,
 see <a href="http://www.sjbaker.org/steve/omniv/love_your_z_buffer.html">Love Your Z-Buffer</a>.
 <pre>
  float a = zFar / ( zFar - zNear )
  float b = zFar * zNear / ( zNear - zFar )
  return (int) ( (1&lt;&lt;zBits) * ( a + b / z ) )
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>zBits</code> - number of bits of Z precision, i.e. z-buffer depth</dd>
<dd><code>z</code> - distance from the eye to the object</dd>
<dd><code>zNear</code> - distance from eye to near clip plane</dd>
<dd><code>zFar</code> - distance from eye to far clip plane</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>z buffer value</dd>
</dl>
</li>
</ul>
<a id="getOrthoWinZ(float,float,float)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getOrthoWinZ</h4>
<pre class="methodSignature">public static&nbsp;float&nbsp;getOrthoWinZ&#8203;(float&nbsp;orthoZ,
                                 float&nbsp;zNear,
                                 float&nbsp;zFar)</pre>
<div class="block">Returns orthogonal distance
 (1f/zNear-1f/orthoDist)/(1f/zNear-1f/zFar);</div>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/math/FloatUtil.html" target="_top">Frames</a></li>
<li><a href="FloatUtil.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
