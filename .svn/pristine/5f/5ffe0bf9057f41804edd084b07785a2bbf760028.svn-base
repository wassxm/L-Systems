<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:33 CET 2023 -->
<title>TextureSequence (JOGL API -- 2.4 Specification)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../../script.js"></script>
<script type="text/javascript" src="../../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="TextureSequence (JOGL API -- 2.4 Specification)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6,"i6":6,"i7":6,"i8":6,"i9":6,"i10":6,"i11":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../index.html?com/jogamp/opengl/util/texture/TextureSequence.html" target="_top">Frames</a></li>
<li><a href="TextureSequence.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl.util.texture</a></div>
<h2 title="Interface TextureSequence" class="title">Interface TextureSequence</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Known Subinterfaces:</dt>
<dd><code><a href="../av/GLMediaPlayer.html" title="interface in com.jogamp.opengl.util.av">GLMediaPlayer</a></code></dd>
</dl>
<dl>
<dt>All Known Implementing Classes:</dt>
<dd><code><a href="ImageSequence.html" title="class in com.jogamp.opengl.util.texture">ImageSequence</a></code></dd>
</dl>
<hr>
<pre>public interface <span class="typeNameLabel">TextureSequence</span></pre>
<div class="block">Protocol for texture sequences, like animations, movies, etc.
 <p>
 Ensure to respect the texture coordinates provided by
 <a href="TextureSequence.TextureFrame.html" title="class in com.jogamp.opengl.util.texture"><code>TextureSequence.TextureFrame</code></a>.<a href="TextureSequence.TextureFrame.html#getTexture()"><code>getTexture()</code></a>.<a href="Texture.html#getImageTexCoords()"><code>getImageTexCoords()</code></a>.
 </p>
 The user's shader shall be fitted for this implementation.
 Assuming we use a base shader code w/o headers using </code>ShaderCode</code>.
 (Code copied from unit test / demo <code>TexCubeES2</code>)
 <pre>

    static final String[] es2_prelude = { "#version 100\n", "precision mediump float;\n" };
    static final String gl2_prelude = "#version 110\n";
    static final String shaderBasename = "texsequence_xxx";  // the base shader code w/o headers
    static final String myTextureLookupName = "myTexture2D"; // the desired texture lookup function

    private void initShader(GL2ES2 gl, TextureSequence texSeq) {
        // Create & Compile the shader objects
        ShaderCode rsVp = ShaderCode.create(gl, GL2ES2.GL_VERTEX_SHADER, TexCubeES2.class,
                                            "shader", "shader/bin", shaderBasename, true);
        ShaderCode rsFp = ShaderCode.create(gl, GL2ES2.GL_FRAGMENT_SHADER, TexCubeES2.class,
                                            "shader", "shader/bin", shaderBasename, true);

        // Prelude shader code w/ GLSL profile specifics [ 1. pre-proc, 2. other ]
        int rsFpPos;
        if(gl.isGLES2()) {
            // insert ES2 version string in beginning
            rsVp.insertShaderSource(0, 0, es2_prelude[0]);
            rsFpPos = rsFp.insertShaderSource(0, 0, es2_prelude[0]);
        } else {
            // insert GL2 version string in beginning
            rsVp.insertShaderSource(0, 0, gl2_prelude);
            rsFpPos = rsFp.insertShaderSource(0, 0, gl2_prelude);
        }
        // insert required extensions as determined by TextureSequence implementation.
        rsFpPos = rsFp.insertShaderSource(0, rsFpPos, texSeq.getRequiredExtensionsShaderStub());
        if(gl.isGLES2()) {
            // insert ES2 default precision declaration
            rsFpPos = rsFp.insertShaderSource(0, rsFpPos, es2_prelude[1]);
        }
        // negotiate the texture lookup function name
        final String texLookupFuncName = texSeq.getTextureLookupFunctionName(myTextureLookupName);

        // in case a fixed lookup function is being chosen, replace the name in our code
        rsFp.replaceInShaderSource(myTextureLookupName, texLookupFuncName);

        // Cache the TextureSequence shader details in StringBuilder:
        final StringBuilder sFpIns = new StringBuilder();

        // .. declaration of the texture sampler using the implementation specific type
        sFpIns.append("uniform ").append(texSeq.getTextureSampler2DType()).append(" mgl_ActiveTexture;\n");

        // .. the actual texture lookup function, maybe null in case a built-in function is being used
        sFpIns.append(texSeq.getTextureLookupFragmentShaderImpl());

        // Now insert the TextureShader details in our shader after the given tag:
        rsFp.insertShaderSource(0, "TEXTURE-SEQUENCE-CODE-BEGIN", 0, sFpIns);

        // Create & Link the shader program
        ShaderProgram sp = new ShaderProgram();
        sp.add(rsVp);
        sp.add(rsFp);
        if(!sp.link(gl, System.err)) {
            throw new GLException("Couldn't link program: "+sp);
        }
        ...
 </pre>
 The above procedure might look complicated, however, it allows most flexibility and
 workarounds to also deal with GLSL bugs.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Interface</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static interface&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="TextureSequence.TexSeqEventListener.html" title="interface in com.jogamp.opengl.util.texture">TextureSequence.TexSeqEventListener</a>&lt;<a href="TextureSequence.TexSeqEventListener.html" title="type parameter in TextureSequence.TexSeqEventListener">T</a> extends <a href="TextureSequence.html" title="interface in com.jogamp.opengl.util.texture">TextureSequence</a>&gt;</span></code></th>
<td class="colLast">
<div class="block">Event listener to notify users of updates regarding the <a href="TextureSequence.html" title="interface in com.jogamp.opengl.util.texture"><code>TextureSequence</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="TextureSequence.TextureFrame.html" title="class in com.jogamp.opengl.util.texture">TextureSequence.TextureFrame</a></span></code></th>
<td class="colLast">
<div class="block">Texture holder interface, maybe specialized by implementation
 to associated related data.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#sampler2D">sampler2D</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#samplerExternalOES">samplerExternalOES</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code><a href="TextureSequence.TextureFrame.html" title="class in com.jogamp.opengl.util.texture">TextureSequence.TextureFrame</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getLastTexture()">getLastTexture</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the last updated texture.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="TextureSequence.TextureFrame.html" title="class in com.jogamp.opengl.util.texture">TextureSequence.TextureFrame</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNextTexture(com.jogamp.opengl.GL)">getNextTexture</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Returns the next texture to be rendered.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRequiredExtensionsShaderStub()">getRequiredExtensionsShaderStub</a></span>()</code></th>
<td class="colLast">
<div class="block">In case a shader extension is required, based on the implementation
 and the runtime GL profile, this method returns the preprocessor macros, e.g.:</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureFragmentShaderHashCode()">getTextureFragmentShaderHashCode</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the hash code of the strings:
 
   <a href="#getTextureLookupFragmentShaderImpl()"><code>getTextureLookupFragmentShaderImpl()</code></a>
   <a href="#getTextureSampler2DType()"><code>getTextureSampler2DType()</code></a>
 </div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureLookupFragmentShaderImpl()">getTextureLookupFragmentShaderImpl</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the complete texture2D lookup function code of type</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureLookupFunctionName(java.lang.String)">getTextureLookupFunctionName</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;desiredFuncName)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>int[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureMinMagFilter()">getTextureMinMagFilter</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureSampler2DType()">getTextureSampler2DType</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns either <code>sampler2D</code> or <code>samplerExternalOES</code>
 depending on <a href="#getLastTexture()"><code>getLastTexture()</code></a>.<a href="TextureSequence.TextureFrame.html#getTexture()"><code>getTexture()</code></a>.<a href="Texture.html#getTarget()"><code>getTarget()</code></a>.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureTarget()">getTextureTarget</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the texture target used by implementation.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureUnit()">getTextureUnit</a></span>()</code></th>
<td class="colLast">
<div class="block">Return the texture unit used to render the current frame.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>int[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureWrapST()">getTextureWrapST</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isTextureAvailable()">isTextureAvailable</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if texture source is ready <i>and</i> a texture is available
 via <a href="#getNextTexture(com.jogamp.opengl.GL)"><code>getNextTexture(GL)</code></a> and <a href="#getLastTexture()"><code>getLastTexture()</code></a>.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="samplerExternalOES">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>samplerExternalOES</h4>
<pre>static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> samplerExternalOES</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../constant-values.html#com.jogamp.opengl.util.texture.TextureSequence.samplerExternalOES">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="sampler2D">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>sampler2D</h4>
<pre>static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> sampler2D</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../constant-values.html#com.jogamp.opengl.util.texture.TextureSequence.sampler2D">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="getTextureTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureTarget</h4>
<pre class="methodSignature">int&nbsp;getTextureTarget()</pre>
<div class="block">Returns the texture target used by implementation.</div>
</li>
</ul>
<a id="getTextureUnit()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureUnit</h4>
<pre class="methodSignature">int&nbsp;getTextureUnit()</pre>
<div class="block">Return the texture unit used to render the current frame.</div>
</li>
</ul>
<a id="getTextureMinMagFilter()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureMinMagFilter</h4>
<pre class="methodSignature">int[]&nbsp;getTextureMinMagFilter()</pre>
</li>
</ul>
<a id="getTextureWrapST()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureWrapST</h4>
<pre class="methodSignature">int[]&nbsp;getTextureWrapST()</pre>
</li>
</ul>
<a id="isTextureAvailable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isTextureAvailable</h4>
<pre class="methodSignature">boolean&nbsp;isTextureAvailable()</pre>
<div class="block">Returns true if texture source is ready <i>and</i> a texture is available
 via <a href="#getNextTexture(com.jogamp.opengl.GL)"><code>getNextTexture(GL)</code></a> and <a href="#getLastTexture()"><code>getLastTexture()</code></a>.</div>
</li>
</ul>
<a id="getLastTexture()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastTexture</h4>
<pre class="methodSignature"><a href="TextureSequence.TextureFrame.html" title="class in com.jogamp.opengl.util.texture">TextureSequence.TextureFrame</a>&nbsp;getLastTexture()
                                     throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Returns the last updated texture.
 <p>
 In case the instance is just initialized, it shall return a <code>TextureFrame</code>
 object with valid attributes. The texture content may be undefined
 until the first call of <a href="#getNextTexture(com.jogamp.opengl.GL)"><code>getNextTexture(GL)</code></a>.<br>
 </p>
 Not blocking.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if instance is not initialized</dd>
</dl>
</li>
</ul>
<a id="getNextTexture(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNextTexture</h4>
<pre class="methodSignature"><a href="TextureSequence.TextureFrame.html" title="class in com.jogamp.opengl.util.texture">TextureSequence.TextureFrame</a>&nbsp;getNextTexture&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)
                                     throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Returns the next texture to be rendered.
 <p>
 Implementation shall return the next frame if available, may block if a next frame may arrive <i>soon</i>.
 Otherwise implementation shall return the last frame.
 </p>
 <p>
 Shall return <code>null</code> in case <i>no</i> next or last frame is available.
 </p></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if instance is not initialized</dd>
</dl>
</li>
</ul>
<a id="getRequiredExtensionsShaderStub()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRequiredExtensionsShaderStub</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getRequiredExtensionsShaderStub()
                                throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">In case a shader extension is required, based on the implementation
 and the runtime GL profile, this method returns the preprocessor macros, e.g.:
 <pre>
 #extension GL_OES_EGL_image_external : enable
 </pre></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if instance is not initialized</dd>
</dl>
</li>
</ul>
<a id="getTextureSampler2DType()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureSampler2DType</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getTextureSampler2DType()
                        throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Returns either <code>sampler2D</code> or <code>samplerExternalOES</code>
 depending on <a href="#getLastTexture()"><code>getLastTexture()</code></a>.<a href="TextureSequence.TextureFrame.html#getTexture()"><code>getTexture()</code></a>.<a href="Texture.html#getTarget()"><code>getTarget()</code></a>.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if instance is not initialized</dd>
</dl>
</li>
</ul>
<a id="getTextureLookupFunctionName(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureLookupFunctionName</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getTextureLookupFunctionName&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;desiredFuncName)
                             throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>desiredFuncName</code> - desired lookup function name. If <code>null</code> or ignored by the implementation,
                        a build-in name is returned.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the final lookup function name</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if instance is not initialized</dd>
</dl>
</li>
</ul>
<a id="getTextureLookupFragmentShaderImpl()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureLookupFragmentShaderImpl</h4>
<pre class="methodSignature"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getTextureLookupFragmentShaderImpl()
                                   throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Returns the complete texture2D lookup function code of type
 <pre>
   vec4 <i>funcName</i>(in <i>getTextureSampler2DType()</i> image, in vec2 texCoord) {
      vec4 texColor = do_something_with(image, texCoord);
      return texColor;
   }
 </pre>
 <p>
 <i>funcName</i> can be negotiated and queried via <a href="#getTextureLookupFunctionName(java.lang.String)"><code>getTextureLookupFunctionName(String)</code></a>.
 </p>
 Note: This function may return an empty string in case a build-in lookup
 function is being chosen. If the implementation desires so,
 <a href="#getTextureLookupFunctionName(java.lang.String)"><code>getTextureLookupFunctionName(String)</code></a> will ignore the desired function name
 and returns the build-in lookup function name.
 </p></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if instance is not initialized</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getTextureLookupFunctionName(java.lang.String)"><code>getTextureLookupFunctionName(String)</code></a>, 
<a href="#getTextureSampler2DType()"><code>getTextureSampler2DType()</code></a></dd>
</dl>
</li>
</ul>
<a id="getTextureFragmentShaderHashCode()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getTextureFragmentShaderHashCode</h4>
<pre class="methodSignature">int&nbsp;getTextureFragmentShaderHashCode()</pre>
<div class="block">Returns the hash code of the strings:
 <ul>
   <li><a href="#getTextureLookupFragmentShaderImpl()"><code>getTextureLookupFragmentShaderImpl()</code></a></li>
   <li><a href="#getTextureSampler2DType()"><code>getTextureSampler2DType()</code></a></li>
 </ul>
 <p>
 Returns zero if <a href="#isTextureAvailable()"><code>texture is not available</code></a>.
 </p>
 The returned hash code allows selection of a matching shader program for this <a href="TextureSequence.html" title="interface in com.jogamp.opengl.util.texture"><code>TextureSequence</code></a> instance.
 <p>
 </p>
 <p>
 Implementation shall cache the resulting hash code,
 which must be reset to zero if <a href="#isTextureAvailable()"><code>texture is not available</code></a>.
 </p></div>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../index.html?com/jogamp/opengl/util/texture/TextureSequence.html" target="_top">Frames</a></li>
<li><a href="TextureSequence.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
