<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:33 CET 2023 -->
<title>GLSharedContextSetter (JOGL API -- 2.4 Specification)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GLSharedContextSetter (JOGL API -- 2.4 Specification)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":6,"i1":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLSharedContextSetter.html" target="_top">Frames</a></li>
<li><a href="GLSharedContextSetter.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl</a></div>
<h2 title="Interface GLSharedContextSetter" class="title">Interface GLSharedContextSetter</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Superinterfaces:</dt>
<dd><code><a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code>, <code><a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code>, <code><a href="../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/NativeSurfaceHolder.html?is-external=true" title="class or interface in com.jogamp.nativewindow" class="externalLink">NativeSurfaceHolder</a></code></dd>
</dl>
<dl>
<dt>All Known Subinterfaces:</dt>
<dd><code><a href="GLOffscreenAutoDrawable.html" title="interface in com.jogamp.opengl">GLOffscreenAutoDrawable</a></code>, <code><a href="GLOffscreenAutoDrawable.FBO.html" title="interface in com.jogamp.opengl">GLOffscreenAutoDrawable.FBO</a></code></dd>
</dl>
<dl>
<dt>All Known Implementing Classes:</dt>
<dd><code>jogamp.opengl.GLAutoDrawableBase</code>, <code><a href="GLAutoDrawableDelegate.html" title="class in com.jogamp.opengl">GLAutoDrawableDelegate</a></code>, <code><a href="awt/GLCanvas.html" title="class in com.jogamp.opengl.awt">GLCanvas</a></code>, <code><a href="swt/GLCanvas.html" title="class in com.jogamp.opengl.swt">GLCanvas</a></code>, <code><a href="awt/GLJPanel.html" title="class in com.jogamp.opengl.awt">GLJPanel</a></code></dd>
</dl>
<hr>
<pre>public interface <span class="typeNameLabel">GLSharedContextSetter</span>
extends <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></pre>
<div class="block">Adds capabilities to set a shared <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> directly or via an <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>.
 <p>
 Sharing of server-side OpenGL objects such as buffer objects, e.g. VBOs,
 and textures among OpenGL contexts is supported with this interface.
 </p>
 <p>
 A <i>master</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> is the <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> which is created first.
 Subsequent shared <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> w/ the <i>master</i> are referred as <i>slave</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.
 </p>
 <p>
 Implementations of this interface control the <i>slave's</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> and <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> realization,
 i.e. the <i>slave</i> <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> will not be realized before their associated <i>master</i>.
 </p>
 <p>
 Using the nearest or same <a href="../../../../javadoc_nativewindow_spec/com/jogamp/nativewindow/VisualIDHolder.html?is-external=true#getVisualID(com.jogamp.nativewindow.VisualIDHolder.VIDType)" title="class or interface in com.jogamp.nativewindow" class="externalLink"><code>visual ID</code></a>
 or <a href="GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>caps</code></a> across the shared <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>s will yield best compatibility.
 </p>
 <h5><a name="lifecycle">Lifecycle Considerations</a></h5>
 <p>
 After shared objects are created on the <i>master</i>, the OpenGL pipeline
 might need to be synchronized w/ the <i>slaves</i>, e.g. via <a href="GL.html#glFinish()"><code>GL.glFinish()</code></a>.
 At least this has been experienced w/ OSX 10.9.
 </p>
 <p>
 In general, destroying a <i>master</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> before their shared <i>slaves</i>
 shall be permissible, i.e. the OpenGL driver needs to handle pending destruction of shared resources.
 This is confirmed to work properly on most platform/driver combinations,
 see unit test <code>com.jogamp.opengl.test.junit.jogl.acore.TestSharedContextVBOES2NEWT3</code> and similar.
 </p>
 <p>
 However, to avoid scenarios with buggy drivers, users <i>may not</i> destroy the
 <i>master</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> before its shared <i>slave</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> instances
 <i>as long as they are using them</i>.<br>
 Otherwise the OpenGL driver may crash w/ SIGSEGV, due to using already destroyed shared resources,
 if not handling the pending destruction of the latter!<br>
 Either proper lifecycle synchronization is implemented, e.g. by notifying the <i>slaves</i> about the loss of the shared resources,
 <i>or</i> the <i>slaves</i> validate whether the resources are still valid.
 </p>
 <p>
 To simplify above lifecycle issues, one may use a <a href="GLDrawableFactory.html#createDummyDrawable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLCapabilitiesChooser)"><code>dummy</code></a>
 <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a> and it's <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> as the <i>master</i> of all shared <i>slave</i> <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.
 Since this <i>dummy instance</i> does not depend on any native windowing system, it can be controlled easily w/o being <i>in sight</i>.<br>
 Below code creates a <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> based on a <i>dummy GLDrawable</i>:
 <pre>
        // GLProfile and GLCapabilities should be equal across all shared GL drawable/context.
        final GLCapabilitiesImmutable caps = ... ;
        final GLProfile glp = caps.getGLProfile();
        ..
        final boolean createNewDevice = true; // use 'own' display device!
        final GLAutoDrawable sharedDrawable = GLDrawableFactory.getFactory(glp).createDummyAutoDrawable(null, createNewDevice, caps, null);
        sharedDrawable.display(); // triggers GLContext object creation and native realization.
        ...
        // Later a shared 'slave' can be created e.g.:
        GLWindow glad = GLWindow.create(caps); // or any other GLAutoDrawable supporting GLSharedContextSetter
        glad.setSharedAutoDrawable(sharedDrawable);
        glad.addGLEventListener(..);
        glad.setVisible(true); // GLWindow creation ..
 </pre>
 </p>
 <h5><a name="synchronization">GL Object Synchronization</a></h5>
 <p>
 Usually synchronization of shared GL objects should not be required, if the shared GL objects
 are created and immutable before concurrent usage.
 </p>
 <p>
 However, using drivers exposing <a href="GLRendererQuirks.html#NeedSharedObjectSync"><code>GLRendererQuirks.NeedSharedObjectSync</code></a> always
 require the user to synchronize access of shared GL objects.
 </p>
 <p>
 Synchronization can be avoided if accessing the shared GL objects
 exclusively via a queue or <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/Ringbuffer.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink"><code>Ringbuffer</code></a>, see GLMediaPlayerImpl as an example.
 </p>
 </p>
 <h5><a name="driverissues">Known Driver Issues</a></h5>
 <h7><a name="intelmesa">Intel's Mesa >= 9.1.2 Backend for [Sandybridge/Ivybridge] on GNU/Linux</a></h7>
 <p>
 <pre>
 Error: 'intel_do_flush_locked: No such file or directory'
 JogAmp: https://jogamp.org/bugzilla/show_bug.cgi?id=873
 freedesktop.org: https://bugs.freedesktop.org/show_bug.cgi?id=41736#c8
 </pre>
 Shared context seems not to be supported w/ lock-free bound X11 display connections
 per OpenGL drawable/context. The error message above is thrown in this case.
 Hence the driver bug renders shared context use w/ JOGL impossible.
 </p>
 <h7><a name="hisilicon">Hisilicon's Immersion.16 on Android</a></h7>
 <p>
 We failed to create a shared ES2 context on another thread.
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.com.jogamp.opengl.GLAutoDrawable">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;com.jogamp.opengl.<a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></h3>
<code><a href="GLAutoDrawable.html#SCREEN_CHANGE_ACTION_ENABLED">SCREEN_CHANGE_ACTION_ENABLED</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)">setSharedAutoDrawable</a></span>&#8203;(<a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;sharedAutoDrawable)</code></th>
<td class="colLast">
<div class="block">Specifies an <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>, which <a href="GLContext.html" title="class in com.jogamp.opengl"><code>OpenGL context</code></a> shall be shared by this <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setSharedContext(com.jogamp.opengl.GLContext)">setSharedContext</a></span>&#8203;(<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;sharedContext)</code></th>
<td class="colLast">
<div class="block">Specifies an <a href="GLContext.html" title="class in com.jogamp.opengl"><code>OpenGL context</code></a>, which shall be shared by this <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.opengl.GLAutoDrawable">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.opengl.<a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></h3>
<code><a href="GLAutoDrawable.html#addGLEventListener(int,com.jogamp.opengl.GLEventListener)">addGLEventListener</a>, <a href="GLAutoDrawable.html#addGLEventListener(com.jogamp.opengl.GLEventListener)">addGLEventListener</a>, <a href="GLAutoDrawable.html#areAllGLEventListenerInitialized()">areAllGLEventListenerInitialized</a>, <a href="GLAutoDrawable.html#createContext(com.jogamp.opengl.GLContext)">createContext</a>, <a href="GLAutoDrawable.html#destroy()">destroy</a>, <a href="GLAutoDrawable.html#display()">display</a>, <a href="GLAutoDrawable.html#disposeGLEventListener(com.jogamp.opengl.GLEventListener,boolean)">disposeGLEventListener</a>, <a href="GLAutoDrawable.html#flushGLRunnables()">flushGLRunnables</a>, <a href="GLAutoDrawable.html#getAnimator()">getAnimator</a>, <a href="GLAutoDrawable.html#getAutoSwapBufferMode()">getAutoSwapBufferMode</a>, <a href="GLAutoDrawable.html#getContext()">getContext</a>, <a href="GLAutoDrawable.html#getContextCreationFlags()">getContextCreationFlags</a>, <a href="GLAutoDrawable.html#getDelegatedDrawable()">getDelegatedDrawable</a>, <a href="GLAutoDrawable.html#getExclusiveContextThread()">getExclusiveContextThread</a>, <a href="GLAutoDrawable.html#getGL()">getGL</a>, <a href="GLAutoDrawable.html#getGLEventListener(int)">getGLEventListener</a>, <a href="GLAutoDrawable.html#getGLEventListenerCount()">getGLEventListenerCount</a>, <a href="GLAutoDrawable.html#getGLEventListenerInitState(com.jogamp.opengl.GLEventListener)">getGLEventListenerInitState</a>, <a href="GLAutoDrawable.html#getUpstreamLock()">getUpstreamLock</a>, <a href="GLAutoDrawable.html#getUpstreamWidget()">getUpstreamWidget</a>, <a href="GLAutoDrawable.html#invoke(boolean,com.jogamp.opengl.GLRunnable)">invoke</a>, <a href="GLAutoDrawable.html#invoke(boolean,java.util.List)">invoke</a>, <a href="GLAutoDrawable.html#isThreadGLCapable()">isThreadGLCapable</a>, <a href="GLAutoDrawable.html#removeGLEventListener(com.jogamp.opengl.GLEventListener)">removeGLEventListener</a>, <a href="GLAutoDrawable.html#setAnimator(com.jogamp.opengl.GLAnimatorControl)">setAnimator</a>, <a href="GLAutoDrawable.html#setAutoSwapBufferMode(boolean)">setAutoSwapBufferMode</a>, <a href="GLAutoDrawable.html#setContext(com.jogamp.opengl.GLContext,boolean)">setContext</a>, <a href="GLAutoDrawable.html#setContextCreationFlags(int)">setContextCreationFlags</a>, <a href="GLAutoDrawable.html#setExclusiveContextThread(java.lang.Thread)">setExclusiveContextThread</a>, <a href="GLAutoDrawable.html#setGL(com.jogamp.opengl.GL)">setGL</a>, <a href="GLAutoDrawable.html#setGLEventListenerInitState(com.jogamp.opengl.GLEventListener,boolean)">setGLEventListenerInitState</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.com.jogamp.opengl.GLDrawable">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;com.jogamp.opengl.<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></h3>
<code><a href="GLDrawable.html#getChosenGLCapabilities()">getChosenGLCapabilities</a>, <a href="GLDrawable.html#getFactory()">getFactory</a>, <a href="GLDrawable.html#getGLProfile()">getGLProfile</a>, <a href="GLDrawable.html#getHandle()">getHandle</a>, <a href="GLDrawable.html#getNativeSurface()">getNativeSurface</a>, <a href="GLDrawable.html#getRequestedGLCapabilities()">getRequestedGLCapabilities</a>, <a href="GLDrawable.html#getSurfaceHeight()">getSurfaceHeight</a>, <a href="GLDrawable.html#getSurfaceWidth()">getSurfaceWidth</a>, <a href="GLDrawable.html#isGLOriented()">isGLOriented</a>, <a href="GLDrawable.html#isRealized()">isRealized</a>, <a href="GLDrawable.html#setRealized(boolean)">setRealized</a>, <a href="GLDrawable.html#swapBuffers()">swapBuffers</a>, <a href="GLDrawable.html#toString()">toString</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="setSharedContext(com.jogamp.opengl.GLContext)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSharedContext</h4>
<pre class="methodSignature">void&nbsp;setSharedContext&#8203;(<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;sharedContext)
               throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Specifies an <a href="GLContext.html" title="class in com.jogamp.opengl"><code>OpenGL context</code></a>, which shall be shared by this <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.
 <p>
 Since the <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>drawable</code></a> and <a href="GLContext.html" title="class in com.jogamp.opengl"><code>context</code></a> is created
 at <code>GLAutoDrawable initialization</code>
 this method shall be called beforehand to have any effect.
 </p>
 <p>
 A set <i>sharedContext</i> will block context creation, i.e. <code>GLAutoDrawable initialization</code>,
 as long it is not <a href="GLContext.html#isCreated()"><code>created natively</code></a>.
 </p>
 <p>
 The <i>preferred method</i> of assigning a <i>shared context</i> is
 to <a href="#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>set the shared GLAutoDrawable</code></a>,
 since this method also takes the <a href="GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>
 <a href="GLAutoDrawable.html#areAllGLEventListenerInitialized()"><code>initialization into account</code></a>.
 </p>
 <p>
 See <a href="#lifecycle">Lifecycle Considerations</a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sharedContext</code> - The OpenGL context to be shared by this <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if a <a href="#setSharedContext(com.jogamp.opengl.GLContext)"><code>shared GLContext</code></a>
                               or <a href="#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>shared GLAutoDrawable</code></a> is already set,
                               the given sharedContext is null or equal to this <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s context.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>setSharedAutoDrawable(GLAutoDrawable)</code></a></dd>
</dl>
</li>
</ul>
<a id="setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>setSharedAutoDrawable</h4>
<pre class="methodSignature">void&nbsp;setSharedAutoDrawable&#8203;(<a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;sharedAutoDrawable)
                    throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Specifies an <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>, which <a href="GLContext.html" title="class in com.jogamp.opengl"><code>OpenGL context</code></a> shall be shared by this <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.
 <p>
 Since the <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>drawable</code></a> and <a href="GLContext.html" title="class in com.jogamp.opengl"><code>context</code></a> is created
 at <code>GLAutoDrawable initialization</code>
 this method shall be called beforehand to have any effect.
 </p>
 <p>
 A set <i>sharedAutoDrawable</i> will block context creation, i.e. <a href="GLAutoDrawable.html#initialization">initialization</a>
 as long it's
 <ul>
   <li><a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> is <code>null</code>, or</li>
   <li><a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a> has not been <a href="GLContext.html#isCreated()"><code>created natively</code></a>, or</li>
   <li><a href="GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> are <i>not</i> <a href="GLAutoDrawable.html#areAllGLEventListenerInitialized()"><code>completely initialized</code></a></li>
 </ul>
 </p>
 <p>
 See <a href="#lifecycle">Lifecycle Considerations</a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sharedContext</code> - The GLAutoDrawable, which OpenGL context shall be shared by this <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="GLContext.html" title="class in com.jogamp.opengl"><code>GLContext</code></a>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if a <a href="#setSharedContext(com.jogamp.opengl.GLContext)"><code>shared GLContext</code></a>
                               or <a href="#setSharedAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>shared GLAutoDrawable</code></a> is already set,
                               the given sharedAutoDrawable is null or equal to this GLAutoDrawable.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setSharedContext(com.jogamp.opengl.GLContext)"><code>setSharedContext(GLContext)</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLSharedContextSetter.html" target="_top">Frames</a></li>
<li><a href="GLSharedContextSetter.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
