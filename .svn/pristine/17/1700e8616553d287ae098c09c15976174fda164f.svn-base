<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>GLReadBufferUtil (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GLReadBufferUtil (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/util/GLReadBufferUtil.html" target="_top">Frames</a></li>
<li><a href="GLReadBufferUtil.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl.util</a></div>
<h2 title="Class GLReadBufferUtil" class="title">Class GLReadBufferUtil</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.util.GLReadBufferUtil</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><code><a href="awt/AWTGLReadBufferUtil.html" title="class in com.jogamp.opengl.util.awt">AWTGLReadBufferUtil</a></code></dd>
</dl>
<hr>
<pre>public class <span class="typeNameLabel">GLReadBufferUtil</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Utility to read out the current FB to TextureData, optionally writing the data back to a texture object.
 <p>May be used directly to write the TextureData to file (screenshot).</p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(boolean,boolean)">GLReadBufferUtil</a></span>&#8203;(boolean&nbsp;requestAlpha,
                boolean&nbsp;write2Texture)</code></th>
<td class="colLast">
<div class="block">Using the default <a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util"><code>GLPixelBuffer</code></a>: <a href="GLPixelBuffer.html#defaultProviderNoRowStride"><code>GLPixelBuffer.defaultProviderNoRowStride</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(com.jogamp.opengl.util.GLPixelBuffer.GLPixelBufferProvider,boolean,boolean)">GLReadBufferUtil</a></span>&#8203;(<a href="GLPixelBuffer.GLPixelBufferProvider.html" title="interface in com.jogamp.opengl.util">GLPixelBuffer.GLPixelBufferProvider</a>&nbsp;pixelBufferProvider,
                boolean&nbsp;requestAlpha,
                boolean&nbsp;write2Texture)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#dispose(com.jogamp.opengl.GL)">dispose</a></span>&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="GLPixelStorageModes.html" title="class in com.jogamp.opengl.util">GLPixelStorageModes</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLPixelStorageModes()">getGLPixelStorageModes</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPixelBuffer()">getPixelBuffer</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util"><code>GLPixelBuffer</code></a>, created and filled by <code>#readPixels(GLAutoDrawable, boolean)</code>.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="GLPixelBuffer.GLPixelBufferProvider.html" title="interface in com.jogamp.opengl.util">GLPixelBuffer.GLPixelBufferProvider</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPixelBufferProvider()">getPixelBufferProvider</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the <a href="GLPixelBuffer.GLPixelBufferProvider.html" title="interface in com.jogamp.opengl.util"><code>GLPixelBuffer.GLPixelBufferProvider</code></a> used by this instance.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="texture/Texture.html" title="class in com.jogamp.opengl.util.texture">Texture</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTexture()">getTexture</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code><a href="texture/TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureData()">getTextureData</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasAlpha()">hasAlpha</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the OpenGL read data contains alpha.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isValid()">isValid</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#readPixels(com.jogamp.opengl.GL,boolean)">readPixels</a></span>&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
          boolean&nbsp;mustFlipVertically)</code></th>
<td class="colLast">
<div class="block">Read the drawable's pixels to TextureData and Texture, if requested at construction.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#readPixels(com.jogamp.opengl.GL,int,int,int,int,boolean)">readPixels</a></span>&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
          int&nbsp;inX,
          int&nbsp;inY,
          int&nbsp;inWidth,
          int&nbsp;inHeight,
          boolean&nbsp;mustFlipVertically)</code></th>
<td class="colLast">
<div class="block">Read the drawable's pixels to TextureData and Texture, if requested at construction.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#rewindPixelBuffer()">rewindPixelBuffer</a></span>()</code></th>
<td class="colLast">
<div class="block">rewind the raw pixel ByteBuffer</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#write(java.io.File)">write</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/io/File.html?is-external=true" title="class or interface in java.io" class="externalLink">File</a>&nbsp;dest)</code></th>
<td class="colLast">
<div class="block">Write the TextureData filled by <code>#readPixels(GLAutoDrawable, boolean)</code> to file</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(boolean,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GLReadBufferUtil</h4>
<pre>public&nbsp;GLReadBufferUtil&#8203;(boolean&nbsp;requestAlpha,
                        boolean&nbsp;write2Texture)</pre>
<div class="block">Using the default <a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util"><code>GLPixelBuffer</code></a>: <a href="GLPixelBuffer.html#defaultProviderNoRowStride"><code>GLPixelBuffer.defaultProviderNoRowStride</code></a>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>requestAlpha</code> - true for RGBA readPixels, otherwise RGB readPixels. Disclaimer: <a href="#hasAlpha()"><code>hasAlpha()</code></a>==true maybe forced depending on the used <a href="GLPixelBuffer.GLPixelBufferProvider.html" title="interface in com.jogamp.opengl.util"><code>GLPixelBuffer.GLPixelBufferProvider</code></a>, i.e. on ES platforms, when calling <a href="#readPixels(com.jogamp.opengl.GL,int,int,int,int,boolean)"><code>readPixels</code></a>.</dd>
<dd><code>write2Texture</code> - true if readPixel's TextureData shall be written to a 2d Texture</dd>
</dl>
</li>
</ul>
<a id="&lt;init&gt;(com.jogamp.opengl.util.GLPixelBuffer.GLPixelBufferProvider,boolean,boolean)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>GLReadBufferUtil</h4>
<pre>public&nbsp;GLReadBufferUtil&#8203;(<a href="GLPixelBuffer.GLPixelBufferProvider.html" title="interface in com.jogamp.opengl.util">GLPixelBuffer.GLPixelBufferProvider</a>&nbsp;pixelBufferProvider,
                        boolean&nbsp;requestAlpha,
                        boolean&nbsp;write2Texture)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pixelBufferProvider</code> - custom <a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util"><code>GLPixelBuffer</code></a></dd>
<dd><code>requestAlpha</code> - true for RGBA readPixels, otherwise RGB readPixels. Disclaimer: <a href="#hasAlpha()"><code>hasAlpha()</code></a>==true maybe forced depending on the used <a href="GLPixelBuffer.GLPixelBufferProvider.html" title="interface in com.jogamp.opengl.util"><code>GLPixelBuffer.GLPixelBufferProvider</code></a>, i.e. on ES platforms, when calling <a href="#readPixels(com.jogamp.opengl.GL,int,int,int,int,boolean)"><code>readPixels</code></a>.</dd>
<dd><code>write2Texture</code> - true if readPixel's TextureData shall be written to a 2d Texture</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="getPixelBufferProvider()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPixelBufferProvider</h4>
<pre class="methodSignature">public&nbsp;<a href="GLPixelBuffer.GLPixelBufferProvider.html" title="interface in com.jogamp.opengl.util">GLPixelBuffer.GLPixelBufferProvider</a>&nbsp;getPixelBufferProvider()</pre>
<div class="block">Returns the <a href="GLPixelBuffer.GLPixelBufferProvider.html" title="interface in com.jogamp.opengl.util"><code>GLPixelBuffer.GLPixelBufferProvider</code></a> used by this instance.</div>
</li>
</ul>
<a id="isValid()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isValid</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;isValid()</pre>
</li>
</ul>
<a id="hasAlpha()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasAlpha</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;hasAlpha()</pre>
<div class="block">Returns true if the OpenGL read data contains alpha. This value is lazily determined after the first call of <a href="#readPixels(com.jogamp.opengl.GL,int,int,int,int,boolean)"><code>readPixels</code></a></div>
</li>
</ul>
<a id="getGLPixelStorageModes()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLPixelStorageModes</h4>
<pre class="methodSignature">public&nbsp;<a href="GLPixelStorageModes.html" title="class in com.jogamp.opengl.util">GLPixelStorageModes</a>&nbsp;getGLPixelStorageModes()</pre>
</li>
</ul>
<a id="getPixelBuffer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPixelBuffer</h4>
<pre class="methodSignature">public&nbsp;<a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a>&nbsp;getPixelBuffer()</pre>
<div class="block">Returns the <a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util"><code>GLPixelBuffer</code></a>, created and filled by <code>#readPixels(GLAutoDrawable, boolean)</code>.</div>
</li>
</ul>
<a id="rewindPixelBuffer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rewindPixelBuffer</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;rewindPixelBuffer()</pre>
<div class="block">rewind the raw pixel ByteBuffer</div>
</li>
</ul>
<a id="getTextureData()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureData</h4>
<pre class="methodSignature">public&nbsp;<a href="texture/TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;getTextureData()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the resulting TextureData, filled by <code>#readPixels(GLAutoDrawable, boolean)</code></dd>
</dl>
</li>
</ul>
<a id="getTexture()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTexture</h4>
<pre class="methodSignature">public&nbsp;<a href="texture/Texture.html" title="class in com.jogamp.opengl.util.texture">Texture</a>&nbsp;getTexture()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the Texture object filled by <code>#readPixels(GLAutoDrawable, boolean)</code>,
         if this instance writes to a 2d Texture, otherwise null.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#%3Cinit%3E(boolean,boolean)"><code>GLReadBufferUtil(boolean, boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="write(java.io.File)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>write</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;write&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/io/File.html?is-external=true" title="class or interface in java.io" class="externalLink">File</a>&nbsp;dest)</pre>
<div class="block">Write the TextureData filled by <code>#readPixels(GLAutoDrawable, boolean)</code> to file</div>
</li>
</ul>
<a id="readPixels(com.jogamp.opengl.GL,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readPixels</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;readPixels&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                          boolean&nbsp;mustFlipVertically)</pre>
<div class="block">Read the drawable's pixels to TextureData and Texture, if requested at construction.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - the current GL context object. It's read drawable is being used as the pixel source.</dd>
<dd><code>mustFlipVertically</code> - indicates whether to flip the data vertically or not.
                           The context's drawable <a href="../GLDrawable.html#isGLOriented()"><code>GLDrawable.isGLOriented()</code></a> state
                           is taken into account.
                           Vertical flipping is propagated to TextureData
                           and handled in a efficient manner there (TextureCoordinates and TextureIO writer).</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#%3Cinit%3E(boolean,boolean)"><code>GLReadBufferUtil(boolean, boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="readPixels(com.jogamp.opengl.GL,int,int,int,int,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readPixels</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;readPixels&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                          int&nbsp;inX,
                          int&nbsp;inY,
                          int&nbsp;inWidth,
                          int&nbsp;inHeight,
                          boolean&nbsp;mustFlipVertically)</pre>
<div class="block">Read the drawable's pixels to TextureData and Texture, if requested at construction.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - the current GL context object. It's read drawable is being used as the pixel source.</dd>
<dd><code>inX</code> - readPixel x offset</dd>
<dd><code>inY</code> - readPixel y offset</dd>
<dd><code>inWidth</code> - optional readPixel width value, used if [1 .. drawable.width], otherwise using drawable.width</dd>
<dd><code>inHeight</code> - optional readPixel height, used if [1 .. drawable.height], otherwise using drawable.height</dd>
<dd><code>mustFlipVertically</code> - indicates whether to flip the data vertically or not.
                           The context's drawable <a href="../GLDrawable.html#isGLOriented()"><code>GLDrawable.isGLOriented()</code></a> state
                           is taken into account.
                           Vertical flipping is propagated to TextureData
                           and handled in a efficient manner there (TextureCoordinates and TextureIO writer).</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#%3Cinit%3E(boolean,boolean)"><code>GLReadBufferUtil(boolean, boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="dispose(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>dispose</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;dispose&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</pre>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/util/GLReadBufferUtil.html" target="_top">Frames</a></li>
<li><a href="GLReadBufferUtil.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
