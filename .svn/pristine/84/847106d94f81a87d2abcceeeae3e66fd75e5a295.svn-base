<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:33 CET 2023 -->
<title>Texture (JOGL API -- 2.4 Specification)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../../script.js"></script>
<script type="text/javascript" src="../../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Texture (JOGL API -- 2.4 Specification)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../index.html?com/jogamp/opengl/util/texture/Texture.html" target="_top">Frames</a></li>
<li><a href="Texture.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl.util.texture</a></div>
<h2 title="Class Texture" class="title">Class Texture</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.util.texture.Texture</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public class <span class="typeNameLabel">Texture</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Represents an OpenGL texture object. Contains convenience routines
 for enabling/disabling OpenGL texture state, binding this texture,
 and computing texture coordinates for both the entire image as well
 as a sub-image.

 <a name="textureCallOrder"><h5>Order of Texture Commands</h5></a>
 <p>
 Due to many confusions w/ texture usage, following list described the order
 and semantics of texture unit selection, binding and enabling.
 <ul>
   <li><i>Optional:</i> Set active textureUnit via <code>gl.glActiveTexture(GL.GL_TEXTURE0 + textureUnit)</code>, <code>0</code> is default.</li>
   <li>Bind <code>textureId</code> -> active <code>textureUnit</code>'s <code>textureTarget</code> via <code>gl.glBindTexture(textureTarget, textureId)</code></li>
   <li><i>Compatible Context Only:</i> Enable active <code>textureUnit</code>'s <code>textureTarget</code> via <code>glEnable(textureTarget)</code>.
   <li><i>Optional:</i> Fiddle with the texture parameters and/or environment settings.</li>
   <li>GLSL: Use <code>textureUnit</code> in your shader program, enable shader program.</li>
   <li>Issue draw commands</li>
 </ul>
 </p>

 <p><a name="nonpow2"><b>Non-power-of-two restrictions</b></a>
 <br> When creating an OpenGL texture object, the Texture class will
 attempt to use <i>non-power-of-two textures</i> (NPOT) if available, see <a href="../../GLBase.html#isNPOTTextureAvailable()"><code>GLBase.isNPOTTextureAvailable()</code></a>.
 Further more,
 <a href="http://www.opengl.org/registry/specs/ARB/texture_rectangle.txt">GL_ARB_texture_rectangle</a>
 (RECT) will be attempted on OSX w/ ATI drivers.
 If NPOT is not available or RECT not chosen, the Texture class will simply upload a non-pow2-sized
 image into a standard pow2-sized texture (without any special
 scaling).
 Since the choice of extension (or whether one is used at
 all) depends on the user's machine configuration, developers are
 recommended to use <a href="#getImageTexCoords()"><code>getImageTexCoords()</code></a> and <a href="#getSubImageTexCoords(int,int,int,int)"><code>getSubImageTexCoords(int, int, int, int)</code></a>, as those methods will calculate the
 appropriate texture coordinates for the situation.

 <p>One caveat in this approach is that certain texture wrap modes
 (e.g.  <code>GL_REPEAT</code>) are not legal when the GL_ARB_texture_rectangle
 extension is in use.  Another issue to be aware of is that in the
 default pow2 scenario, if the original image does not have pow2
 dimensions, then wrapping may not work as one might expect since
 the image does not extend to the edges of the pow2 texture.  If
 texture wrapping is important, it is recommended to use only
 pow2-sized images with the Texture class.

 <p><a name="perftips"><b>Performance Tips</b></a>
 <br> For best performance, try to avoid calling <a href="#enable(com.jogamp.opengl.GL)"><code>enable(com.jogamp.opengl.GL)</code></a> /
 <a href="#bind(com.jogamp.opengl.GL)"><code>bind(com.jogamp.opengl.GL)</code></a> / <a href="#disable(com.jogamp.opengl.GL)"><code>disable(com.jogamp.opengl.GL)</code></a> any more than necessary. For
 example, applications using many Texture objects in the same scene
 may want to reduce the number of calls to both <a href="#enable(com.jogamp.opengl.GL)"><code>enable(com.jogamp.opengl.GL)</code></a> and
 <a href="#disable(com.jogamp.opengl.GL)"><code>disable(com.jogamp.opengl.GL)</code></a>. To do this it is necessary to call <a href="#getTarget()"><code>getTarget()</code></a> to make sure the OpenGL texture target is the same for
 all of the Texture objects in use; non-power-of-two textures using
 the GL_ARB_texture_rectangle extension use a different target than
 power-of-two textures using the GL_TEXTURE_2D target. Note that
 when switching between textures it is necessary to call <a href="#bind(com.jogamp.opengl.GL)"><code>bind(com.jogamp.opengl.GL)</code></a>, but when drawing many triangles all using the same texture,
 for best performance only one call to <a href="#bind(com.jogamp.opengl.GL)"><code>bind(com.jogamp.opengl.GL)</code></a> should be made.
 User may also utilize multiple texture units,
 see <a href="#textureCallOrder"> order of texture commands above</a>.

 <p><a name="premult"><b>Alpha premultiplication and blending</b></a>
 <p>
 <i>Disclaimer: Consider performing alpha premultiplication in shader code, if really desired! Otherwise use RGBA.</i><br/>
 </p>
 <p>
 The Texture class does not convert RGBA image data into
 premultiplied data when storing it into an OpenGL texture.
 </p>
 <p>
 The mathematically correct way to perform blending in OpenGL
 with the SrcOver "source over destination" mode, or any other
 Porter-Duff rule, is to use <i>premultiplied color components</i>,
 which means the R/G/ B color components must have been multiplied by
 the alpha value.  If using <i>premultiplied color components</i>
 it is important to use the correct blending function; for
 example, the SrcOver rule is expressed as:
<pre>
    gl.glBlendFunc(GL.GL_ONE, GL.GL_ONE_MINUS_SRC_ALPHA);
</pre>
 Also, when using a texture function like <code>GL_MODULATE</code> where
 the current color plays a role, it is important to remember to make
 sure that the color is specified in a premultiplied form, for
 example:
<pre>
    float a = ...;
    float r = r * a;
    float g = g * a;
    float b = b * a;
    gl.glColor4f(r, g, b, a);
</pre>

 For reference, here is a list of the Porter-Duff compositing rules
 and the associated OpenGL blend functions (source and destination
 factors) to use in the face of premultiplied alpha:

<CENTER>
<TABLE WIDTH="75%">
<TR> <TD> Rule     <TD> Source                  <TD> Dest
<TR> <TD> Clear    <TD> GL_ZERO                 <TD> GL_ZERO
<TR> <TD> Src      <TD> GL_ONE                  <TD> GL_ZERO
<TR> <TD> SrcOver  <TD> GL_ONE                  <TD> GL_ONE_MINUS_SRC_ALPHA
<TR> <TD> DstOver  <TD> GL_ONE_MINUS_DST_ALPHA  <TD> GL_ONE
<TR> <TD> SrcIn    <TD> GL_DST_ALPHA            <TD> GL_ZERO
<TR> <TD> DstIn    <TD> GL_ZERO                 <TD> GL_SRC_ALPHA
<TR> <TD> SrcOut   <TD> GL_ONE_MINUS_DST_ALPHA  <TD> GL_ZERO
<TR> <TD> DstOut   <TD> GL_ZERO                 <TD> GL_ONE_MINUS_SRC_ALPHA
<TR> <TD> Dst      <TD> GL_ZERO                 <TD> GL_ONE
<TR> <TD> SrcAtop  <TD> GL_DST_ALPHA            <TD> GL_ONE_MINUS_SRC_ALPHA
<TR> <TD> DstAtop  <TD> GL_ONE_MINUS_DST_ALPHA  <TD> GL_SRC_ALPHA
<TR> <TD> AlphaXor <TD> GL_ONE_MINUS_DST_ALPHA  <TD> GL_ONE_MINUS_SRC_ALPHA
</TABLE>
</CENTER></div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Chris Campbell, Kenneth Russell, et.al.</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(int)">Texture</a></span>&#8203;(int&nbsp;target)</code></th>
<td class="colLast">
<div class="block">Constructor for use when creating e.g.</div>
</td>
</tr>
<tr class="rowColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(int,int,int,int,int,int,boolean)">Texture</a></span>&#8203;(int&nbsp;textureID,
       int&nbsp;target,
       int&nbsp;texWidth,
       int&nbsp;texHeight,
       int&nbsp;imgWidth,
       int&nbsp;imgHeight,
       boolean&nbsp;mustFlipVertically)</code></th>
<td class="colLast">
<div class="block">Constructor to wrap an OpenGL texture ID from an external library and allows
 some of the base methods from the Texture class, such as
 binding and querying of texture coordinates, to be used with
 it.</div>
</td>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData)">Texture</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
       <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#bind(com.jogamp.opengl.GL)">bind</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Binds this texture to the given GL context.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#destroy(com.jogamp.opengl.GL)">destroy</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Destroys the native resources used by this texture object.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#disable(com.jogamp.opengl.GL)">disable</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Disables this texture's target (e.g., GL_TEXTURE_2D) in the
 given GL state.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#enable(com.jogamp.opengl.GL)">enable</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Enables this texture's target (e.g., GL_TEXTURE_2D) in the
 given GL context's state.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>float</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getAspectRatio()">getAspectRatio</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the original aspect ratio of the image, defined as (image
 width) / (image height), before any scaling that might have
 occurred as a result of using the GLU mipmap routines.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getEstimatedMemorySize()">getEstimatedMemorySize</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns an estimate of the amount of texture memory in bytes
        this Texture consumes.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getHeight()">getHeight</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the height of the allocated OpenGL texture in pixels.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getImageHeight()">getImageHeight</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the height of the image contained within this texture.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getImageTarget()">getImageTarget</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the image OpenGL "target" of this texture, or its sub-components if cubemap.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code><a href="TextureCoords.html" title="class in com.jogamp.opengl.util.texture">TextureCoords</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getImageTexCoords()">getImageTexCoords</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the set of texture coordinates corresponding to the
 entire image.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getImageWidth()">getImageWidth</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the width of the image contained within this texture.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMustFlipVertically()">getMustFlipVertically</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this texture's texture coordinates must be
 flipped vertically in order to properly display the texture.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code><a href="TextureCoords.html" title="class in com.jogamp.opengl.util.texture">TextureCoords</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSubImageTexCoords(int,int,int,int)">getSubImageTexCoords</a></span>&#8203;(int&nbsp;x1,
                    int&nbsp;y1,
                    int&nbsp;x2,
                    int&nbsp;y2)</code></th>
<td class="colLast">
<div class="block">Returns the set of texture coordinates corresponding to the
 specified sub-image.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTarget()">getTarget</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the OpenGL "target" of this texture.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureObject()">getTextureObject</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the underlying OpenGL texture object for this texture,
 maybe <code>0</code> if not yet generated.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTextureObject(com.jogamp.opengl.GL)">getTextureObject</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Returns the underlying OpenGL texture object for this texture
 and generates it if not done yet.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getWidth()">getWidth</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the width of the allocated OpenGL texture in pixels.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isUsingAutoMipmapGeneration()">isUsingAutoMipmapGeneration</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this Texture is using automatic mipmap
        generation (via the OpenGL texture parameter
        GL_GENERATE_MIPMAP).</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setMustFlipVertically(boolean)">setMustFlipVertically</a></span>&#8203;(boolean&nbsp;v)</code></th>
<td class="colLast">
<div class="block">Change whether the TextureData requires a vertical flip of
 the texture coords.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTexParameterf(com.jogamp.opengl.GL,int,float)">setTexParameterf</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                int&nbsp;parameterName,
                float&nbsp;value)</code></th>
<td class="colLast">
<div class="block">Sets the OpenGL floating-point texture parameter for the
 texture's target.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTexParameterfv(com.jogamp.opengl.GL,int,float%5B%5D,int)">setTexParameterfv</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                 int&nbsp;parameterName,
                 float[]&nbsp;params,
                 int&nbsp;params_offset)</code></th>
<td class="colLast">
<div class="block">Sets the OpenGL multi-floating-point texture parameter for the
 texture's target.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTexParameterfv(com.jogamp.opengl.GL,int,java.nio.FloatBuffer)">setTexParameterfv</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                 int&nbsp;parameterName,
                 <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;params)</code></th>
<td class="colLast">
<div class="block">Sets the OpenGL multi-floating-point texture parameter for the
 texture's target.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTexParameteri(com.jogamp.opengl.GL,int,int)">setTexParameteri</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                int&nbsp;parameterName,
                int&nbsp;value)</code></th>
<td class="colLast">
<div class="block">Sets the OpenGL integer texture parameter for the texture's
 target.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTexParameteriv(com.jogamp.opengl.GL,int,int%5B%5D,int)">setTexParameteriv</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                 int&nbsp;parameterName,
                 int[]&nbsp;params,
                 int&nbsp;params_offset)</code></th>
<td class="colLast">
<div class="block">Sets the OpenGL multi-integer texture parameter for the texture's
 target.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTexParameteriv(com.jogamp.opengl.GL,int,java.nio.IntBuffer)">setTexParameteriv</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                 int&nbsp;parameterName,
                 <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/IntBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">IntBuffer</a>&nbsp;params)</code></th>
<td class="colLast">
<div class="block">Sets the OpenGL multi-integer texture parameter for the texture's
 target.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#updateImage(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData)">updateImage</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
           <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data)</code></th>
<td class="colLast">
<div class="block">Updates the entire content area incl.</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#updateImage(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData,int)">updateImage</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
           <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data,
           int&nbsp;targetOverride)</code></th>
<td class="colLast">
<div class="block">Updates the content area incl.</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#updateSubImage(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData,int,int,int)">updateSubImage</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
              <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data,
              int&nbsp;mipmapLevel,
              int&nbsp;x,
              int&nbsp;y)</code></th>
<td class="colLast">
<div class="block">Updates a subregion of the content area of this texture using the
 given data.</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#updateSubImage(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData,int,int,int,int,int,int,int)">updateSubImage</a></span>&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
              <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data,
              int&nbsp;mipmapLevel,
              int&nbsp;dstx,
              int&nbsp;dsty,
              int&nbsp;srcx,
              int&nbsp;srcy,
              int&nbsp;width,
              int&nbsp;height)</code></th>
<td class="colLast">
<div class="block">Updates a subregion of the content area of this texture using the
 specified sub-region of the given data.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Texture</h4>
<pre>public&nbsp;Texture&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
               <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data)
        throws <a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code></dd>
</dl>
</li>
</ul>
<a id="&lt;init&gt;(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Texture</h4>
<pre>public&nbsp;Texture&#8203;(int&nbsp;target)</pre>
<div class="block">Constructor for use when creating e.g. cube maps, where there is
 no initial texture data</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>target</code> - the OpenGL texture target, eg GL.GL_TEXTURE_2D,
               GL2.GL_TEXTURE_RECTANGLE</dd>
</dl>
</li>
</ul>
<a id="&lt;init&gt;(int,int,int,int,int,int,boolean)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Texture</h4>
<pre>public&nbsp;Texture&#8203;(int&nbsp;textureID,
               int&nbsp;target,
               int&nbsp;texWidth,
               int&nbsp;texHeight,
               int&nbsp;imgWidth,
               int&nbsp;imgHeight,
               boolean&nbsp;mustFlipVertically)</pre>
<div class="block">Constructor to wrap an OpenGL texture ID from an external library and allows
 some of the base methods from the Texture class, such as
 binding and querying of texture coordinates, to be used with
 it. Attempts to update such textures' contents will yield
 undefined results.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>textureID</code> - the OpenGL texture object to wrap</dd>
<dd><code>target</code> - the OpenGL texture target, eg GL.GL_TEXTURE_2D,
               GL2.GL_TEXTURE_RECTANGLE</dd>
<dd><code>texWidth</code> - the width of the texture in pixels</dd>
<dd><code>texHeight</code> - the height of the texture in pixels</dd>
<dd><code>imgWidth</code> - the width of the image within the texture in
          pixels (if the content is a sub-rectangle in the upper
          left corner); otherwise, pass in texWidth</dd>
<dd><code>imgHeight</code> - the height of the image within the texture in
          pixels (if the content is a sub-rectangle in the upper
          left corner); otherwise, pass in texHeight</dd>
<dd><code>mustFlipVertically</code> - indicates whether the texture
                           coordinates must be flipped vertically
                           in order to properly display the
                           texture</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
<a id="enable(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>enable</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;enable&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)
            throws <a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Enables this texture's target (e.g., GL_TEXTURE_2D) in the
 given GL context's state. This method is a shorthand equivalent
 of the following OpenGL code:
 <pre>
   gl.glEnable(texture.getTarget());
 </pre>
 <p>
 Call is ignored if the <a href="../../GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> object's context
 is using a core profile, see <a href="../../GLBase.html#isGLcore()"><code>GLBase.isGLcore()</code></a>,
 or if <a href="#getTarget()"><code>getTarget()</code></a> is <a href="../../GLES2.html#GL_TEXTURE_EXTERNAL_OES"><code>GLES2.GL_TEXTURE_EXTERNAL_OES</code></a>.
 </p>
 <p>
 See the <a href="#perftips">performance tips</a> above for hints
 on how to maximize performance when using many Texture objects.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - the current GL object</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if no OpenGL context was current or if any
 OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="disable(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>disable</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;disable&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)
             throws <a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Disables this texture's target (e.g., GL_TEXTURE_2D) in the
 given GL state. This method is a shorthand equivalent
 of the following OpenGL code:
 <pre>
   gl.glDisable(texture.getTarget());
 </pre>
 <p>
 Call is ignored if the <a href="../../GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> object's context
 is using a core profile, see <a href="../../GLBase.html#isGLcore()"><code>GLBase.isGLcore()</code></a>,
 or if <a href="#getTarget()"><code>getTarget()</code></a> is <a href="../../GLES2.html#GL_TEXTURE_EXTERNAL_OES"><code>GLES2.GL_TEXTURE_EXTERNAL_OES</code></a>.
 </p>
 <p>
 See the <a href="#perftips">performance tips</a> above for hints
 on how to maximize performance when using many Texture objects.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - the current GL object</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if no OpenGL context was current or if any
 OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="bind(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>bind</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;bind&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)
          throws <a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Binds this texture to the given GL context. This method is a
 shorthand equivalent of the following OpenGL code:
     <pre>
     gl.glBindTexture(texture.getTarget(), texture.getTextureObject());
     </pre>

 See the <a href="#perftips">performance tips</a> above for hints
 on how to maximize performance when using many Texture objects.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - the current GL context</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if no OpenGL context was current or if any
 OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="destroy(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>destroy</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;destroy&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)
             throws <a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Destroys the native resources used by this texture object.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="getTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTarget</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getTarget()</pre>
<div class="block">Returns the OpenGL "target" of this texture.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../GL.html#GL_TEXTURE_2D"><code>GL.GL_TEXTURE_2D</code></a>, 
<a href="../../GL2.html#GL_TEXTURE_RECTANGLE_ARB"><code>GL2.GL_TEXTURE_RECTANGLE_ARB</code></a></dd>
</dl>
</li>
</ul>
<a id="getImageTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getImageTarget</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getImageTarget()</pre>
<div class="block">Returns the image OpenGL "target" of this texture, or its sub-components if cubemap.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../GL.html#GL_TEXTURE_2D"><code>GL.GL_TEXTURE_2D</code></a>, 
<a href="../../GL2.html#GL_TEXTURE_RECTANGLE_ARB"><code>GL2.GL_TEXTURE_RECTANGLE_ARB</code></a></dd>
</dl>
</li>
</ul>
<a id="getWidth()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getWidth</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getWidth()</pre>
<div class="block">Returns the width of the allocated OpenGL texture in pixels.
 Note that the texture width will be greater than or equal to the
 width of the image contained within.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the width of the texture</dd>
</dl>
</li>
</ul>
<a id="getHeight()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getHeight</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getHeight()</pre>
<div class="block">Returns the height of the allocated OpenGL texture in pixels.
 Note that the texture height will be greater than or equal to the
 height of the image contained within.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the height of the texture</dd>
</dl>
</li>
</ul>
<a id="getImageWidth()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getImageWidth</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getImageWidth()</pre>
<div class="block">Returns the width of the image contained within this texture.
 Note that for non-power-of-two textures in particular this may
 not be equal to the result of <a href="#getWidth()"><code>getWidth()</code></a>. It is
 recommended that applications call <a href="#getImageTexCoords()"><code>getImageTexCoords()</code></a> and
 <a href="#getSubImageTexCoords(int,int,int,int)"><code>getSubImageTexCoords(int, int, int, int)</code></a> rather than using this API
 directly.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the width of the image</dd>
</dl>
</li>
</ul>
<a id="getImageHeight()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getImageHeight</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getImageHeight()</pre>
<div class="block">Returns the height of the image contained within this texture.
 Note that for non-power-of-two textures in particular this may
 not be equal to the result of <a href="#getHeight()"><code>getHeight()</code></a>. It is
 recommended that applications call <a href="#getImageTexCoords()"><code>getImageTexCoords()</code></a> and
 <a href="#getSubImageTexCoords(int,int,int,int)"><code>getSubImageTexCoords(int, int, int, int)</code></a> rather than using this API
 directly.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the height of the image</dd>
</dl>
</li>
</ul>
<a id="getAspectRatio()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAspectRatio</h4>
<pre class="methodSignature">public&nbsp;float&nbsp;getAspectRatio()</pre>
<div class="block">Returns the original aspect ratio of the image, defined as (image
 width) / (image height), before any scaling that might have
 occurred as a result of using the GLU mipmap routines.</div>
</li>
</ul>
<a id="getImageTexCoords()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getImageTexCoords</h4>
<pre class="methodSignature">public&nbsp;<a href="TextureCoords.html" title="class in com.jogamp.opengl.util.texture">TextureCoords</a>&nbsp;getImageTexCoords()</pre>
<div class="block">Returns the set of texture coordinates corresponding to the
 entire image. If the TextureData indicated that the texture
 coordinates must be flipped vertically, the returned
 TextureCoords will take that into account.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the texture coordinates corresponding to the entire image</dd>
</dl>
</li>
</ul>
<a id="getSubImageTexCoords(int,int,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSubImageTexCoords</h4>
<pre class="methodSignature">public&nbsp;<a href="TextureCoords.html" title="class in com.jogamp.opengl.util.texture">TextureCoords</a>&nbsp;getSubImageTexCoords&#8203;(int&nbsp;x1,
                                          int&nbsp;y1,
                                          int&nbsp;x2,
                                          int&nbsp;y2)</pre>
<div class="block">Returns the set of texture coordinates corresponding to the
 specified sub-image. The (x1, y1) and (x2, y2) points are
 specified in terms of pixels starting from the lower-left of the
 image. (x1, y1) should specify the lower-left corner of the
 sub-image and (x2, y2) the upper-right corner of the sub-image.
 If the TextureData indicated that the texture coordinates must be
 flipped vertically, the returned TextureCoords will take that
 into account; this should not be handled by the end user in the
 specification of the y1 and y2 coordinates.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the texture coordinates corresponding to the specified sub-image</dd>
</dl>
</li>
</ul>
<a id="updateImage(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateImage</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;updateImage&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                        <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data)
                 throws <a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Updates the entire content area incl. <a href="TextureCoords.html" title="class in com.jogamp.opengl.util.texture"><code>TextureCoords</code></a>
 of this texture using the data in the given image.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="getMustFlipVertically()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMustFlipVertically</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;getMustFlipVertically()</pre>
<div class="block">Indicates whether this texture's texture coordinates must be
 flipped vertically in order to properly display the texture. This
 is handled automatically by <a href="#getImageTexCoords()"><code>getImageTexCoords</code></a> and <a href="#getSubImageTexCoords(int,int,int,int)"><code>getSubImageTexCoords</code></a>, but applications may generate or otherwise
 produce texture coordinates which must be corrected.</div>
</li>
</ul>
<a id="setMustFlipVertically(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMustFlipVertically</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setMustFlipVertically&#8203;(boolean&nbsp;v)</pre>
<div class="block">Change whether the TextureData requires a vertical flip of
 the texture coords.
 <p>
 No-op if no change, otherwise generates new <a href="TextureCoords.html" title="class in com.jogamp.opengl.util.texture"><code>TextureCoords</code></a>.
 </p></div>
</li>
</ul>
<a id="updateImage(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateImage</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;updateImage&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                        <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data,
                        int&nbsp;targetOverride)
                 throws <a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Updates the content area incl. <a href="TextureCoords.html" title="class in com.jogamp.opengl.util.texture"><code>TextureCoords</code></a> of the specified target of this texture
 using the data in the given image. In general this is intended
 for construction of cube maps.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="updateSubImage(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData,int,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateSubImage</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;updateSubImage&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                           <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data,
                           int&nbsp;mipmapLevel,
                           int&nbsp;x,
                           int&nbsp;y)
                    throws <a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Updates a subregion of the content area of this texture using the
 given data. If automatic mipmap generation is in use (see <a href="#isUsingAutoMipmapGeneration()"><code>isUsingAutoMipmapGeneration</code></a>),
 updates to the base (level 0) mipmap will cause the lower-level
 mipmaps to be regenerated, and updates to other mipmap levels
 will be ignored. Otherwise, if automatic mipmap generation is not
 in use, only updates the specified mipmap level and does not
 re-generate mipmaps if they were originally produced or loaded.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>data</code> - the image data to be uploaded to this texture</dd>
<dd><code>mipmapLevel</code> - the mipmap level of the texture to set. If
 this is non-zero and the TextureData contains mipmap data, the
 appropriate mipmap level will be selected.</dd>
<dd><code>x</code> - the x offset (in pixels) relative to the lower-left corner
 of this texture</dd>
<dd><code>y</code> - the y offset (in pixels) relative to the lower-left corner
 of this texture</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="updateSubImage(com.jogamp.opengl.GL,com.jogamp.opengl.util.texture.TextureData,int,int,int,int,int,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateSubImage</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;updateSubImage&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                           <a href="TextureData.html" title="class in com.jogamp.opengl.util.texture">TextureData</a>&nbsp;data,
                           int&nbsp;mipmapLevel,
                           int&nbsp;dstx,
                           int&nbsp;dsty,
                           int&nbsp;srcx,
                           int&nbsp;srcy,
                           int&nbsp;width,
                           int&nbsp;height)
                    throws <a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Updates a subregion of the content area of this texture using the
 specified sub-region of the given data.  If automatic mipmap
 generation is in use (see <a href="#isUsingAutoMipmapGeneration()"><code>isUsingAutoMipmapGeneration</code></a>), updates to the base (level 0)
 mipmap will cause the lower-level mipmaps to be regenerated, and
 updates to other mipmap levels will be ignored. Otherwise, if
 automatic mipmap generation is not in use, only updates the
 specified mipmap level and does not re-generate mipmaps if they
 were originally produced or loaded. This method is only supported
 for uncompressed TextureData sources.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>data</code> - the image data to be uploaded to this texture</dd>
<dd><code>mipmapLevel</code> - the mipmap level of the texture to set. If
 this is non-zero and the TextureData contains mipmap data, the
 appropriate mipmap level will be selected.</dd>
<dd><code>dstx</code> - the x offset (in pixels) relative to the lower-left corner
 of this texture where the update will be applied</dd>
<dd><code>dsty</code> - the y offset (in pixels) relative to the lower-left corner
 of this texture where the update will be applied</dd>
<dd><code>srcx</code> - the x offset (in pixels) relative to the lower-left corner
 of the supplied TextureData from which to fetch the update rectangle</dd>
<dd><code>srcy</code> - the y offset (in pixels) relative to the lower-left corner
 of the supplied TextureData from which to fetch the update rectangle</dd>
<dd><code>width</code> - the width (in pixels) of the rectangle to be updated</dd>
<dd><code>height</code> - the height (in pixels) of the rectangle to be updated</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if no OpenGL context was current or if any
 OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="setTexParameterf(com.jogamp.opengl.GL,int,float)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTexParameterf</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setTexParameterf&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                             int&nbsp;parameterName,
                             float&nbsp;value)</pre>
<div class="block">Sets the OpenGL floating-point texture parameter for the
 texture's target. This gives control over parameters such as
 GL_TEXTURE_MAX_ANISOTROPY_EXT. Causes this texture to be bound to
 the current texture state.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if no OpenGL context was current or if any
 OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="setTexParameterfv(com.jogamp.opengl.GL,int,java.nio.FloatBuffer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTexParameterfv</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setTexParameterfv&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                              int&nbsp;parameterName,
                              <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">FloatBuffer</a>&nbsp;params)</pre>
<div class="block">Sets the OpenGL multi-floating-point texture parameter for the
 texture's target. Causes this texture to be bound to the current
 texture state.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="setTexParameterfv(com.jogamp.opengl.GL,int,float[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTexParameterfv</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setTexParameterfv&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                              int&nbsp;parameterName,
                              float[]&nbsp;params,
                              int&nbsp;params_offset)</pre>
<div class="block">Sets the OpenGL multi-floating-point texture parameter for the
 texture's target. Causes this texture to be bound to the current
 texture state.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="setTexParameteri(com.jogamp.opengl.GL,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTexParameteri</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setTexParameteri&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                             int&nbsp;parameterName,
                             int&nbsp;value)</pre>
<div class="block">Sets the OpenGL integer texture parameter for the texture's
 target. This gives control over parameters such as
 GL_TEXTURE_WRAP_S and GL_TEXTURE_WRAP_T, which by default are set
 to GL_CLAMP_TO_EDGE if OpenGL 1.2 is supported on the current
 platform and GL_CLAMP if not. Causes this texture to be bound to
 the current texture state.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="setTexParameteriv(com.jogamp.opengl.GL,int,java.nio.IntBuffer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTexParameteriv</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setTexParameteriv&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                              int&nbsp;parameterName,
                              <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/IntBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">IntBuffer</a>&nbsp;params)</pre>
<div class="block">Sets the OpenGL multi-integer texture parameter for the texture's
 target. Causes this texture to be bound to the current texture
 state.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="setTexParameteriv(com.jogamp.opengl.GL,int,int[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTexParameteriv</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setTexParameteriv&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl,
                              int&nbsp;parameterName,
                              int[]&nbsp;params,
                              int&nbsp;params_offset)</pre>
<div class="block">Sets the OpenGL multi-integer texture parameter for the texture's
 target. Causes this texture to be bound to the current texture
 state.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if any OpenGL-related errors occurred</dd>
</dl>
</li>
</ul>
<a id="getTextureObject(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureObject</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getTextureObject&#8203;(<a href="../../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</pre>
<div class="block">Returns the underlying OpenGL texture object for this texture
 and generates it if not done yet.
 <p>
 Most applications will not need to access this, since it is
 handled automatically by the bind(GL) and destroy(GL) APIs.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - required to be valid and current in case the texture object has not been generated yet,
           otherwise it may be <code>null</code>.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getTextureObject()"><code>getTextureObject()</code></a></dd>
</dl>
</li>
</ul>
<a id="getTextureObject()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTextureObject</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getTextureObject()</pre>
<div class="block">Returns the underlying OpenGL texture object for this texture,
 maybe <code>0</code> if not yet generated.
 <p>
 Most applications will not need to access this, since it is
 handled automatically by the bind(GL) and destroy(GL) APIs.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getTextureObject(com.jogamp.opengl.GL)"><code>getTextureObject(GL)</code></a></dd>
</dl>
</li>
</ul>
<a id="getEstimatedMemorySize()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEstimatedMemorySize</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getEstimatedMemorySize()</pre>
<div class="block">Returns an estimate of the amount of texture memory in bytes
        this Texture consumes. It should only be treated as an estimate;
        most applications should not need to query this but instead let
        the OpenGL implementation page textures in and out as
        necessary.</div>
</li>
</ul>
<a id="isUsingAutoMipmapGeneration()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>isUsingAutoMipmapGeneration</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;isUsingAutoMipmapGeneration()</pre>
<div class="block">Indicates whether this Texture is using automatic mipmap
        generation (via the OpenGL texture parameter
        GL_GENERATE_MIPMAP). This will automatically be used when
        mipmapping is requested via the TextureData and either OpenGL
        1.4 or the GL_SGIS_generate_mipmap extension is available. If
        so, updates to the base image (mipmap level 0) will
        automatically propagate down to the lower mipmap levels. Manual
        updates of the mipmap data at these lower levels will be
        ignored.</div>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../index.html?com/jogamp/opengl/util/texture/Texture.html" target="_top">Frames</a></li>
<li><a href="Texture.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
