<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>TileRendererBase (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="TileRendererBase (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":6,"i2":10,"i3":10,"i4":6,"i5":6,"i6":10,"i7":10,"i8":10,"i9":6,"i10":10,"i11":6,"i12":10,"i13":6,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/util/TileRendererBase.html" target="_top">Frames</a></li>
<li><a href="TileRendererBase.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl.util</a></div>
<h2 title="Class TileRendererBase" class="title">Class TileRendererBase</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.util.TileRendererBase</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><code><a href="RandomTileRenderer.html" title="class in com.jogamp.opengl.util">RandomTileRenderer</a></code>, <code><a href="TileRenderer.html" title="class in com.jogamp.opengl.util">TileRenderer</a></code></dd>
</dl>
<hr>
<pre>public abstract class <span class="typeNameLabel">TileRendererBase</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">A fairly direct port of Brian Paul's tile rendering library, found
 at <a href="http://www.mesa3d.org/brianp/TR.html">
 http://www.mesa3d.org/brianp/TR.html </a> . I've java-fied it, but
 the functionality is the same.
 <p>
 Original code Copyright (C) 1997-2005 Brian Paul. Licensed under
 BSD-compatible terms with permission of the author. See LICENSE.txt
 for license information.
 </p>
 <p>
 Enhanced for <a href="../GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> and <a href="../GL2ES3.html" title="interface in com.jogamp.opengl"><code>GL2ES3</code></a>, abstracted to suit <a href="TileRenderer.html" title="class in com.jogamp.opengl.util"><code>TileRenderer</code></a> and <a href="RandomTileRenderer.html" title="class in com.jogamp.opengl.util"><code>RandomTileRenderer</code></a>.
 </p>
 <a name="pmvmatrix"><h5>PMV Matrix Considerations</h5></a>
 <p>
 The PMV matrix needs to be reshaped in user code
 after calling <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a>, See <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a>.
 </p>
 <p>
 If <a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>attaching to</code></a> an <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>,
 the <a href="TileRendererBase.TileRendererListener.html#reshapeTile(com.jogamp.opengl.util.TileRendererBase,int,int,int,int,int,int)"><code>TileRendererBase.TileRendererListener.reshapeTile(TileRendererBase, int, int, int, int, int, int)</code></a> method
 is being called after <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a> for each rendered tile.
 It's implementation shall reshape the PMV matrix according to <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a>.
 </p>
 <a name="glprequirement"><h5>GL Profile Requirement</h5></a>
 <p>
 Note that <a href="#setImageBuffer(com.jogamp.opengl.util.GLPixelBuffer)"><code>image buffer</code></a> can only be used
 in conjunction w/ a <a href="../GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> instance &ge; <a href="../GL2ES3.html" title="interface in com.jogamp.opengl"><code>GL2ES3</code></a> passed to <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a> and <a href="#endTile(com.jogamp.opengl.GL)"><code>endTile(GL)</code></a>.<br>
 This is due to setting up the <a href="../GL2ES3.html#GL_PACK_ROW_LENGTH"><code>pack row length</code></a>
 for an <a href="#setImageSize(int,int)"><code>image width</code></a> != tile-width, which usually is the case.<br>
 Hence a <a href="../GLException.html" title="class in com.jogamp.opengl"><code>GLException</code></a> is thrown in both methods,
 if using an <a href="#setImageBuffer(com.jogamp.opengl.util.GLPixelBuffer)"><code>image buffer</code></a>
 and passing a <a href="../GL.html" title="interface in com.jogamp.opengl"><code>GL</code></a> instance &lt; <a href="../GL2ES3.html" title="interface in com.jogamp.opengl"><code>GL2ES3</code></a>.
 </p>
 <p>
 Further more, reading back of MSAA buffers is only supported since <a href="../GL2ES3.html" title="interface in com.jogamp.opengl"><code>GL2ES3</code></a>
 since it requires to set the <a href="../GL2ES3.html#glReadBuffer(int)"><code>read-buffer</code></a>.
 </p></div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>ryanm, sgothel</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Class</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static interface&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="TileRendererBase.TileRendererListener.html" title="interface in com.jogamp.opengl.util">TileRendererBase.TileRendererListener</a></span></code></th>
<td class="colLast">
<div class="block">Listener for tile renderer events, intended to extend <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> implementations,
 enabling tile rendering via <a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>attachAutoDrawable(GLAutoDrawable)</code></a>.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TR_CURRENT_TILE_HEIGHT">TR_CURRENT_TILE_HEIGHT</a></span></code></th>
<td class="colLast">
<div class="block">The height of the current tile.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TR_CURRENT_TILE_WIDTH">TR_CURRENT_TILE_WIDTH</a></span></code></th>
<td class="colLast">
<div class="block">The width of the current tile.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TR_CURRENT_TILE_X_POS">TR_CURRENT_TILE_X_POS</a></span></code></th>
<td class="colLast">
<div class="block">The x-pos of the current tile.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TR_CURRENT_TILE_Y_POS">TR_CURRENT_TILE_Y_POS</a></span></code></th>
<td class="colLast">
<div class="block">The y-pos of the current tile.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TR_IMAGE_HEIGHT">TR_IMAGE_HEIGHT</a></span></code></th>
<td class="colLast">
<div class="block">The height of the final image.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TR_IMAGE_WIDTH">TR_IMAGE_WIDTH</a></span></code></th>
<td class="colLast">
<div class="block">The width of the final image.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)">attachAutoDrawable</a></span>&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;glad)</code></th>
<td class="colLast">
<div class="block">Attaches the given <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> to this tile renderer.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#beginTile(com.jogamp.opengl.GL)">beginTile</a></span>&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Begins rendering a tile.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#detachAutoDrawable()">detachAutoDrawable</a></span>()</code></th>
<td class="colLast">
<div class="block">Detaches the given <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> from this tile renderer.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#display()">display</a></span>()</code></th>
<td class="colLast">
<div class="block">Rendering one tile, by simply calling <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a>.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#endTile(com.jogamp.opengl.GL)">endTile</a></span>&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Must be called after rendering the scene,
 see <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a>.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#eot()">eot</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if <i>end of tiling</i> has been reached, otherwise false.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getAttachedDrawable()">getAttachedDrawable</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a previously <a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>attached</code></a> <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>,
 <code>null</code> if none is attached.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getImageBuffer()">getImageBuffer</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code><a href="../../nativewindow/util/DimensionImmutable.html" title="interface in com.jogamp.nativewindow.util">DimensionImmutable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getImageSize()">getImageSize</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getParam(int)">getParam</a></span>&#8203;(int&nbsp;pname)</code></th>
<td class="colLast">
<div class="block">Gets the parameters of this TileRenderer object</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getTileBuffer()">getTileBuffer</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isSetup()">isSetup</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if this instance is setup properly, i.e.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reqPreSwapBuffers(com.jogamp.opengl.GLCapabilitiesImmutable)">reqPreSwapBuffers</a></span>&#8203;(<a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;chosenCaps)</code></th>
<td class="colLast">
<div class="block">Determines whether the chosen <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>
 requires a <i>pre-<a href="../GLDrawable.html#swapBuffers()"><code>swap-buffers</code></a></i>
 before accessing the results, i.e.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reset()">reset</a></span>()</code></th>
<td class="colLast">
<div class="block">Method resets implementation's internal state to <i>start of tiling</i>
 as required for <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a> if <a href="#eot()"><code>end of tiling</code></a> has been reached.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setGLEventListener(com.jogamp.opengl.GLEventListener,com.jogamp.opengl.GLEventListener)">setGLEventListener</a></span>&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;preTile,
                  <a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;postTile)</code></th>
<td class="colLast">
<div class="block">Set <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> for pre- and post operations when used w/
 <a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>attachAutoDrawable(GLAutoDrawable)</code></a>
 for each <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> callback.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setImageBuffer(com.jogamp.opengl.util.GLPixelBuffer)">setImageBuffer</a></span>&#8203;(<a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a>&nbsp;buffer)</code></th>
<td class="colLast">
<div class="block">Sets the buffer in which to store the final image</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setImageSize(int,int)">setImageSize</a></span>&#8203;(int&nbsp;width,
            int&nbsp;height)</code></th>
<td class="colLast">
<div class="block">Sets the desired size of the final image</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTileBuffer(com.jogamp.opengl.util.GLPixelBuffer)">setTileBuffer</a></span>&#8203;(<a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a>&nbsp;buffer)</code></th>
<td class="colLast">
<div class="block">Specify a buffer the tiles to be copied to.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString(java.lang.StringBuilder)">toString</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="TR_IMAGE_WIDTH">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TR_IMAGE_WIDTH</h4>
<pre>public static final&nbsp;int TR_IMAGE_WIDTH</pre>
<div class="block">The width of the final image. See <a href="#getParam(int)"><code>getParam(int)</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.util.TileRendererBase.TR_IMAGE_WIDTH">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TR_IMAGE_HEIGHT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TR_IMAGE_HEIGHT</h4>
<pre>public static final&nbsp;int TR_IMAGE_HEIGHT</pre>
<div class="block">The height of the final image. See <a href="#getParam(int)"><code>getParam(int)</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.util.TileRendererBase.TR_IMAGE_HEIGHT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TR_CURRENT_TILE_X_POS">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TR_CURRENT_TILE_X_POS</h4>
<pre>public static final&nbsp;int TR_CURRENT_TILE_X_POS</pre>
<div class="block">The x-pos of the current tile. See <a href="#getParam(int)"><code>getParam(int)</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.util.TileRendererBase.TR_CURRENT_TILE_X_POS">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TR_CURRENT_TILE_Y_POS">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TR_CURRENT_TILE_Y_POS</h4>
<pre>public static final&nbsp;int TR_CURRENT_TILE_Y_POS</pre>
<div class="block">The y-pos of the current tile. See <a href="#getParam(int)"><code>getParam(int)</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.util.TileRendererBase.TR_CURRENT_TILE_Y_POS">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TR_CURRENT_TILE_WIDTH">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TR_CURRENT_TILE_WIDTH</h4>
<pre>public static final&nbsp;int TR_CURRENT_TILE_WIDTH</pre>
<div class="block">The width of the current tile. See <a href="#getParam(int)"><code>getParam(int)</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.util.TileRendererBase.TR_CURRENT_TILE_WIDTH">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TR_CURRENT_TILE_HEIGHT">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TR_CURRENT_TILE_HEIGHT</h4>
<pre>public static final&nbsp;int TR_CURRENT_TILE_HEIGHT</pre>
<div class="block">The height of the current tile. See <a href="#getParam(int)"><code>getParam(int)</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.opengl.util.TileRendererBase.TR_CURRENT_TILE_HEIGHT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="toString(java.lang.StringBuilder)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;toString&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb)</pre>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
<a id="getParam(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getParam</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getParam&#8203;(int&nbsp;pname)
                      throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<div class="block">Gets the parameters of this TileRenderer object</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pname</code> - The parameter name that is to be retrieved</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the value of the parameter</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if <code>pname</code> is not handled</dd>
</dl>
</li>
</ul>
<a id="setTileBuffer(com.jogamp.opengl.util.GLPixelBuffer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTileBuffer</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setTileBuffer&#8203;(<a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a>&nbsp;buffer)</pre>
<div class="block">Specify a buffer the tiles to be copied to. This is not
 necessary for the creation of the final image, but useful if you
 want to inspect each tile in turn.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>buffer</code> - The buffer itself. Must be large enough to contain a random tile</dd>
</dl>
</li>
</ul>
<a id="getTileBuffer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTileBuffer</h4>
<pre class="methodSignature">public final&nbsp;<a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a>&nbsp;getTileBuffer()</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setTileBuffer(com.jogamp.opengl.util.GLPixelBuffer)"><code>setTileBuffer(GLPixelBuffer)</code></a></dd>
</dl>
</li>
</ul>
<a id="setImageSize(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setImageSize</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setImageSize&#8203;(int&nbsp;width,
                         int&nbsp;height)</pre>
<div class="block">Sets the desired size of the final image</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>width</code> - The width of the final image</dd>
<dd><code>height</code> - The height of the final image</dd>
</dl>
</li>
</ul>
<a id="getImageSize()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getImageSize</h4>
<pre class="methodSignature">public final&nbsp;<a href="../../nativewindow/util/DimensionImmutable.html" title="interface in com.jogamp.nativewindow.util">DimensionImmutable</a>&nbsp;getImageSize()</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setImageSize(int,int)"><code>setImageSize(int, int)</code></a></dd>
</dl>
</li>
</ul>
<a id="setImageBuffer(com.jogamp.opengl.util.GLPixelBuffer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setImageBuffer</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setImageBuffer&#8203;(<a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a>&nbsp;buffer)</pre>
<div class="block">Sets the buffer in which to store the final image</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>buffer</code> - the buffer itself, must be large enough to hold the final image</dd>
</dl>
</li>
</ul>
<a id="getImageBuffer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getImageBuffer</h4>
<pre class="methodSignature">public final&nbsp;<a href="GLPixelBuffer.html" title="class in com.jogamp.opengl.util">GLPixelBuffer</a>&nbsp;getImageBuffer()</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setImageBuffer(com.jogamp.opengl.util.GLPixelBuffer)"><code>setImageBuffer(GLPixelBuffer)</code></a></dd>
</dl>
</li>
</ul>
<a id="isSetup()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isSetup</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;isSetup()</pre>
<div class="block">Returns true if this instance is setup properly, i.e. <a href="#setImageSize(int,int)"><code>setImageSize(int, int)</code></a> ..,
 and ready for <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a>.
 Otherwise returns false.</div>
</li>
</ul>
<a id="eot()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>eot</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;eot()</pre>
<div class="block">Returns true if <i>end of tiling</i> has been reached, otherwise false.
 <p>
 <i>end of tiling</i> criteria is implementation specific and may never be reached.
 </p>
 <p>
 User needs to <a href="#reset()"><code>reset()</code></a> tiling after reaching <i>end of tiling</i>
 before calling <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a> again.
 </p></div>
</li>
</ul>
<a id="reset()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reset</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;reset()</pre>
<div class="block">Method resets implementation's internal state to <i>start of tiling</i>
 as required for <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a> if <a href="#eot()"><code>end of tiling</code></a> has been reached.
 <p>
 Implementation is a <i>nop</i> where <a href="#eot()"><code>end of tiling</code></a> is never reached.
 </p></div>
</li>
</ul>
<a id="beginTile(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>beginTile</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;beginTile&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)
                        throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                               <a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Begins rendering a tile.
 <p>
 This method modifies the viewport, see below.
 User shall reset the viewport when finishing all tile rendering,
 i.e. after very last call of <a href="#endTile(com.jogamp.opengl.GL)"><code>endTile(GL)</code></a>!
 </p>
 <p>
 The <a href="TileRendererBase.html#pmvmatrix">PMV Matrix</a>
 must be reshaped after this call using:
 <ul>
   <li>Current Viewport
   <ul>
      <li>x 0</li>
      <li>y 0</li>
      <li><a href="#TR_CURRENT_TILE_WIDTH"><code>current tile's width</code></a></li>
      <li><a href="#TR_CURRENT_TILE_HEIGHT"><code>current tile's height</code></a></li>
   </ul></li>
   <li><a href="#TR_CURRENT_TILE_X_POS"><code>current tile's x-pos</code></a></li>
   <li><a href="#TR_CURRENT_TILE_Y_POS"><code>current tile's y-pos</code></a></li>
   <li><a href="#TR_IMAGE_WIDTH"><code>final image width</code></a></li>
   <li><a href="#TR_IMAGE_HEIGHT"><code>final image height</code></a></li>
 </ul>
 </p>
 <p>
 Use shall render the scene afterwards, concluded with a call to
 this renderer <a href="#endTile(com.jogamp.opengl.GL)"><code>endTile(GL)</code></a>.
 </p>
 <p>
 User has to comply with the <a href="TileRendererBase.html#glprequirement">GL profile requirement</a>.
 </p>
 <p>
 If <a href="#eot()"><code>end of tiling</code></a> has been reached,
 user needs to <a href="#reset()"><code>reset()</code></a> tiling before calling this method.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - The gl context</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if <a href="#setImageSize(int,int)"><code>image-size</code></a> is undefined,
         an <a href="#isSetup()"><code>implementation related setup</code></a> has not be performed
         or {@ link #eot()} has been reached. See implementing classes.</dd>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if <a href="#setImageBuffer(com.jogamp.opengl.util.GLPixelBuffer)"><code>image buffer</code></a> is used but <code>gl</code> instance is &lt; <a href="../GL2ES3.html" title="interface in com.jogamp.opengl"><code>GL2ES3</code></a></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isSetup()"><code>isSetup()</code></a>, 
<a href="#eot()"><code>eot()</code></a>, 
<a href="#reset()"><code>reset()</code></a></dd>
</dl>
</li>
</ul>
<a id="endTile(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>endTile</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;endTile&#8203;(<a href="../GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)
                      throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                             <a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Must be called after rendering the scene,
 see <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a>.
 <p>
 Please consider <a href="#reqPreSwapBuffers(com.jogamp.opengl.GLCapabilitiesImmutable)"><code>reqPreSwapBuffers(GLCapabilitiesImmutable)</code></a> to determine
 whether you need to perform <a href="../GLDrawable.html#swapBuffers()"><code>swap-buffers</code></a> before or after
 calling this method!
 </p>
 <p>
 User has to comply with the <a href="TileRendererBase.html#glprequirement">GL profile requirement</a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gl</code> - the gl context</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if beginTile(gl) has not been called</dd>
<dd><code><a href="../GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if <a href="#setImageBuffer(com.jogamp.opengl.util.GLPixelBuffer)"><code>image buffer</code></a> is used but <code>gl</code> instance is &lt; <a href="../GL2ES3.html" title="interface in com.jogamp.opengl"><code>GL2ES3</code></a></dd>
</dl>
</li>
</ul>
<a id="reqPreSwapBuffers(com.jogamp.opengl.GLCapabilitiesImmutable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reqPreSwapBuffers</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;reqPreSwapBuffers&#8203;(<a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl">GLCapabilitiesImmutable</a>&nbsp;chosenCaps)</pre>
<div class="block">Determines whether the chosen <a href="../GLCapabilitiesImmutable.html" title="interface in com.jogamp.opengl"><code>GLCapabilitiesImmutable</code></a>
 requires a <i>pre-<a href="../GLDrawable.html#swapBuffers()"><code>swap-buffers</code></a></i>
 before accessing the results, i.e. before <a href="#endTile(com.jogamp.opengl.GL)"><code>endTile(GL)</code></a>.
 <p>
 See <a href="GLDrawableUtil.html#swapBuffersBeforeRead(com.jogamp.opengl.GLCapabilitiesImmutable)"><code>GLDrawableUtil.swapBuffersBeforeRead(GLCapabilitiesImmutable)</code></a>.
 </p></div>
</li>
</ul>
<a id="attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>attachAutoDrawable</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;attachAutoDrawable&#8203;(<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;glad)
                              throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Attaches the given <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> to this tile renderer.
 <p>
 The <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s original <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> are moved to this tile renderer.
 </p>
 <p>
 <code>GLEventListeners</code> not implementing <a href="TileRendererBase.TileRendererListener.html" title="interface in com.jogamp.opengl.util"><code>TileRendererBase.TileRendererListener</code></a> are ignored while tile rendering.
 </p>
 <p>
 The <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>'s <a href="../GLAutoDrawable.html#getAutoSwapBufferMode()"><code>auto-swap mode</code></a> is cached
 and set to <code>false</code>, since <a href="../GLDrawable.html#swapBuffers()"><code>swapBuffers()</code></a> maybe issued before <a href="#endTile(com.jogamp.opengl.GL)"><code>endTile(GL)</code></a>,
 see <a href="#reqPreSwapBuffers(com.jogamp.opengl.GLCapabilitiesImmutable)"><code>reqPreSwapBuffers(GLCapabilitiesImmutable)</code></a>.
 </p>
 <p>
 This tile renderer's internal <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> is then added to the attached <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>
 to handle the tile rendering, replacing the original <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>.<br>
 It's <a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display</code></a> implementations issues:
 <ul>
   <li>Optional <a href="#setGLEventListener(com.jogamp.opengl.GLEventListener,com.jogamp.opengl.GLEventListener)"><code>pre-glel</code></a>.<a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a></li>
   <li><a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a></li>
   <li>for all original <a href="TileRendererBase.TileRendererListener.html" title="interface in com.jogamp.opengl.util"><code>TileRendererBase.TileRendererListener</code></a>:
   <ul>
     <li><a href="TileRendererBase.TileRendererListener.html#reshapeTile(com.jogamp.opengl.util.TileRendererBase,int,int,int,int,int,int)"><code>reshapeTile(tileX, tileY, tileWidth, tileHeight, imageWidth, imageHeight)</code></a></li>
     <li><a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(autoDrawable)</code></a></li>
   </ul></li>
   <li>if ( <a href="#reqPreSwapBuffers(com.jogamp.opengl.GLCapabilitiesImmutable)"><code>pre-swap</code></a> ) { <a href="../GLDrawable.html#swapBuffers()"><code>swapBuffers()</code></a> }</li>
   <li><a href="#endTile(com.jogamp.opengl.GL)"><code>endTile(GL)</code></a></li>
   <li>if ( !<a href="#reqPreSwapBuffers(com.jogamp.opengl.GLCapabilitiesImmutable)"><code>pre-swap</code></a> ) { <a href="../GLDrawable.html#swapBuffers()"><code>swapBuffers()</code></a> }</li>
   <li>Optional <a href="#setGLEventListener(com.jogamp.opengl.GLEventListener,com.jogamp.opengl.GLEventListener)"><code>post-glel</code></a>.<a href="../GLEventListener.html#display(com.jogamp.opengl.GLAutoDrawable)"><code>display(..)</code></a></li>
 </ul>
 </p>
 <p>
 Consider using <a href="#setGLEventListener(com.jogamp.opengl.GLEventListener,com.jogamp.opengl.GLEventListener)"><code>setGLEventListener(GLEventListener, GLEventListener)</code></a> to add pre- and post
 hooks to be performed on this renderer <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>.<br>
 The pre-hook is able to allocate memory and setup parameters, since it's called before <a href="#beginTile(com.jogamp.opengl.GL)"><code>beginTile(GL)</code></a>.<br>
 The post-hook is able to use the rendering result and can even shutdown tile-rendering,
 since it's called after <a href="#endTile(com.jogamp.opengl.GL)"><code>endTile(GL)</code></a>.
 </p>
 <p>
 Call <a href="#detachAutoDrawable()"><code>detachAutoDrawable()</code></a> to remove the attached <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> from this tile renderer
 and to restore it's original <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>glad</code> - the <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> to attach.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if an <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> is already attached</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getAttachedDrawable()"><code>getAttachedDrawable()</code></a>, 
<a href="#detachAutoDrawable()"><code>detachAutoDrawable()</code></a></dd>
</dl>
</li>
</ul>
<a id="getAttachedDrawable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAttachedDrawable</h4>
<pre class="methodSignature">public final&nbsp;<a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl">GLAutoDrawable</a>&nbsp;getAttachedDrawable()</pre>
<div class="block">Returns a previously <a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>attached</code></a> <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>,
 <code>null</code> if none is attached.
 <p>
 If called from <a href="TileRendererBase.TileRendererListener.html#addTileRendererNotify(com.jogamp.opengl.util.TileRendererBase)"><code>TileRendererBase.TileRendererListener.addTileRendererNotify(TileRendererBase)</code></a>
 or <a href="TileRendererBase.TileRendererListener.html#removeTileRendererNotify(com.jogamp.opengl.util.TileRendererBase)"><code>TileRendererBase.TileRendererListener.removeTileRendererNotify(TileRendererBase)</code></a>, method returns the
 just attached or soon to be detached <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>attachAutoDrawable(GLAutoDrawable)</code></a>, 
<a href="#detachAutoDrawable()"><code>detachAutoDrawable()</code></a></dd>
</dl>
</li>
</ul>
<a id="detachAutoDrawable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>detachAutoDrawable</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;detachAutoDrawable()</pre>
<div class="block">Detaches the given <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> from this tile renderer.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>attachAutoDrawable(GLAutoDrawable)</code></a>, 
<a href="#getAttachedDrawable()"><code>getAttachedDrawable()</code></a></dd>
</dl>
</li>
</ul>
<a id="setGLEventListener(com.jogamp.opengl.GLEventListener,com.jogamp.opengl.GLEventListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setGLEventListener</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setGLEventListener&#8203;(<a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;preTile,
                                     <a href="../GLEventListener.html" title="interface in com.jogamp.opengl">GLEventListener</a>&nbsp;postTile)</pre>
<div class="block">Set <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> for pre- and post operations when used w/
 <a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>attachAutoDrawable(GLAutoDrawable)</code></a>
 for each <a href="../GLEventListener.html" title="interface in com.jogamp.opengl"><code>GLEventListener</code></a> callback.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>preTile</code> - the pre operations</dd>
<dd><code>postTile</code> - the post operations</dd>
</dl>
</li>
</ul>
<a id="display()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>display</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;display()
                   throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Rendering one tile, by simply calling <a href="../GLAutoDrawable.html#display()"><code>GLAutoDrawable.display()</code></a>.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if no <a href="../GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> is <a href="#attachAutoDrawable(com.jogamp.opengl.GLAutoDrawable)"><code>attached</code></a>
                               or imageSize is not set</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/opengl/util/TileRendererBase.html" target="_top">Frames</a></li>
<li><a href="TileRendererBase.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
