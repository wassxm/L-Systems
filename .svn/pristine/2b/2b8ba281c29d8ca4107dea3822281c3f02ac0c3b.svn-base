<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>Region (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Region (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":9,"i7":10,"i8":9,"i9":10,"i10":9,"i11":10,"i12":9,"i13":10,"i14":9,"i15":10,"i16":10,"i17":9,"i18":10,"i19":9,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/graph/curve/Region.html" target="_top">Frames</a></li>
<li><a href="Region.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.graph.curve</a></div>
<h2 title="Class Region" class="title">Class Region</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.graph.curve.Region</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><code><a href="opengl/GLRegion.html" title="class in com.jogamp.graph.curve.opengl">GLRegion</a></code></dd>
</dl>
<hr>
<pre>public abstract class <span class="typeNameLabel">Region</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Abstract Outline shape representation define the method an OutlineShape(s)
 is bound and rendered.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="opengl/GLRegion.html" title="class in com.jogamp.graph.curve.opengl"><code>GLRegion</code></a></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#COLORCHANNEL_RENDERING_BIT">COLORCHANNEL_RENDERING_BIT</a></span></code></th>
<td class="colLast">
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a></div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#COLORTEXTURE_RENDERING_BIT">COLORTEXTURE_RENDERING_BIT</a></span></code></th>
<td class="colLast">
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a></div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEBUG">DEBUG</a></span></code></th>
<td class="colLast">
<div class="block">Debug flag for region impl (graph.curve)</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEBUG_INSTANCE">DEBUG_INSTANCE</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEFAULT_TWO_PASS_TEXTURE_UNIT">DEFAULT_TWO_PASS_TEXTURE_UNIT</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#MAX_QUALITY">MAX_QUALITY</a></span></code></th>
<td class="colLast">
<div class="block">Default maximum <a href="#getQuality()"><code>quality</code></a>, 1.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#MSAA_RENDERING_BIT">MSAA_RENDERING_BIT</a></span></code></th>
<td class="colLast">
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a></div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#VARWEIGHT_RENDERING_BIT">VARWEIGHT_RENDERING_BIT</a></span></code></th>
<td class="colLast">
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a></div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#VBAA_RENDERING_BIT">VBAA_RENDERING_BIT</a></span></code></th>
<td class="colLast">
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a></div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addOutlineShape(com.jogamp.graph.curve.OutlineShape,jogamp.graph.geom.plane.AffineTransform,float%5B%5D)">addOutlineShape</a></span>&#8203;(<a href="OutlineShape.html" title="class in com.jogamp.graph.curve">OutlineShape</a>&nbsp;shape,
               jogamp.graph.geom.plane.AffineTransform&nbsp;t,
               float[]&nbsp;rgbaColor)</code></th>
<td class="colLast">
<div class="block">Add the given <a href="OutlineShape.html" title="class in com.jogamp.graph.curve"><code>OutlineShape</code></a> to this region with the given optional <code>AffineTransform</code>.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addOutlineShapes(java.util.List,jogamp.graph.geom.plane.AffineTransform,float%5B%5D)">addOutlineShapes</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="OutlineShape.html" title="class in com.jogamp.graph.curve">OutlineShape</a>&gt;&nbsp;shapes,
                jogamp.graph.geom.plane.AffineTransform&nbsp;transform,
                float[]&nbsp;rgbaColor)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="../../opengl/math/geom/AABBox.html" title="class in com.jogamp.opengl.math.geom">AABBox</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getBounds()">getBounds</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="../../opengl/math/geom/Frustum.html" title="class in com.jogamp.opengl.math.geom">Frustum</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFrustum()">getFrustum</a></span>()</code></th>
<td class="colLast">
<div class="block">See <a href="#setFrustum(com.jogamp.opengl.math.geom.Frustum)"><code>setFrustum(Frustum)</code></a></div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getQuality()">getQuality</a></span>()</code></th>
<td class="colLast">
<div class="block">See <a href="#MAX_QUALITY"><code>MAX_QUALITY</code></a></div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRenderModes()">getRenderModes</a></span>()</code></th>
<td class="colLast">
<div class="block">Return bit-field of render modes, see <a href="opengl/GLRegion.html#create(int,com.jogamp.opengl.util.texture.TextureSequence)"><code>GLRegion.create(int, TextureSequence)</code></a>.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRenderModeString(int)">getRenderModeString</a></span>&#8203;(int&nbsp;renderModes)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasColorChannel()">hasColorChannel</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if render mode has a color channel,
 i.e.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasColorChannel(int)">hasColorChannel</a></span>&#8203;(int&nbsp;renderModes)</code></th>
<td class="colLast">
<div class="block">Returns true if render mode has a color channel,
 i.e.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasColorTexture()">hasColorTexture</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if render mode has a color texture,
 i.e.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasColorTexture(int)">hasColorTexture</a></span>&#8203;(int&nbsp;renderModes)</code></th>
<td class="colLast">
<div class="block">Returns true if render mode has a color texture,
 i.e.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasVariableWeight()">hasVariableWeight</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if capable of variable weights, otherwise false.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasVariableWeight(int)">hasVariableWeight</a></span>&#8203;(int&nbsp;renderModes)</code></th>
<td class="colLast">
<div class="block">Returns true if render mode capable of variable weights,
 i.e.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isMSAA()">isMSAA</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if capable of two pass rendering - MSAA, otherwise false.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isMSAA(int)">isMSAA</a></span>&#8203;(int&nbsp;renderModes)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isShapeDirty()">isShapeDirty</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if this region's shape are dirty, see <a href="#markShapeDirty()"><code>markShapeDirty()</code></a>.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isStateDirty()">isStateDirty</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if this region's state is dirty, see <a href="#markStateDirty()"><code>markStateDirty()</code></a>.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isTwoPass(int)">isTwoPass</a></span>&#8203;(int&nbsp;renderModes)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isVBAA()">isVBAA</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if capable of two pass rendering - VBAA, otherwise false.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isVBAA(int)">isVBAA</a></span>&#8203;(int&nbsp;renderModes)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#markShapeDirty()">markShapeDirty</a></span>()</code></th>
<td class="colLast">
<div class="block">Mark this region's shape dirty, i.e.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#markStateDirty()">markStateDirty</a></span>()</code></th>
<td class="colLast">
<div class="block">Mark this region's state dirty, i.e.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setFrustum(com.jogamp.opengl.math.geom.Frustum)">setFrustum</a></span>&#8203;(<a href="../../opengl/math/geom/Frustum.html" title="class in com.jogamp.opengl.math.geom">Frustum</a>&nbsp;frustum)</code></th>
<td class="colLast">
<div class="block">Set <a href="../../opengl/math/geom/Frustum.html" title="class in com.jogamp.opengl.math.geom"><code>Frustum</code></a> culling for <a href="#addOutlineShape(com.jogamp.graph.curve.OutlineShape,jogamp.graph.geom.plane.AffineTransform,float%5B%5D)"><code>addOutlineShape(OutlineShape, AffineTransform, float[])</code></a>.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setQuality(int)">setQuality</a></span>&#8203;(int&nbsp;q)</code></th>
<td class="colLast">
<div class="block">See <a href="#MAX_QUALITY"><code>MAX_QUALITY</code></a></div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="DEBUG">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DEBUG</h4>
<pre>public static final&nbsp;boolean DEBUG</pre>
<div class="block">Debug flag for region impl (graph.curve)</div>
</li>
</ul>
<a id="DEBUG_INSTANCE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DEBUG_INSTANCE</h4>
<pre>public static final&nbsp;boolean DEBUG_INSTANCE</pre>
</li>
</ul>
<a id="MSAA_RENDERING_BIT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MSAA_RENDERING_BIT</h4>
<pre>public static final&nbsp;int MSAA_RENDERING_BIT</pre>
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a>
 <p>
 MSAA based Anti-Aliasing, a two pass region rendering, slower and more
 resource hungry (FBO), but providing fast MSAA in case
 the whole scene is not rendered with MSAA.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.graph.curve.Region.MSAA_RENDERING_BIT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="VBAA_RENDERING_BIT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>VBAA_RENDERING_BIT</h4>
<pre>public static final&nbsp;int VBAA_RENDERING_BIT</pre>
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a>
 <p>
 View based Anti-Aliasing, a two pass region rendering, slower and more
 resource hungry (FBO), but AA is perfect. Otherwise the default fast one
 pass MSAA region rendering is being used.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.graph.curve.Region.VBAA_RENDERING_BIT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="VARWEIGHT_RENDERING_BIT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>VARWEIGHT_RENDERING_BIT</h4>
<pre>public static final&nbsp;int VARWEIGHT_RENDERING_BIT</pre>
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a>
 <p>
 Use non uniform weights [0.0 .. 1.9] for curve region rendering.
 Otherwise the default weight 1.0 for uniform curve region rendering is
 being applied.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.graph.curve.Region.VARWEIGHT_RENDERING_BIT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="COLORCHANNEL_RENDERING_BIT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>COLORCHANNEL_RENDERING_BIT</h4>
<pre>public static final&nbsp;int COLORCHANNEL_RENDERING_BIT</pre>
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a>
 <p>
 If set, a color channel attribute per vertex is added to the stream,
 otherwise only the
 <code>static color</code>
 is being used.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.graph.curve.Region.COLORCHANNEL_RENDERING_BIT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="COLORTEXTURE_RENDERING_BIT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>COLORTEXTURE_RENDERING_BIT</h4>
<pre>public static final&nbsp;int COLORTEXTURE_RENDERING_BIT</pre>
<div class="block">Rendering-Mode bit for <a href="#getRenderModes()"><code>Region</code></a>
 <p>
 If set, a color texture is used to determine the color.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.graph.curve.Region.COLORTEXTURE_RENDERING_BIT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="MAX_QUALITY">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MAX_QUALITY</h4>
<pre>public static final&nbsp;int MAX_QUALITY</pre>
<div class="block">Default maximum <a href="#getQuality()"><code>quality</code></a>, 1.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.graph.curve.Region.MAX_QUALITY">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="DEFAULT_TWO_PASS_TEXTURE_UNIT">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>DEFAULT_TWO_PASS_TEXTURE_UNIT</h4>
<pre>public static final&nbsp;int DEFAULT_TWO_PASS_TEXTURE_UNIT</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.graph.curve.Region.DEFAULT_TWO_PASS_TEXTURE_UNIT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="isVBAA(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isVBAA</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isVBAA&#8203;(int&nbsp;renderModes)</pre>
</li>
</ul>
<a id="isMSAA(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isMSAA</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isMSAA&#8203;(int&nbsp;renderModes)</pre>
</li>
</ul>
<a id="isTwoPass(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isTwoPass</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isTwoPass&#8203;(int&nbsp;renderModes)</pre>
</li>
</ul>
<a id="hasVariableWeight(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasVariableWeight</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;hasVariableWeight&#8203;(int&nbsp;renderModes)</pre>
<div class="block">Returns true if render mode capable of variable weights,
 i.e. the bit <a href="#VARWEIGHT_RENDERING_BIT"><code>VARWEIGHT_RENDERING_BIT</code></a> is set,
 otherwise false.</div>
</li>
</ul>
<a id="hasColorChannel(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasColorChannel</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;hasColorChannel&#8203;(int&nbsp;renderModes)</pre>
<div class="block">Returns true if render mode has a color channel,
 i.e. the bit <a href="#COLORCHANNEL_RENDERING_BIT"><code>COLORCHANNEL_RENDERING_BIT</code></a> is set,
 otherwise false.</div>
</li>
</ul>
<a id="hasColorTexture(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasColorTexture</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;hasColorTexture&#8203;(int&nbsp;renderModes)</pre>
<div class="block">Returns true if render mode has a color texture,
 i.e. the bit <a href="#COLORTEXTURE_RENDERING_BIT"><code>COLORTEXTURE_RENDERING_BIT</code></a> is set,
 otherwise false.</div>
</li>
</ul>
<a id="getRenderModeString(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRenderModeString</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getRenderModeString&#8203;(int&nbsp;renderModes)</pre>
</li>
</ul>
<a id="getRenderModes()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRenderModes</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;getRenderModes()</pre>
<div class="block">Return bit-field of render modes, see <a href="opengl/GLRegion.html#create(int,com.jogamp.opengl.util.texture.TextureSequence)"><code>GLRegion.create(int, TextureSequence)</code></a>.</div>
</li>
</ul>
<a id="getQuality()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getQuality</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;getQuality()</pre>
<div class="block">See <a href="#MAX_QUALITY"><code>MAX_QUALITY</code></a></div>
</li>
</ul>
<a id="setQuality(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setQuality</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setQuality&#8203;(int&nbsp;q)</pre>
<div class="block">See <a href="#MAX_QUALITY"><code>MAX_QUALITY</code></a></div>
</li>
</ul>
<a id="isVBAA()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isVBAA</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isVBAA()</pre>
<div class="block">Returns true if capable of two pass rendering - VBAA, otherwise false.</div>
</li>
</ul>
<a id="isMSAA()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isMSAA</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isMSAA()</pre>
<div class="block">Returns true if capable of two pass rendering - MSAA, otherwise false.</div>
</li>
</ul>
<a id="hasVariableWeight()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasVariableWeight</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;hasVariableWeight()</pre>
<div class="block">Returns true if capable of variable weights, otherwise false.</div>
</li>
</ul>
<a id="hasColorChannel()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasColorChannel</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;hasColorChannel()</pre>
<div class="block">Returns true if render mode has a color channel,
 i.e. the bit <a href="#COLORCHANNEL_RENDERING_BIT"><code>COLORCHANNEL_RENDERING_BIT</code></a> is set,
 otherwise false.</div>
</li>
</ul>
<a id="hasColorTexture()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasColorTexture</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;hasColorTexture()</pre>
<div class="block">Returns true if render mode has a color texture,
 i.e. the bit <a href="#COLORTEXTURE_RENDERING_BIT"><code>COLORTEXTURE_RENDERING_BIT</code></a> is set,
 otherwise false.</div>
</li>
</ul>
<a id="getFrustum()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFrustum</h4>
<pre class="methodSignature">public final&nbsp;<a href="../../opengl/math/geom/Frustum.html" title="class in com.jogamp.opengl.math.geom">Frustum</a>&nbsp;getFrustum()</pre>
<div class="block">See <a href="#setFrustum(com.jogamp.opengl.math.geom.Frustum)"><code>setFrustum(Frustum)</code></a></div>
</li>
</ul>
<a id="setFrustum(com.jogamp.opengl.math.geom.Frustum)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setFrustum</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setFrustum&#8203;(<a href="../../opengl/math/geom/Frustum.html" title="class in com.jogamp.opengl.math.geom">Frustum</a>&nbsp;frustum)</pre>
<div class="block">Set <a href="../../opengl/math/geom/Frustum.html" title="class in com.jogamp.opengl.math.geom"><code>Frustum</code></a> culling for <a href="#addOutlineShape(com.jogamp.graph.curve.OutlineShape,jogamp.graph.geom.plane.AffineTransform,float%5B%5D)"><code>addOutlineShape(OutlineShape, AffineTransform, float[])</code></a>.</div>
</li>
</ul>
<a id="addOutlineShape(com.jogamp.graph.curve.OutlineShape,jogamp.graph.geom.plane.AffineTransform,float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addOutlineShape</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;addOutlineShape&#8203;(<a href="OutlineShape.html" title="class in com.jogamp.graph.curve">OutlineShape</a>&nbsp;shape,
                                  jogamp.graph.geom.plane.AffineTransform&nbsp;t,
                                  float[]&nbsp;rgbaColor)</pre>
<div class="block">Add the given <a href="OutlineShape.html" title="class in com.jogamp.graph.curve"><code>OutlineShape</code></a> to this region with the given optional <code>AffineTransform</code>.
 <p>
 In case <a href="#setFrustum(com.jogamp.opengl.math.geom.Frustum)"><code>frustum culling is set</code></a>, the <a href="OutlineShape.html" title="class in com.jogamp.graph.curve"><code>OutlineShape</code></a>
 is dropped if it's <a href="OutlineShape.html#getBounds()"><code>bounding-box</code></a> is fully outside of the frustum.
 The optional <code>AffineTransform</code> is applied to the bounding-box beforehand.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>rgbaColor</code> - TODO</dd>
</dl>
</li>
</ul>
<a id="addOutlineShapes(java.util.List,jogamp.graph.geom.plane.AffineTransform,float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addOutlineShapes</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;addOutlineShapes&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="OutlineShape.html" title="class in com.jogamp.graph.curve">OutlineShape</a>&gt;&nbsp;shapes,
                                   jogamp.graph.geom.plane.AffineTransform&nbsp;transform,
                                   float[]&nbsp;rgbaColor)</pre>
</li>
</ul>
<a id="getBounds()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBounds</h4>
<pre class="methodSignature">public final&nbsp;<a href="../../opengl/math/geom/AABBox.html" title="class in com.jogamp.opengl.math.geom">AABBox</a>&nbsp;getBounds()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the AxisAligned bounding box of current region</dd>
</dl>
</li>
</ul>
<a id="markShapeDirty()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>markShapeDirty</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;markShapeDirty()</pre>
<div class="block">Mark this region's shape dirty, i.e. it's
 Vertices, Triangles, and or Lines changed.</div>
</li>
</ul>
<a id="isShapeDirty()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isShapeDirty</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isShapeDirty()</pre>
<div class="block">Returns true if this region's shape are dirty, see <a href="#markShapeDirty()"><code>markShapeDirty()</code></a>.</div>
</li>
</ul>
<a id="markStateDirty()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>markStateDirty</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;markStateDirty()</pre>
<div class="block">Mark this region's state dirty, i.e.
 it's render attributes or parameters changed.</div>
</li>
</ul>
<a id="isStateDirty()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isStateDirty</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isStateDirty()</pre>
<div class="block">Returns true if this region's state is dirty, see <a href="#markStateDirty()"><code>markStateDirty()</code></a>.</div>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/graph/curve/Region.html" target="_top">Frames</a></li>
<li><a href="Region.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
