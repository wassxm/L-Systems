<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>NativeWindowFactory (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="NativeWindowFactory (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9,"i5":9,"i6":9,"i7":9,"i8":9,"i9":9,"i10":9,"i11":9,"i12":9,"i13":9,"i14":9,"i15":9,"i16":9,"i17":9,"i18":9,"i19":9,"i20":9,"i21":9,"i22":9,"i23":9,"i24":9,"i25":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/nativewindow/NativeWindowFactory.html" target="_top">Frames</a></li>
<li><a href="NativeWindowFactory.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.nativewindow</a></div>
<h2 title="Class NativeWindowFactory" class="title">Class NativeWindowFactory</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.nativewindow.NativeWindowFactory</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public abstract class <span class="typeNameLabel">NativeWindowFactory</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Provides a pluggable mechanism for arbitrary window toolkits to
    adapt their components to the <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a> interface,
    which provides a platform-independent mechanism of accessing the
    information required to perform operations like
    hardware-accelerated rendering using the OpenGL API.
 <p>
 FIXME: Bug 973 Needs service provider interface (SPI) for TK dependent implementation
 </p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_ANDROID">TYPE_ANDROID</a></span></code></th>
<td class="colLast">
<div class="block">Android/EGL type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_AWT">TYPE_AWT</a></span></code></th>
<td class="colLast">
<div class="block">Generic AWT type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_BCM_VC_IV">TYPE_BCM_VC_IV</a></span></code></th>
<td class="colLast">
<div class="block">Broadcom VC IV/EGL type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_DEFAULT">TYPE_DEFAULT</a></span></code></th>
<td class="colLast">
<div class="block">Generic DEFAULT type, where platform implementation don't care, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_DRM_GBM">TYPE_DRM_GBM</a></span></code></th>
<td class="colLast">
<div class="block">DRM/GBM type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_EGL">TYPE_EGL</a></span></code></th>
<td class="colLast">
<div class="block">OpenKODE/EGL type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_IOS">TYPE_IOS</a></span></code></th>
<td class="colLast">
<div class="block">iOS type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_MACOSX">TYPE_MACOSX</a></span></code></th>
<td class="colLast">
<div class="block">Mac OS X type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_WAYLAND">TYPE_WAYLAND</a></span></code></th>
<td class="colLast">
<div class="block">Wayland/EGL type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_WINDOWS">TYPE_WINDOWS</a></span></code></th>
<td class="colLast">
<div class="block">Microsoft Windows type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TYPE_X11">TYPE_X11</a></span></code></th>
<td class="colLast">
<div class="block">X11 type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addCustomShutdownHook(boolean,java.lang.Runnable)">addCustomShutdownHook</a></span>&#8203;(boolean&nbsp;head,
                     <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Runnable.html?is-external=true" title="class or interface in java.lang" class="externalLink">Runnable</a>&nbsp;runnable)</code></th>
<td class="colLast">
<div class="block">Add a custom shutdown hook to be performed at JVM shutdown before shutting down NativeWindowFactory instance.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>static <a href="AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createDevice(java.lang.String,boolean)">createDevice</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;displayConnection,
            boolean&nbsp;own)</code></th>
<td class="colLast">
<div class="block">Creates a native device type, following <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(true)</code></a>.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>static <a href="AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createDevice(java.lang.String,java.lang.String,boolean)">createDevice</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;nwt,
            <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;displayConnection,
            boolean&nbsp;own)</code></th>
<td class="colLast">
<div class="block">Creates a native device type, following the given <a href="#getNativeWindowType(boolean)"><code>native-window-type</code></a>.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>static <a href="AbstractGraphicsScreen.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsScreen</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createScreen(com.jogamp.nativewindow.AbstractGraphicsDevice,int)">createScreen</a></span>&#8203;(<a href="AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
            int&nbsp;screen)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>static <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createWrappedWindow(com.jogamp.nativewindow.AbstractGraphicsScreen,long,long,com.jogamp.nativewindow.UpstreamWindowHookMutableSizePos)">createWrappedWindow</a></span>&#8203;(<a href="AbstractGraphicsScreen.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsScreen</a>&nbsp;aScreen,
                   long&nbsp;surfaceHandle,
                   long&nbsp;windowHandle,
                   <a href="UpstreamWindowHookMutableSizePos.html" title="class in com.jogamp.nativewindow">UpstreamWindowHookMutableSizePos</a>&nbsp;hook)</code></th>
<td class="colLast">
<div class="block">Creates a wrapped <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a> with given native handles and <a href="AbstractGraphicsScreen.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsScreen</code></a>.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>static <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getAWTToolkitLock()">getAWTToolkitLock</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the AWT <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> (JAWT based) if <a href="#isAWTAvailable"><code>isAWTAvailable</code></a>, otherwise null.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultDisplayConnection()">getDefaultDisplayConnection</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultDisplayConnection(java.lang.String)">getDefaultDisplayConnection</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;nwt)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>static <a href="NativeWindowFactory.html" title="class in com.jogamp.nativewindow">NativeWindowFactory</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultFactory()">getDefaultFactory</a></span>()</code></th>
<td class="colLast">
<div class="block">Gets the default NativeWindowFactory.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>static <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultToolkitLock()">getDefaultToolkitLock</a></span>()</code></th>
<td class="colLast">
<div class="block">Provides the system default <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> for the default system windowing type.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>static <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultToolkitLock(java.lang.String)">getDefaultToolkitLock</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;type)</code></th>
<td class="colLast">
<div class="block">Provides the default <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> for <code>type</code>.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>static <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultToolkitLock(java.lang.String,long)">getDefaultToolkitLock</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;type,
                     long&nbsp;deviceHandle)</code></th>
<td class="colLast">
<div class="block">Provides the default <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> for <code>type</code> and <code>deviceHandle</code>.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>static <a href="NativeWindowFactory.html" title="class in com.jogamp.nativewindow">NativeWindowFactory</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFactory(java.lang.Class)">getFactory</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang" class="externalLink">Class</a>&lt;?&gt;&nbsp;windowClass)</code></th>
<td class="colLast">
<div class="block">Returns the appropriate NativeWindowFactory to handle window
        objects of the given type.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>static <a href="util/Point.html" title="class in com.jogamp.nativewindow.util">Point</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getLocationOnScreen(com.jogamp.nativewindow.NativeWindow)">getLocationOnScreen</a></span>&#8203;(<a href="NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;nw)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>static <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNativeWindow(java.lang.Object,com.jogamp.nativewindow.AbstractGraphicsConfiguration)">getNativeWindow</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;winObj,
               <a href="AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsConfiguration</a>&nbsp;config)</code></th>
<td class="colLast">
<div class="block">Converts the given window object and it's
        <a href="AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsConfiguration</code></a> into a
        <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a> which can be operated upon by a custom
        toolkit, e.g.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNativeWindowType(boolean)">getNativeWindowType</a></span>&#8203;(boolean&nbsp;useCustom)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>static <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNullToolkitLock()">getNullToolkitLock</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>static <a href="OffscreenLayerSurface.html" title="interface in com.jogamp.nativewindow">OffscreenLayerSurface</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getOffscreenLayerSurface(com.jogamp.nativewindow.NativeSurface,boolean)">getOffscreenLayerSurface</a></span>&#8203;(<a href="NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a>&nbsp;surface,
                        boolean&nbsp;ifEnabled)</code></th>
<td class="colLast">
<div class="block">Returns the <a href="OffscreenLayerSurface.html" title="interface in com.jogamp.nativewindow"><code>OffscreenLayerSurface</code></a> instance of this <a href="NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a>.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#initSingleton()">initSingleton</a></span>()</code></th>
<td class="colLast">
<div class="block">Static one time initialization of this factory.<br>
 This initialization method <b>must be called</b> once by the program or utilizing modules!</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isAWTAvailable()">isAWTAvailable</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isInitialized()">isInitialized</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if <a href="#initSingleton()"><code>initSingleton()</code></a> has been called w/o subsequent <a href="#shutdown(boolean)"><code>shutdown(boolean)</code></a>.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isJVMShuttingDown()">isJVMShuttingDown</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if the JVM is shutting down, otherwise false.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isNativeVisualIDValidForProcessing(int)">isNativeVisualIDValidForProcessing</a></span>&#8203;(int&nbsp;visualID)</code></th>
<td class="colLast">
<div class="block">Returns true if the given visualID is valid for further processing, i.e.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#requiresToolkitLock()">requiresToolkitLock</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setDefaultFactory(com.jogamp.nativewindow.NativeWindowFactory)">setDefaultFactory</a></span>&#8203;(<a href="NativeWindowFactory.html" title="class in com.jogamp.nativewindow">NativeWindowFactory</a>&nbsp;factory)</code></th>
<td class="colLast">
<div class="block">Sets the default NativeWindowFactory.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#shutdown(boolean)">shutdown</a></span>&#8203;(boolean&nbsp;_isJVMShuttingDown)</code></th>
<td class="colLast">
<div class="block">Cleanup resources at JVM shutdown</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="TYPE_WAYLAND">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_WAYLAND</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_WAYLAND</pre>
<div class="block">Wayland/EGL type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_WAYLAND">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_DRM_GBM">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_DRM_GBM</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_DRM_GBM</pre>
<div class="block">DRM/GBM type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_DRM_GBM">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_EGL">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_EGL</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_EGL</pre>
<div class="block">OpenKODE/EGL type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_EGL">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_WINDOWS">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_WINDOWS</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_WINDOWS</pre>
<div class="block">Microsoft Windows type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_WINDOWS">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_X11">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_X11</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_X11</pre>
<div class="block">X11 type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_X11">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_BCM_VC_IV">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_BCM_VC_IV</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_BCM_VC_IV</pre>
<div class="block">Broadcom VC IV/EGL type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_BCM_VC_IV">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_ANDROID">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_ANDROID</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_ANDROID</pre>
<div class="block">Android/EGL type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_ANDROID">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_MACOSX">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_MACOSX</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_MACOSX</pre>
<div class="block">Mac OS X type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_MACOSX">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_IOS">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_IOS</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_IOS</pre>
<div class="block">iOS type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_IOS">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_AWT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_AWT</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_AWT</pre>
<div class="block">Generic AWT type, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_AWT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="TYPE_DEFAULT">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TYPE_DEFAULT</h4>
<pre>public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a> TYPE_DEFAULT</pre>
<div class="block">Generic DEFAULT type, where platform implementation don't care, as retrieved with <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>. String is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.nativewindow.NativeWindowFactory.TYPE_DEFAULT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="isJVMShuttingDown()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isJVMShuttingDown</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isJVMShuttingDown()</pre>
<div class="block">Returns true if the JVM is shutting down, otherwise false.</div>
</li>
</ul>
<a id="addCustomShutdownHook(boolean,java.lang.Runnable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addCustomShutdownHook</h4>
<pre class="methodSignature">public static&nbsp;void&nbsp;addCustomShutdownHook&#8203;(boolean&nbsp;head,
                                         <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Runnable.html?is-external=true" title="class or interface in java.lang" class="externalLink">Runnable</a>&nbsp;runnable)</pre>
<div class="block">Add a custom shutdown hook to be performed at JVM shutdown before shutting down NativeWindowFactory instance.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>head</code> - if true add runnable at the start, otherwise at the end</dd>
<dd><code>runnable</code> - runnable to be added.</dd>
</dl>
</li>
</ul>
<a id="shutdown(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>shutdown</h4>
<pre class="methodSignature">public static&nbsp;void&nbsp;shutdown&#8203;(boolean&nbsp;_isJVMShuttingDown)</pre>
<div class="block">Cleanup resources at JVM shutdown</div>
</li>
</ul>
<a id="isInitialized()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isInitialized</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isInitialized()</pre>
<div class="block">Returns true if <a href="#initSingleton()"><code>initSingleton()</code></a> has been called w/o subsequent <a href="#shutdown(boolean)"><code>shutdown(boolean)</code></a>.</div>
</li>
</ul>
<a id="initSingleton()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initSingleton</h4>
<pre class="methodSignature">public static&nbsp;void&nbsp;initSingleton()</pre>
<div class="block">Static one time initialization of this factory.<br>
 This initialization method <b>must be called</b> once by the program or utilizing modules!</div>
</li>
</ul>
<a id="requiresToolkitLock()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>requiresToolkitLock</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;requiresToolkitLock()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the underlying toolkit requires locking, otherwise false.</dd>
</dl>
</li>
</ul>
<a id="isAWTAvailable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAWTAvailable</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isAWTAvailable()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if not headless, AWT Component and NativeWindow's AWT part available</dd>
</dl>
</li>
</ul>
<a id="getNativeWindowType(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNativeWindowType</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getNativeWindowType&#8203;(boolean&nbsp;useCustom)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>useCustom</code> - if false return the native value, if true return a custom value if set, otherwise fallback to the native value.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the native window type, e.g. <a href="#TYPE_X11"><code>TYPE_X11</code></a>, which is canonical via <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#intern()" title="class or interface in java.lang" class="externalLink"><code>String.intern()</code></a>.
        Hence <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink"><code>String.equals(Object)</code></a> and <code>==</code> produce the same result.</dd>
</dl>
</li>
</ul>
<a id="setDefaultFactory(com.jogamp.nativewindow.NativeWindowFactory)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDefaultFactory</h4>
<pre class="methodSignature">public static&nbsp;void&nbsp;setDefaultFactory&#8203;(<a href="NativeWindowFactory.html" title="class in com.jogamp.nativewindow">NativeWindowFactory</a>&nbsp;factory)</pre>
<div class="block">Sets the default NativeWindowFactory.</div>
</li>
</ul>
<a id="getDefaultFactory()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultFactory</h4>
<pre class="methodSignature">public static&nbsp;<a href="NativeWindowFactory.html" title="class in com.jogamp.nativewindow">NativeWindowFactory</a>&nbsp;getDefaultFactory()</pre>
<div class="block">Gets the default NativeWindowFactory.</div>
</li>
</ul>
<a id="getAWTToolkitLock()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAWTToolkitLock</h4>
<pre class="methodSignature">public static&nbsp;<a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a>&nbsp;getAWTToolkitLock()</pre>
<div class="block">Returns the AWT <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> (JAWT based) if <a href="#isAWTAvailable"><code>isAWTAvailable</code></a>, otherwise null.
 <p>
 The JAWT based <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> also locks the global lock,
 which matters if the latter is required.
 </p></div>
</li>
</ul>
<a id="getNullToolkitLock()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNullToolkitLock</h4>
<pre class="methodSignature">public static&nbsp;<a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a>&nbsp;getNullToolkitLock()</pre>
</li>
</ul>
<a id="getDefaultToolkitLock()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultToolkitLock</h4>
<pre class="methodSignature">public static&nbsp;<a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a>&nbsp;getDefaultToolkitLock()</pre>
<div class="block">Provides the system default <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> for the default system windowing type.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(boolean)</code></a>, 
<a href="#getDefaultToolkitLock(java.lang.String)"><code>getDefaultToolkitLock(java.lang.String)</code></a></dd>
</dl>
</li>
</ul>
<a id="getDefaultToolkitLock(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultToolkitLock</h4>
<pre class="methodSignature">public static&nbsp;<a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a>&nbsp;getDefaultToolkitLock&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;type)</pre>
<div class="block">Provides the default <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> for <code>type</code>.
 <ul>
   <li> JAWT <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> if required and <code>type</code> is of <a href="#TYPE_AWT"><code>TYPE_AWT</code></a> and AWT available,</li>
   <li> <code>ResourceToolkitLock</code> if required, otherwise</li>
   <li> <code>NullToolkitLock</code> </li>
 </ul></div>
</li>
</ul>
<a id="getDefaultToolkitLock(java.lang.String,long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultToolkitLock</h4>
<pre class="methodSignature">public static&nbsp;<a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow">ToolkitLock</a>&nbsp;getDefaultToolkitLock&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;type,
                                                long&nbsp;deviceHandle)</pre>
<div class="block">Provides the default <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> for <code>type</code> and <code>deviceHandle</code>.
 <ul>
   <li> JAWT <a href="ToolkitLock.html" title="interface in com.jogamp.nativewindow"><code>ToolkitLock</code></a> if required and <code>type</code> is of <a href="#TYPE_AWT"><code>TYPE_AWT</code></a> and AWT available,</li>
   <li> <code>ResourceToolkitLock</code> if required, otherwise</li>
   <li> <code>NullToolkitLock</code> </li>
 </ul></div>
</li>
</ul>
<a id="createScreen(com.jogamp.nativewindow.AbstractGraphicsDevice,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createScreen</h4>
<pre class="methodSignature">public static&nbsp;<a href="AbstractGraphicsScreen.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsScreen</a>&nbsp;createScreen&#8203;(<a href="AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                                  int&nbsp;screen)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - </dd>
<dd><code>screen</code> - -1 is default screen of the given device, e.g. maybe 0 or determined by native API. >= 0 is specific screen</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>newly created AbstractGraphicsScreen matching device's native type</dd>
</dl>
</li>
</ul>
<a id="getFactory(java.lang.Class)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFactory</h4>
<pre class="methodSignature">public static&nbsp;<a href="NativeWindowFactory.html" title="class in com.jogamp.nativewindow">NativeWindowFactory</a>&nbsp;getFactory&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang" class="externalLink">Class</a>&lt;?&gt;&nbsp;windowClass)
                                      throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<div class="block">Returns the appropriate NativeWindowFactory to handle window
        objects of the given type. The windowClass might be <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a>, in which case the client has
        already assumed the responsibility of creating a compatible
        NativeWindow implementation, or it might be that of a toolkit
        class like <a href="http://docs.oracle.com/javase/6/docs/api/java/awt/Component.html?is-external=true" title="class or interface in java.awt" class="externalLink"><code>Component</code></a>.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code></dd>
</dl>
</li>
</ul>
<a id="getNativeWindow(java.lang.Object,com.jogamp.nativewindow.AbstractGraphicsConfiguration)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNativeWindow</h4>
<pre class="methodSignature">public static&nbsp;<a href="NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;getNativeWindow&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;winObj,
                                           <a href="AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsConfiguration</a>&nbsp;config)
                                    throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a>,
                                           <a href="NativeWindowException.html" title="class in com.jogamp.nativewindow">NativeWindowException</a></pre>
<div class="block">Converts the given window object and it's
        <a href="AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsConfiguration</code></a> into a
        <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a> which can be operated upon by a custom
        toolkit, e.g. <a href="../opengl/GLDrawableFactory.html" title="class in com.jogamp.opengl"><code>com.jogamp.opengl.GLDrawableFactory</code></a>.<br>
        The object may be a component for a particular window toolkit, such as an AWT
        Canvas.  It may also be a NativeWindow object itself.<br>
        You shall utilize <a href="GraphicsConfigurationFactory.html" title="class in com.jogamp.nativewindow"><code>GraphicsConfigurationFactory</code></a>
        to construct a proper <a href="AbstractGraphicsConfiguration.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsConfiguration</code></a>.<br>
        The particular implementation of the
        NativeWindowFactory is responsible for handling objects from a
        particular window toolkit. The built-in NativeWindowFactory
        handles NativeWindow instances as well as AWT Components.<br></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if the given window object
        could not be handled by any of the registered
        NativeWindowFactory instances</dd>
<dd><code><a href="NativeWindowException.html" title="class in com.jogamp.nativewindow">NativeWindowException</a></code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><code>com.jogamp.nativewindow.GraphicsConfigurationFactory#chooseGraphicsConfiguration(Capabilities, CapabilitiesChooser, AbstractGraphicsScreen)</code></dd>
</dl>
</li>
</ul>
<a id="getOffscreenLayerSurface(com.jogamp.nativewindow.NativeSurface,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOffscreenLayerSurface</h4>
<pre class="methodSignature">public static&nbsp;<a href="OffscreenLayerSurface.html" title="interface in com.jogamp.nativewindow">OffscreenLayerSurface</a>&nbsp;getOffscreenLayerSurface&#8203;(<a href="NativeSurface.html" title="interface in com.jogamp.nativewindow">NativeSurface</a>&nbsp;surface,
                                                             boolean&nbsp;ifEnabled)</pre>
<div class="block">Returns the <a href="OffscreenLayerSurface.html" title="interface in com.jogamp.nativewindow"><code>OffscreenLayerSurface</code></a> instance of this <a href="NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a>.
 <p>
 In case this surface is a <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a>, we traverse from the given surface
 up to root until an implementation of <a href="OffscreenLayerSurface.html" title="interface in com.jogamp.nativewindow"><code>OffscreenLayerSurface</code></a> is found.
 In case <code>ifEnabled</code> is true, the surface must also implement <a href="OffscreenLayerOption.html" title="interface in com.jogamp.nativewindow"><code>OffscreenLayerOption</code></a>
 where <a href="OffscreenLayerOption.html#isOffscreenLayerSurfaceEnabled()"><code>OffscreenLayerOption.isOffscreenLayerSurfaceEnabled()</code></a> is <code>true</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>surface</code> - The surface to query.</dd>
<dd><code>ifEnabled</code> - If true, only return the enabled <a href="OffscreenLayerSurface.html" title="interface in com.jogamp.nativewindow"><code>OffscreenLayerSurface</code></a>, see <a href="OffscreenLayerOption.html#isOffscreenLayerSurfaceEnabled()"><code>OffscreenLayerOption.isOffscreenLayerSurfaceEnabled()</code></a>.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a id="isNativeVisualIDValidForProcessing(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isNativeVisualIDValidForProcessing</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isNativeVisualIDValidForProcessing&#8203;(int&nbsp;visualID)</pre>
<div class="block">Returns true if the given visualID is valid for further processing, i.e. OpenGL usage,
 otherwise return false.
 <p>
 On certain platforms, i.e. X11, a valid visualID is required at window creation.
 Other platforms may determine it later on, e.g. OSX and Windows. </p>
 <p>
 If the visualID is <a href="VisualIDHolder.html#VID_UNDEFINED"><code>VisualIDHolder.VID_UNDEFINED</code></a> and the platform requires it
 at creation time (see above), it is not valid for further processing.
 </p>
 <p>
 FIXME: Bug 973 Needs service provider interface (SPI) for TK dependent implementation
 </p></div>
</li>
</ul>
<a id="getDefaultDisplayConnection()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultDisplayConnection</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getDefaultDisplayConnection()</pre>
</li>
</ul>
<a id="getDefaultDisplayConnection(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultDisplayConnection</h4>
<pre class="methodSignature">public static&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getDefaultDisplayConnection&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;nwt)</pre>
</li>
</ul>
<a id="createDevice(java.lang.String,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createDevice</h4>
<pre class="methodSignature">public static&nbsp;<a href="AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;createDevice&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;displayConnection,
                                                  boolean&nbsp;own)</pre>
<div class="block">Creates a native device type, following <a href="#getNativeWindowType(boolean)"><code>getNativeWindowType(true)</code></a>.
 <p>
 The device will be opened if <code>own</code> is true, otherwise no native handle will ever be acquired.
 </p></div>
</li>
</ul>
<a id="createDevice(java.lang.String,java.lang.String,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createDevice</h4>
<pre class="methodSignature">public static&nbsp;<a href="AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;createDevice&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;nwt,
                                                  <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;displayConnection,
                                                  boolean&nbsp;own)</pre>
<div class="block">Creates a native device type, following the given <a href="#getNativeWindowType(boolean)"><code>native-window-type</code></a>.
 <p>
 The device will be opened if <code>own</code> is true, otherwise no native handle will ever be acquired.
 </p>
 <p>
 FIXME: Bug 973 Needs service provider interface (SPI) for TK dependent implementation
 </p></div>
</li>
</ul>
<a id="createWrappedWindow(com.jogamp.nativewindow.AbstractGraphicsScreen,long,long,com.jogamp.nativewindow.UpstreamWindowHookMutableSizePos)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createWrappedWindow</h4>
<pre class="methodSignature">public static&nbsp;<a href="NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;createWrappedWindow&#8203;(<a href="AbstractGraphicsScreen.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsScreen</a>&nbsp;aScreen,
                                               long&nbsp;surfaceHandle,
                                               long&nbsp;windowHandle,
                                               <a href="UpstreamWindowHookMutableSizePos.html" title="class in com.jogamp.nativewindow">UpstreamWindowHookMutableSizePos</a>&nbsp;hook)</pre>
<div class="block">Creates a wrapped <a href="NativeWindow.html" title="interface in com.jogamp.nativewindow"><code>NativeWindow</code></a> with given native handles and <a href="AbstractGraphicsScreen.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsScreen</code></a>.
 <p>
 The given <a href="UpstreamWindowHookMutableSizePos.html" title="class in com.jogamp.nativewindow"><code>UpstreamWindowHookMutableSizePos</code></a> maybe used to reflect resizes and repositioning of the native window.
 </p>
 <p>
 The <a href="AbstractGraphicsScreen.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsScreen</code></a> may be created via <a href="#createScreen(com.jogamp.nativewindow.AbstractGraphicsDevice,int)"><code>createScreen(AbstractGraphicsDevice, int)</code></a>.
 </p>
 <p>
 The <a href="AbstractGraphicsScreen.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsScreen</code></a> may have an underlying open <a href="AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow"><code>AbstractGraphicsDevice</code></a>
 or a simple <i>dummy</i> instance, see <a href="#createDevice(java.lang.String,boolean)"><code>createDevice(String, boolean)</code></a>.
 </p></div>
</li>
</ul>
<a id="getLocationOnScreen(com.jogamp.nativewindow.NativeWindow)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getLocationOnScreen</h4>
<pre class="methodSignature">public static&nbsp;<a href="util/Point.html" title="class in com.jogamp.nativewindow.util">Point</a>&nbsp;getLocationOnScreen&#8203;(<a href="NativeWindow.html" title="interface in com.jogamp.nativewindow">NativeWindow</a>&nbsp;nw)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nw</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>top-left client-area position in window units
 <p>
 FIXME: Bug 973 Needs service provider interface (SPI) for TK dependent implementation
 </p></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/nativewindow/NativeWindowFactory.html" target="_top">Frames</a></li>
<li><a href="NativeWindowFactory.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
