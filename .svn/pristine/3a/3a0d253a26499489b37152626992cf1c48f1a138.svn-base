<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:32:53 CET 2023 -->
<title>GLContext (JOGL, NativeWindow and NEWT APIs)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GLContext (JOGL, NativeWindow and NEWT APIs)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":6,"i1":10,"i2":10,"i3":10,"i4":9,"i5":6,"i6":9,"i7":6,"i8":10,"i9":6,"i10":10,"i11":6,"i12":6,"i13":10,"i14":9,"i15":9,"i16":6,"i17":6,"i18":6,"i19":6,"i20":6,"i21":6,"i22":10,"i23":6,"i24":6,"i25":6,"i26":6,"i27":6,"i28":6,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":9,"i36":9,"i37":10,"i38":6,"i39":6,"i40":10,"i41":6,"i42":10,"i43":10,"i44":10,"i45":6,"i46":6,"i47":6,"i48":10,"i49":10,"i50":10,"i51":10,"i52":10,"i53":10,"i54":10,"i55":10,"i56":10,"i57":10,"i58":6,"i59":9,"i60":6,"i61":10,"i62":9,"i63":10,"i64":10,"i65":10,"i66":10,"i67":10,"i68":9,"i69":10,"i70":9,"i71":10,"i72":10,"i73":10,"i74":9,"i75":10,"i76":9,"i77":10,"i78":10,"i79":10,"i80":10,"i81":10,"i82":10,"i83":6,"i84":6,"i85":10,"i86":10,"i87":9,"i88":10,"i89":9,"i90":10,"i91":10,"i92":10,"i93":9,"i94":10,"i95":9,"i96":9,"i97":10,"i98":9,"i99":10,"i100":10,"i101":6,"i102":10,"i103":9,"i104":10,"i105":10,"i106":10,"i107":9,"i108":10,"i109":6,"i110":9,"i111":10,"i112":6,"i113":6,"i114":6,"i115":6,"i116":6,"i117":6,"i118":6,"i119":10,"i120":10,"i121":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLContext.html" target="_top">Frames</a></li>
<li><a href="GLContext.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.opengl</a></div>
<h2 title="Class GLContext" class="title">Class GLContext</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.opengl.GLContext</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public abstract class <span class="typeNameLabel">GLContext</span>
extends <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Abstraction for an OpenGL rendering context. In order to perform
    OpenGL rendering, a context must be "made current" on the current
    thread. OpenGL rendering semantics specify that only one context
    may be current on the current thread at any given time, and also
    that a given context may be current on only one thread at any
    given time. Because components can be added to and removed from
    the component hierarchy at any time, it is possible that the
    underlying OpenGL context may need to be destroyed and recreated
    multiple times over the lifetime of a given component. This
    process is handled by the implementation, and the GLContext
    abstraction provides a stable object which clients can use to
    refer to a given context.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#CONTEXT_CURRENT">CONTEXT_CURRENT</a></span></code></th>
<td class="colLast">
<div class="block">Indicates that the context was made current during the last call to <a href="#makeCurrent()"><code>makeCurrent</code></a>, value 1.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#CONTEXT_CURRENT_NEW">CONTEXT_CURRENT_NEW</a></span></code></th>
<td class="colLast">
<div class="block">Indicates that a newly-created context was made current during the last call to <a href="#makeCurrent()"><code>makeCurrent</code></a>, value 2.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#CONTEXT_NOT_CURRENT">CONTEXT_NOT_CURRENT</a></span></code></th>
<td class="colLast">
<div class="block">Indicates that the context was not made current during the last call to <a href="#makeCurrent()"><code>makeCurrent</code></a>, value 0.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#CTX_OPTION_DEBUG">CTX_OPTION_DEBUG</a></span></code></th>
<td class="colLast">
<div class="block"><code>ARB_create_context</code> related: flag debug.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEBUG">DEBUG</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEBUG_GL">DEBUG_GL</a></span></code></th>
<td class="colLast">
<div class="block">Reflects property jogl.debug.DebugGL.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#DEBUG_TRACE_SWITCH">DEBUG_TRACE_SWITCH</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int[][]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ES_VERSIONS">ES_VERSIONS</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int[][]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#GL_VERSIONS">GL_VERSIONS</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#PROFILE_ALIASING">PROFILE_ALIASING</a></span></code></th>
<td class="colLast">
<div class="block">If <code>true</code> (default), bootstrapping the available GL profiles
 will use the highest compatible GL context for each profile,
 hence skipping querying lower profiles if a compatible higher one is found:
 
   4.2-core -> 4.2-core, 3.3-core
   4.2-comp -> 4.2-comp, 3.3-comp, 2
 
 Otherwise the dedicated GL context would be queried and used:
 
   4.2-core -> 4.2-core
   3.3-core -> 3.3-core
   4.2-comp -> 4.2-comp
   3.3-comp -> 3.3-comp
   3.0-comp -> 2
 
 Using aliasing speeds up initialization about:
 
   Linux x86_64 - Nvidia: 28%,  700ms down to 500ms
   Linux x86_64 - AMD   : 40%, 1500ms down to 900ms</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TRACE_GL">TRACE_GL</a></span></code></th>
<td class="colLast">
<div class="block">Reflects property jogl.debug.TraceGL.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#TRACE_SWITCH">TRACE_SWITCH</a></span></code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_0">Version1_0</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.00, i.e.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_1">Version1_1</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.1, i.e.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_10">Version1_10</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.10, i.e.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_2">Version1_2</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.2, i.e.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_20">Version1_20</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.20, i.e.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_30">Version1_30</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.30, i.e.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_4">Version1_4</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.4, i.e.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_40">Version1_40</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.40, i.e.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_5">Version1_5</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.5, i.e.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version1_50">Version1_50</a></span></code></th>
<td class="colLast">
<div class="block">Version 1.50, i.e.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version3_0">Version3_0</a></span></code></th>
<td class="colLast">
<div class="block">Version 3.0.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version3_1">Version3_1</a></span></code></th>
<td class="colLast">
<div class="block">Version 3.1.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version3_2">Version3_2</a></span></code></th>
<td class="colLast">
<div class="block">Version 3.2.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#Version4_3">Version4_3</a></span></code></th>
<td class="colLast">
<div class="block">Version 4.3.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addGLDebugListener(com.jogamp.opengl.GLDebugListener)">addGLDebugListener</a></span>&#8203;(<a href="GLDebugListener.html" title="interface in com.jogamp.opengl">GLDebugListener</a>&nbsp;listener)</code></th>
<td class="colLast">
<div class="block">Add <a href="GLDebugListener.html" title="interface in com.jogamp.opengl"><code>GLDebugListener</code></a>.<br></div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#append(java.lang.StringBuilder)">append</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#attachObject(java.lang.String,java.lang.Object)">attachObject</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;name,
            <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;obj)</code></th>
<td class="colLast">
<div class="block">Sets the attached user object for the given name to this GLContext.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#bindSwapBarrier(int,int)">bindSwapBarrier</a></span>&#8203;(int&nbsp;group,
               int&nbsp;barrier)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#clipGLVersion(int,int%5B%5D,int%5B%5D)">clipGLVersion</a></span>&#8203;(int&nbsp;ctxProfile,
             int[]&nbsp;major,
             int[]&nbsp;minor)</code></th>
<td class="colLast">
<div class="block">Clip the given GL version to the maximum known valid version if exceeding.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#copy(com.jogamp.opengl.GLContext,int)">copy</a></span>&#8203;(<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;source,
    int&nbsp;mask)</code></th>
<td class="colLast">
<div class="block">Copies selected groups of OpenGL state variables from the
 supplied source context into this one.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#decrementGLVersion(int,int%5B%5D,int%5B%5D)">decrementGLVersion</a></span>&#8203;(int&nbsp;ctxProfile,
                  int[]&nbsp;major,
                  int[]&nbsp;minor)</code></th>
<td class="colLast">
<div class="block">Decrement the given GL version by one
 and return true if still valid, otherwise false.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#destroy()">destroy</a></span>()</code></th>
<td class="colLast">
<div class="block">Destroys this OpenGL context and frees its associated
 resources.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#detachObject(java.lang.String)">detachObject</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;name)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#enableGLDebugMessage(boolean)">enableGLDebugMessage</a></span>&#8203;(boolean&nbsp;enable)</code></th>
<td class="colLast">
<div class="block">Enables or disables the GLDebugOutput feature of extension <a href="GLExtensions.html#ARB_debug_output"><code>GLExtensions.ARB_debug_output</code></a>
 or <a href="GLExtensions.html#AMD_debug_output"><code>GLExtensions.AMD_debug_output</code></a>, if available.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getAttachedObject(java.lang.String)">getAttachedObject</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;name)</code></th>
<td class="colLast">
<div class="block">Returns the attached user object for the given name to this GLContext.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getBoundFramebuffer(int)">getBoundFramebuffer</a></span>&#8203;(int&nbsp;target)</code></th>
<td class="colLast">
<div class="block">Return the framebuffer name bound to this context,
 see <a href="GL.html#glBindFramebuffer(int,int)"><code>GL.glBindFramebuffer(int, int)</code></a>.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getContextCreationFlags()">getContextCreationFlags</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getCreatedShares()">getCreatedShares</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a new list of created GLContext shared with this GLContext.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>static <a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getCurrent()">getCurrent</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns this thread current context.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>static <a href="GL.html" title="interface in com.jogamp.opengl">GL</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getCurrentGL()">getCurrentGL</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the GL object bound to this thread current context.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultDrawFramebuffer()">getDefaultDrawFramebuffer</a></span>()</code></th>
<td class="colLast">
<div class="block">Return the default draw framebuffer name.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultPixelDataFormat()">getDefaultPixelDataFormat</a></span>()</code></th>
<td class="colLast">
<div class="block">Get the default pixel data format, as required by e.g.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultPixelDataType()">getDefaultPixelDataType</a></span>()</code></th>
<td class="colLast">
<div class="block">Get the default pixel data type, as required by e.g.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultReadBuffer()">getDefaultReadBuffer</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the default color buffer within the current bound
 <a href="#getDefaultReadFramebuffer()"><code>getDefaultReadFramebuffer()</code></a>, i.e.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultReadFramebuffer()">getDefaultReadFramebuffer</a></span>()</code></th>
<td class="colLast">
<div class="block">Return the default read framebuffer name.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDefaultVAO()">getDefaultVAO</a></span>()</code></th>
<td class="colLast">
<div class="block">If this GLContext does not implement a default VAO, see <a href="#hasNoDefaultVAO()"><code>hasNoDefaultVAO()</code></a>,
 an <i>own default VAO</i> will be created and bound at context creation.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getDestroyedShares()">getDestroyedShares</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a new list of destroyed GLContext shared with this GLContext.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>abstract <a href="GL.html" title="interface in com.jogamp.opengl">GL</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGL()">getGL</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the GL pipeline object for this GLContext.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>abstract <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLDebugMessageExtension()">getGLDebugMessageExtension</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>abstract <a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLDrawable()">getGLDrawable</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the write-drawable this context uses for framebuffer operations.</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLExtensionCount()">getGLExtensionCount</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the number of OpenGL extensions</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>abstract <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLExtensionsString()">getGLExtensionsString</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a non-null (but possibly empty) string containing the
      space-separated list of available extensions.</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>abstract <a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLReadDrawable()">getGLReadDrawable</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the read-Drawable this context uses for read framebuffer operations.</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code><a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLSLVersionNumber()">getGLSLVersionNumber</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the matching GLSL version number, queried by this context GL
 via <a href="GL2ES2.html#GL_SHADING_LANGUAGE_VERSION"><code>GL2ES2.GL_SHADING_LANGUAGE_VERSION</code></a> if &ge; ES2.0 or GL2.0,
 otherwise a static match is being utilized.</div>
</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLSLVersionString()">getGLSLVersionString</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the GLSL version string as to be used in a shader program, including a terminating newline '\n',
 i.e.</div>
</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code><a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumberString.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumberString</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLVendorVersionNumber()">getGLVendorVersionNumber</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the vendor's version, i.e.</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLVersion()">getGLVersion</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a valid OpenGL version string, ie<br></div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code><a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGLVersionNumber()">getGLVersionNumber</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns this context OpenGL version.</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getHandle()">getHandle</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the underlying native OpenGL context handle</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMaxMajor(int)">getMaxMajor</a></span>&#8203;(int&nbsp;ctxProfile)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMaxMinor(int,int)">getMaxMinor</a></span>&#8203;(int&nbsp;ctxProfile,
           int&nbsp;major)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMaxRenderbufferSamples()">getMaxRenderbufferSamples</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the maximum number of FBO RENDERBUFFER samples
 if <a href="#hasFullFBOSupport()"><code>full FBO is supported</code></a>, otherwise false.</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPlatformExtensionCount()">getPlatformExtensionCount</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the number of platform extensions</div>
</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>abstract <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPlatformExtensionsString()">getPlatformExtensionsString</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns a non-null (but possibly empty) string containing the
      space-separated list of available platform-dependent (e.g., WGL,
      GLX) extensions.</div>
</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code><a href="GLRendererQuirks.html" title="class in com.jogamp.opengl">GLRendererQuirks</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRendererQuirks()">getRendererQuirks</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the instance of <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a>, allowing one to determine workarounds.</div>
</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>abstract <a href="GL.html" title="interface in com.jogamp.opengl">GL</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRootGL()">getRootGL</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the implementing root GL instance of this GLContext's GL object,
 considering a wrapped pipelined hierarchy, see <a href="GLBase.html#getDownstreamGL()"><code>GLBase.getDownstreamGL()</code></a>.</div>
</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code><a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSharedMaster()">getSharedMaster</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the shared master GLContext of this GLContext if shared, otherwise return <code>null</code>.</div>
</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSwapGroup()">getSwapGroup</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSwapInterval()">getSwapInterval</a></span>()</code></th>
<td class="colLast">
<div class="block">Return the current swap interval.</div>
</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#glDebugMessageControl(int,int,int,int,int%5B%5D,int,boolean)">glDebugMessageControl</a></span>&#8203;(int&nbsp;source,
                     int&nbsp;type,
                     int&nbsp;severity,
                     int&nbsp;count,
                     int[]&nbsp;ids,
                     int&nbsp;ids_offset,
                     boolean&nbsp;enabled)</code></th>
<td class="colLast">
<div class="block">Generic entry for <a href="GL2ES2.html#glDebugMessageControl(int,int,int,int,int%5B%5D,int,boolean)"><code>GL2ES2.glDebugMessageControl(int, int, int, int, int[], int, boolean)</code></a>
 and <a href="GL2GL3.html#glDebugMessageEnableAMD(int,int,int,int%5B%5D,int,boolean)"><code>GL2GL3.glDebugMessageEnableAMD(int, int, int, int[], int, boolean)</code></a> of the GLDebugOutput feature.</div>
</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#glDebugMessageControl(int,int,int,int,java.nio.IntBuffer,boolean)">glDebugMessageControl</a></span>&#8203;(int&nbsp;source,
                     int&nbsp;type,
                     int&nbsp;severity,
                     int&nbsp;count,
                     <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/IntBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">IntBuffer</a>&nbsp;ids,
                     boolean&nbsp;enabled)</code></th>
<td class="colLast">
<div class="block">Generic entry for <a href="GL2ES2.html#glDebugMessageControl(int,int,int,int,java.nio.IntBuffer,boolean)"><code>GL2ES2.glDebugMessageControl(int, int, int, int, IntBuffer, boolean)</code></a>
 and <a href="GL2GL3.html#glDebugMessageEnableAMD(int,int,int,java.nio.IntBuffer,boolean)"><code>GL2GL3.glDebugMessageEnableAMD(int, int, int, IntBuffer, boolean)</code></a> of the GLDebugOutput feature.</div>
</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#glDebugMessageInsert(int,int,int,int,java.lang.String)">glDebugMessageInsert</a></span>&#8203;(int&nbsp;source,
                    int&nbsp;type,
                    int&nbsp;id,
                    int&nbsp;severity,
                    <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;buf)</code></th>
<td class="colLast">
<div class="block">Generic entry for <a href="GL2ES2.html#glDebugMessageInsert(int,int,int,int,int,java.lang.String)"><code>GL2ES2.glDebugMessageInsert(int, int, int, int, int, String)</code></a>
 and <a href="GL2GL3.html#glDebugMessageInsertAMD(int,int,int,int,java.lang.String)"><code>GL2GL3.glDebugMessageInsertAMD(int, int, int, int, String)</code></a> of the GLDebugOutput feature.</div>
</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasBasicFBOSupport()">hasBasicFBOSupport</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns <code>true</code> if basic FBO support is available, otherwise <code>false</code>.</div>
</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasFP32CompatAPI()">hasFP32CompatAPI</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns <code>true</code> if <code>OES_single_precision</code>, fp32, fixed function point (FFP) compatibility entry points available,
 otherwise <code>false</code>.</div>
</td>
</tr>
<tr id="i50" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasFullFBOSupport()">hasFullFBOSupport</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns <code>true</code> if full FBO support is available, otherwise <code>false</code>.</div>
</td>
</tr>
<tr id="i51" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasGLSL()">hasGLSL</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i52" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasNoDefaultVAO()">hasNoDefaultVAO</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext's native profile does not implement a <i>default vertex array object</i> (VAO),
 starting w/ OpenGL 3.1 core.</div>
</td>
</tr>
<tr id="i53" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#hasRendererQuirk(int)">hasRendererQuirk</a></span>&#8203;(int&nbsp;quirk)</code></th>
<td class="colLast">
<div class="block">Returns true if the <code>quirk</code> exist in <a href="#getRendererQuirks()"><code>getRendererQuirks()</code></a>, otherwise false.</div>
</td>
</tr>
<tr id="i54" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isCPUDataSourcingAvail()">isCPUDataSourcingAvail</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext allows CPU data sourcing (indices, vertices ..) as opposed to using a GPU buffer source (VBO),
 e.g.</div>
</td>
</tr>
<tr id="i55" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isCreated()">isCreated</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether the underlying native OpenGL context has been created.</div>
</td>
</tr>
<tr id="i56" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isCreatedWithARBMethod()">isCreatedWithARBMethod</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i57" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isCurrent()">isCurrent</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i58" class="altColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isExtensionAvailable(java.lang.String)">isExtensionAvailable</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;glExtensionName)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified OpenGL extension can be
 successfully called using this GL context given the current host (OpenGL
 <i>client</i>) and display (OpenGL <i>server</i>) configuration.</div>
</td>
</tr>
<tr id="i59" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isFBOAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">isFBOAvailable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
              <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</code></th>
<td class="colLast">
<div class="block">Returns true if it is possible to create an <i>framebuffer object</i> (FBO).</div>
</td>
</tr>
<tr id="i60" class="altColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isFunctionAvailable(java.lang.String)">isFunctionAvailable</a></span>&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;glFunctionName)</code></th>
<td class="colLast">
<div class="block">Returns true if the specified OpenGL core- or extension-function can be
 successfully called using this GL context given the current host (OpenGL
 <i>client</i>) and display (OpenGL <i>server</i>) configuration.</div>
</td>
</tr>
<tr id="i61" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL2()">isGL2</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL2.</div>
</td>
</tr>
<tr id="i62" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL2Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean%5B%5D)">isGL2Available</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
              boolean[]&nbsp;isHardware)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i63" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL2ES1()">isGL2ES1</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL2ES1.</div>
</td>
</tr>
<tr id="i64" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL2ES2()">isGL2ES2</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL2ES2.</div>
</td>
</tr>
<tr id="i65" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL2ES3()">isGL2ES3</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL2ES3.</div>
</td>
</tr>
<tr id="i66" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL2GL3()">isGL2GL3</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL2GL3.</div>
</td>
</tr>
<tr id="i67" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL3()">isGL3</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL3.</div>
</td>
</tr>
<tr id="i68" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL3Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean%5B%5D)">isGL3Available</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
              boolean[]&nbsp;isHardware)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i69" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL3bc()">isGL3bc</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL3bc.</div>
</td>
</tr>
<tr id="i70" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL3bcAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean%5B%5D)">isGL3bcAvailable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                boolean[]&nbsp;isHardware)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i71" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL3core()">isGL3core</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext uses a GL3 core profile.</div>
</td>
</tr>
<tr id="i72" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL3ES3()">isGL3ES3</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL3ES3.</div>
</td>
</tr>
<tr id="i73" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL4()">isGL4</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL4.</div>
</td>
</tr>
<tr id="i74" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL4Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean%5B%5D)">isGL4Available</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
              boolean[]&nbsp;isHardware)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i75" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL4bc()">isGL4bc</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GL4bc.</div>
</td>
</tr>
<tr id="i76" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL4bcAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean%5B%5D)">isGL4bcAvailable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                boolean[]&nbsp;isHardware)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i77" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL4core()">isGL4core</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext uses a GL4 core profile.</div>
</td>
</tr>
<tr id="i78" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGL4ES3()">isGL4ES3</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if this profile is capable of GL4ES3, i.e.</div>
</td>
</tr>
<tr id="i79" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLCompatibilityProfile()">isGLCompatibilityProfile</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i80" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLcore()">isGLcore</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext uses a GL core profile.</div>
</td>
</tr>
<tr id="i81" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLCoreProfile()">isGLCoreProfile</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i82" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLDebugEnabled()">isGLDebugEnabled</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i83" class="rowColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLDebugMessageEnabled()">isGLDebugMessageEnabled</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i84" class="altColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLDebugSynchronous()">isGLDebugSynchronous</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i85" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES()">isGLES</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GLES.</div>
</td>
</tr>
<tr id="i86" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES1()">isGLES1</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GLES1.</div>
</td>
</tr>
<tr id="i87" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES1Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean%5B%5D)">isGLES1Available</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                boolean[]&nbsp;isHardware)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i88" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES2()">isGLES2</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GLES2.</div>
</td>
</tr>
<tr id="i89" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES2Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean%5B%5D)">isGLES2Available</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                boolean[]&nbsp;isHardware)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i90" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES2Compatible()">isGLES2Compatible</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i91" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES3()">isGLES3</a></span>()</code></th>
<td class="colLast">
<div class="block">Indicates whether this GLContext is capable of GLES3.</div>
</td>
</tr>
<tr id="i92" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES31Compatible()">isGLES31Compatible</a></span>()</code></th>
<td class="colLast">
<div class="block">Return true if this context is an ES3 context &ge; 3.1 or implements
 the extension <code>GL_ARB_ES3_1_compatibility</code>, otherwise false.</div>
</td>
</tr>
<tr id="i93" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES31CompatibleAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice)">isGLES31CompatibleAvailable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</code></th>
<td class="colLast">
<div class="block">Returns true if a ES3 &ge; 3.1 compatible profile is available,
 i.e.</div>
</td>
</tr>
<tr id="i94" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES32Compatible()">isGLES32Compatible</a></span>()</code></th>
<td class="colLast">
<div class="block">Return true if this context is an ES3 context &ge; 3.2 or implements
 the extension <code>GL_ARB_ES3_2_compatibility</code>, otherwise false.</div>
</td>
</tr>
<tr id="i95" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES32CompatibleAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice)">isGLES32CompatibleAvailable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</code></th>
<td class="colLast">
<div class="block">Returns true if a ES3 &ge; 3.2 compatible profile is available,
 i.e.</div>
</td>
</tr>
<tr id="i96" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES3Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean%5B%5D)">isGLES3Available</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                boolean[]&nbsp;isHardware)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i97" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES3Compatible()">isGLES3Compatible</a></span>()</code></th>
<td class="colLast">
<div class="block">Return true if this context is an ES3 context or implements
 the extension <code>GL_ARB_ES3_compatibility</code>, otherwise false.</div>
</td>
</tr>
<tr id="i98" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLES3CompatibleAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice)">isGLES3CompatibleAvailable</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</code></th>
<td class="colLast">
<div class="block">Returns true if a ES3 compatible profile is available,
 i.e.</div>
</td>
</tr>
<tr id="i99" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLESProfile()">isGLESProfile</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i100" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLForwardCompatible()">isGLForwardCompatible</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i101" class="rowColor">
<td class="colFirst"><code>abstract boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isGLReadDrawableAvailable()">isGLReadDrawableAvailable</a></span>()</code></th>
<td class="colLast">
<div class="block">Query whether using a distinguished read-drawable is supported.</div>
</td>
</tr>
<tr id="i102" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isHardwareRasterizer()">isHardwareRasterizer</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i103" class="rowColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isHardwareRasterizer(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">isHardwareRasterizer</a></span>&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                    <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i104" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isNPOTTextureAvailable()">isNPOTTextureAvailable</a></span>()</code></th>
<td class="colLast">
<div class="block">Note: The GL impl.</div>
</td>
</tr>
<tr id="i105" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isShared()">isShared</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if this GLContext is shared, otherwise false.</div>
</td>
</tr>
<tr id="i106" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isTextureFormatBGRA8888Available()">isTextureFormatBGRA8888Available</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i107" class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isValidGLVersion(int,int,int)">isValidGLVersion</a></span>&#8203;(int&nbsp;ctxProfile,
                int&nbsp;major,
                int&nbsp;minor)</code></th>
<td class="colLast">
<div class="block">Returns true, if the major.minor is not inferior to the lowest
 valid version and does not exceed the highest known major number by more than one.</div>
</td>
</tr>
<tr id="i108" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#joinSwapGroup(int)">joinSwapGroup</a></span>&#8203;(int&nbsp;group)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i109" class="rowColor">
<td class="colFirst"><code>abstract int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeCurrent()">makeCurrent</a></span>()</code></th>
<td class="colLast">
<div class="block">Makes this GLContext current on the calling thread.</div>
</td>
</tr>
<tr id="i110" class="altColor">
<td class="colFirst"><code>static <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#makeCurrentResultToString(int)">makeCurrentResultToString</a></span>&#8203;(int&nbsp;res)</code></th>
<td class="colLast">
<div class="block">Returns a String representation of the <a href="#makeCurrent()"><code>makeCurrent()</code></a> result.</div>
</td>
</tr>
<tr id="i111" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#queryMaxSwapGroups(int%5B%5D,int,int%5B%5D,int)">queryMaxSwapGroups</a></span>&#8203;(int[]&nbsp;maxGroups,
                  int&nbsp;maxGroups_offset,
                  int[]&nbsp;maxBarriers,
                  int&nbsp;maxBarriers_offset)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i112" class="altColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#release()">release</a></span>()</code></th>
<td class="colLast">
<div class="block">Releases control of this GLContext from the current thread.</div>
</td>
</tr>
<tr id="i113" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#removeGLDebugListener(com.jogamp.opengl.GLDebugListener)">removeGLDebugListener</a></span>&#8203;(<a href="GLDebugListener.html" title="interface in com.jogamp.opengl">GLDebugListener</a>&nbsp;listener)</code></th>
<td class="colLast">
<div class="block">Remove <a href="GLDebugListener.html" title="interface in com.jogamp.opengl"><code>GLDebugListener</code></a>.<br></div>
</td>
</tr>
<tr id="i114" class="altColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setContextCreationFlags(int)">setContextCreationFlags</a></span>&#8203;(int&nbsp;flags)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i115" class="rowColor">
<td class="colFirst"><code>abstract <a href="GL.html" title="interface in com.jogamp.opengl">GL</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setGL(com.jogamp.opengl.GL)">setGL</a></span>&#8203;(<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</code></th>
<td class="colLast">
<div class="block">Sets the GL pipeline object for this GLContext.</div>
</td>
</tr>
<tr id="i116" class="altColor">
<td class="colFirst"><code>abstract void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setGLDebugSynchronous(boolean)">setGLDebugSynchronous</a></span>&#8203;(boolean&nbsp;synchronous)</code></th>
<td class="colLast">
<div class="block">Enables or disables the synchronous debug behavior via
 <a href="GL2ES2.html#GL_DEBUG_OUTPUT_SYNCHRONOUS"><code>glEnable/glDisable(GL_DEBUG_OUTPUT_SYNCHRONOUS)</code></a>,
 if extension is <a href="GLExtensions.html#ARB_debug_output"><code>GLExtensions.ARB_debug_output</code></a>.</div>
</td>
</tr>
<tr id="i117" class="rowColor">
<td class="colFirst"><code>abstract <a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setGLDrawable(com.jogamp.opengl.GLDrawable,boolean)">setGLDrawable</a></span>&#8203;(<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;readWrite,
             boolean&nbsp;setWriteOnly)</code></th>
<td class="colLast">
<div class="block">Sets the read/write drawable for framebuffer operations, i.e.</div>
</td>
</tr>
<tr id="i118" class="altColor">
<td class="colFirst"><code>abstract <a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setGLReadDrawable(com.jogamp.opengl.GLDrawable)">setGLReadDrawable</a></span>&#8203;(<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;read)</code></th>
<td class="colLast">
<div class="block">Set the read-Drawable for read framebuffer operations.<br>
 The caller should query if this feature is supported via <a href="#isGLReadDrawableAvailable()"><code>isGLReadDrawableAvailable()</code></a>.</div>
</td>
</tr>
<tr id="i119" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setSwapInterval(int)">setSwapInterval</a></span>&#8203;(int&nbsp;interval)</code></th>
<td class="colLast">
<div class="block">Set the swap interval of the current context and attached <i>onscreen <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a></i>.</div>
</td>
</tr>
<tr id="i120" class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">
<div class="block">Classname, GL, GLDrawable</div>
</td>
</tr>
<tr id="i121" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#validateCurrent()">validateCurrent</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="DEBUG">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DEBUG</h4>
<pre>public static final&nbsp;boolean DEBUG</pre>
</li>
</ul>
<a id="TRACE_SWITCH">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TRACE_SWITCH</h4>
<pre>public static final&nbsp;boolean TRACE_SWITCH</pre>
</li>
</ul>
<a id="DEBUG_TRACE_SWITCH">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DEBUG_TRACE_SWITCH</h4>
<pre>public static final&nbsp;boolean DEBUG_TRACE_SWITCH</pre>
</li>
</ul>
<a id="PROFILE_ALIASING">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PROFILE_ALIASING</h4>
<pre>public static final&nbsp;boolean PROFILE_ALIASING</pre>
<div class="block">If <code>true</code> (default), bootstrapping the available GL profiles
 will use the highest compatible GL context for each profile,
 hence skipping querying lower profiles if a compatible higher one is found:
 <ul>
   <li>4.2-core -> 4.2-core, 3.3-core</li>
   <li>4.2-comp -> 4.2-comp, 3.3-comp, 2</li>
 </ul>
 Otherwise the dedicated GL context would be queried and used:
 <ul>
   <li>4.2-core -> 4.2-core</li>
   <li>3.3-core -> 3.3-core</li>
   <li>4.2-comp -> 4.2-comp</li>
   <li>3.3-comp -> 3.3-comp</li>
   <li>3.0-comp -> 2</li>
 </ul>
 Using aliasing speeds up initialization about:
 <ul>
   <li>Linux x86_64 - Nvidia: 28%,  700ms down to 500ms</li>
   <li>Linux x86_64 - AMD   : 40%, 1500ms down to 900ms</li>
 <p>
 Can be turned off with property <code>jogl.debug.GLContext.NoProfileAliasing</code>.
 </p></div>
</li>
</ul>
<a id="DEBUG_GL">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DEBUG_GL</h4>
<pre>public static final&nbsp;boolean DEBUG_GL</pre>
<div class="block">Reflects property jogl.debug.DebugGL. If true, the debug pipeline is enabled at context creation.</div>
</li>
</ul>
<a id="TRACE_GL">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TRACE_GL</h4>
<pre>public static final&nbsp;boolean TRACE_GL</pre>
<div class="block">Reflects property jogl.debug.TraceGL. If true, the trace pipeline is enabled at context creation.</div>
</li>
</ul>
<a id="CONTEXT_NOT_CURRENT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>CONTEXT_NOT_CURRENT</h4>
<pre>public static final&nbsp;int CONTEXT_NOT_CURRENT</pre>
<div class="block">Indicates that the context was not made current during the last call to <a href="#makeCurrent()"><code>makeCurrent</code></a>, value 0.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.opengl.GLContext.CONTEXT_NOT_CURRENT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="CONTEXT_CURRENT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>CONTEXT_CURRENT</h4>
<pre>public static final&nbsp;int CONTEXT_CURRENT</pre>
<div class="block">Indicates that the context was made current during the last call to <a href="#makeCurrent()"><code>makeCurrent</code></a>, value 1.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.opengl.GLContext.CONTEXT_CURRENT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="CONTEXT_CURRENT_NEW">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>CONTEXT_CURRENT_NEW</h4>
<pre>public static final&nbsp;int CONTEXT_CURRENT_NEW</pre>
<div class="block">Indicates that a newly-created context was made current during the last call to <a href="#makeCurrent()"><code>makeCurrent</code></a>, value 2.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.opengl.GLContext.CONTEXT_CURRENT_NEW">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="Version1_0">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_0</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_0</pre>
<div class="block">Version 1.00, i.e. GLSL 1.00 for ES 2.0.</div>
</li>
</ul>
<a id="Version1_10">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_10</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_10</pre>
<div class="block">Version 1.10, i.e. GLSL 1.10 for GL 2.0.</div>
</li>
</ul>
<a id="Version1_20">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_20</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_20</pre>
<div class="block">Version 1.20, i.e. GLSL 1.20 for GL 2.1.</div>
</li>
</ul>
<a id="Version1_30">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_30</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_30</pre>
<div class="block">Version 1.30, i.e. GLSL 1.30 for GL 3.0.</div>
</li>
</ul>
<a id="Version1_40">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_40</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_40</pre>
<div class="block">Version 1.40, i.e. GLSL 1.40 for GL 3.1.</div>
</li>
</ul>
<a id="Version1_50">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_50</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_50</pre>
<div class="block">Version 1.50, i.e. GLSL 1.50 for GL 3.2.</div>
</li>
</ul>
<a id="Version1_1">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_1</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_1</pre>
<div class="block">Version 1.1, i.e. GL 1.1</div>
</li>
</ul>
<a id="Version1_2">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_2</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_2</pre>
<div class="block">Version 1.2, i.e. GL 1.2</div>
</li>
</ul>
<a id="Version1_4">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_4</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_4</pre>
<div class="block">Version 1.4, i.e. GL 1.4</div>
</li>
</ul>
<a id="Version1_5">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version1_5</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version1_5</pre>
<div class="block">Version 1.5, i.e. GL 1.5</div>
</li>
</ul>
<a id="Version3_0">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version3_0</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version3_0</pre>
<div class="block">Version 3.0. As an OpenGL version, it qualifies for desktop <a href="#isGL2()"><code>isGL2()</code></a> only, or ES 3.0. Or GLSL 3.00 for ES 3.0.</div>
</li>
</ul>
<a id="Version3_1">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version3_1</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version3_1</pre>
<div class="block">Version 3.1. As an OpenGL version, it qualifies for <a href="#isGL3core()"><code>isGL3core()</code></a>, <a href="#isGL3bc()"><code>isGL3bc()</code></a> and <a href="#isGL3()"><code>isGL3()</code></a></div>
</li>
</ul>
<a id="Version3_2">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version3_2</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version3_2</pre>
<div class="block">Version 3.2. As an OpenGL version, it qualifies for geometry shader</div>
</li>
</ul>
<a id="Version4_3">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Version4_3</h4>
<pre>public static final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a> Version4_3</pre>
<div class="block">Version 4.3. As an OpenGL version, it qualifies for <code>GL_ARB_ES3_compatibility</code></div>
</li>
</ul>
<a id="CTX_OPTION_DEBUG">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>CTX_OPTION_DEBUG</h4>
<pre>public static final&nbsp;int CTX_OPTION_DEBUG</pre>
<div class="block"><code>ARB_create_context</code> related: flag debug. Cache key value. See <a href="#setContextCreationFlags(int)"><code>setContextCreationFlags(int)</code></a>, <a href="GLAutoDrawable.html#setContextCreationFlags(int)"><code>GLAutoDrawable.setContextCreationFlags(int)</code></a>, <a href="#getAvailableContextProperties(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>getAvailableContextProperties(AbstractGraphicsDevice, GLProfile)</code></a>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#com.jogamp.opengl.GLContext.CTX_OPTION_DEBUG">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a id="GL_VERSIONS">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GL_VERSIONS</h4>
<pre>public static final&nbsp;int[][] GL_VERSIONS</pre>
</li>
</ul>
<a id="ES_VERSIONS">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>ES_VERSIONS</h4>
<pre>public static final&nbsp;int[][] ES_VERSIONS</pre>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="isShared()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isShared</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isShared()</pre>
<div class="block">Returns true if this GLContext is shared, otherwise false.</div>
</li>
</ul>
<a id="getSharedMaster()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSharedMaster</h4>
<pre class="methodSignature">public final&nbsp;<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;getSharedMaster()</pre>
<div class="block">Returns the shared master GLContext of this GLContext if shared, otherwise return <code>null</code>.
 <p>
 Returns this GLContext, if it is a shared master.
 </p></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>2.2.1</dd>
</dl>
</li>
</ul>
<a id="getCreatedShares()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCreatedShares</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&gt;&nbsp;getCreatedShares()</pre>
<div class="block">Returns a new list of created GLContext shared with this GLContext.</div>
</li>
</ul>
<a id="getDestroyedShares()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDestroyedShares</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util" class="externalLink">List</a>&lt;<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&gt;&nbsp;getDestroyedShares()</pre>
<div class="block">Returns a new list of destroyed GLContext shared with this GLContext.</div>
</li>
</ul>
<a id="getRendererQuirks()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRendererQuirks</h4>
<pre class="methodSignature">public final&nbsp;<a href="GLRendererQuirks.html" title="class in com.jogamp.opengl">GLRendererQuirks</a>&nbsp;getRendererQuirks()</pre>
<div class="block">Returns the instance of <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a>, allowing one to determine workarounds.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>instance of <a href="GLRendererQuirks.html" title="class in com.jogamp.opengl"><code>GLRendererQuirks</code></a> if context was made current once, otherwise <code>null</code>.</dd>
</dl>
</li>
</ul>
<a id="hasRendererQuirk(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasRendererQuirk</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;hasRendererQuirk&#8203;(int&nbsp;quirk)
                               throws <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<div class="block">Returns true if the <code>quirk</code> exist in <a href="#getRendererQuirks()"><code>getRendererQuirks()</code></a>, otherwise false.
 <p>
 Convenience method for:
 <pre>
    final GLRendererQuirks glrq = ctx.getRendererQuirks();
    boolean hasQuirk = null != glrq ? glrq.exist(quirk) : false ;
 </pre>
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>quirk</code> - the quirk to be tested, e.g. <a href="GLRendererQuirks.html#NoDoubleBufferedPBuffer"><code>GLRendererQuirks.NoDoubleBufferedPBuffer</code></a>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if the quirk is out of range</dd>
</dl>
</li>
</ul>
<a id="setGLDrawable(com.jogamp.opengl.GLDrawable,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setGLDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;setGLDrawable&#8203;(<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;readWrite,
                                         boolean&nbsp;setWriteOnly)</pre>
<div class="block">Sets the read/write drawable for framebuffer operations, i.e. reassociation of the context's drawable.
 <p>
 If the arguments reflect the current state of this context
 this method is a no-operation and returns the old and current <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a>.
 </p>
 <p>
 Remarks:
 <ul>
   <li><a href="GL.html#glFinish()"><code>glFinish()</code></a> is issued if context <a href="#isCreated()"><code>isCreated()</code></a> and a <a href="#getGLDrawable()"><code>previous drawable</code></a> was bound before disassociation.</li>
   <li>If the context was current on this thread, it is being released before drawable reassociation
       and made current afterwards.</li>
   <li>Implementation may issue <a href="#makeCurrent()"><code>makeCurrent()</code></a> and <a href="#release()"><code>release()</code></a> while drawable reassociation.</li>
   <li>The user shall take extra care of thread synchronization,
       i.e. lock the involved <a href="GLDrawable.html#getNativeSurface()"><code>drawable's</code></a> <a href="../nativewindow/NativeSurface.html" title="interface in com.jogamp.nativewindow"><code>NativeSurface</code></a>s
       to avoid a race condition. In case <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>auto-drawable's</code></a> are used,
       their <a href="GLAutoDrawable.html#getUpstreamLock()"><code>upstream-lock</code></a> must be locked beforehand
       see <a href="GLAutoDrawable.html#locking">GLAutoDrawable Locking</a>.</li>
 </ul>
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>readWrite</code> - The read/write drawable for framebuffer operations, maybe <code>null</code> to remove association.</dd>
<dd><code>setWriteOnly</code> - Only change the write-drawable, if <code>setWriteOnly</code> is <code>true</code> and
                     if the <a href="#getGLReadDrawable()"><code>read-drawable</code></a> differs
                     from the <a href="#getGLDrawable()"><code>write-drawable</code></a>.
                     Otherwise set both drawables, read and write.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The previous read/write drawable if operation succeeds</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - in case <code>null</code> is being passed,
                     this context is made current on another thread
                     or operation fails.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isGLReadDrawableAvailable()"><code>isGLReadDrawableAvailable()</code></a>, 
<a href="#setGLReadDrawable(com.jogamp.opengl.GLDrawable)"><code>setGLReadDrawable(GLDrawable)</code></a>, 
<a href="#getGLReadDrawable()"><code>getGLReadDrawable()</code></a>, 
<a href="#setGLDrawable(com.jogamp.opengl.GLDrawable,boolean)"><code>setGLDrawable(GLDrawable, boolean)</code></a>, 
<a href="#getGLDrawable()"><code>getGLDrawable()</code></a></dd>
</dl>
</li>
</ul>
<a id="getGLDrawable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;getGLDrawable()</pre>
<div class="block">Returns the write-drawable this context uses for framebuffer operations.
 <p>
 If the read-drawable has not been changed manually via <a href="#setGLReadDrawable(com.jogamp.opengl.GLDrawable)"><code>setGLReadDrawable(GLDrawable)</code></a>,
 it equals to the write-drawable (default).
 </p>
 <p>
 Method is only thread-safe while context is <a href="#makeCurrent()"><code>made current</code></a>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setGLDrawable(com.jogamp.opengl.GLDrawable,boolean)"><code>setGLDrawable(GLDrawable, boolean)</code></a>, 
<a href="#setGLReadDrawable(com.jogamp.opengl.GLDrawable)"><code>setGLReadDrawable(GLDrawable)</code></a></dd>
</dl>
</li>
</ul>
<a id="isGLReadDrawableAvailable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLReadDrawableAvailable</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;isGLReadDrawableAvailable()</pre>
<div class="block">Query whether using a distinguished read-drawable is supported.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if using a read-drawable is supported with your driver/OS, otherwise false.</dd>
</dl>
</li>
</ul>
<a id="setGLReadDrawable(com.jogamp.opengl.GLDrawable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setGLReadDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;setGLReadDrawable&#8203;(<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;read)</pre>
<div class="block">Set the read-Drawable for read framebuffer operations.<br>
 The caller should query if this feature is supported via <a href="#isGLReadDrawableAvailable()"><code>isGLReadDrawableAvailable()</code></a>.
 <p>
 If the context was current on this thread, it is being released before switching the drawable
 and made current afterwards. However the user shall take extra care that not other thread
 attempts to make this context current. Otherwise a race condition may happen.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>read</code> - the read-drawable for read framebuffer operations.
             If null is passed, the default write drawable will be set.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the previous read-drawable</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - in case a read drawable is not supported or
                     this context is made current on another thread.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isGLReadDrawableAvailable()"><code>isGLReadDrawableAvailable()</code></a>, 
<a href="#getGLReadDrawable()"><code>getGLReadDrawable()</code></a></dd>
</dl>
</li>
</ul>
<a id="getGLReadDrawable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLReadDrawable</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GLDrawable.html" title="interface in com.jogamp.opengl">GLDrawable</a>&nbsp;getGLReadDrawable()</pre>
<div class="block">Returns the read-Drawable this context uses for read framebuffer operations.
 <p>
 If the read-drawable has not been changed manually via <a href="#setGLReadDrawable(com.jogamp.opengl.GLDrawable)"><code>setGLReadDrawable(GLDrawable)</code></a>,
 it equals to the write-drawable (default).
 </p>
 <p>
 Method is only thread-safe while context is <a href="#makeCurrent()"><code>made current</code></a>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isGLReadDrawableAvailable()"><code>isGLReadDrawableAvailable()</code></a>, 
<a href="#setGLReadDrawable(com.jogamp.opengl.GLDrawable)"><code>setGLReadDrawable(GLDrawable)</code></a>, 
<a href="#getGLReadDrawable()"><code>getGLReadDrawable()</code></a></dd>
</dl>
</li>
</ul>
<a id="makeCurrent()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeCurrent</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;makeCurrent()
                         throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Makes this GLContext current on the calling thread.
 <p>
 Recursive call to <a href="#makeCurrent()"><code>makeCurrent()</code></a> and hence <a href="#release()"><code>release()</code></a> are supported.
 </p>
 <p>
 There are two return values that indicate success and one that
 indicates failure.
 </p>
 <p>
 A return value of <a href="#CONTEXT_CURRENT_NEW"><code>CONTEXT_CURRENT_NEW</code></a>
 indicates that that context has been made current for the 1st time,
 or that the state of the underlying context or drawable has
 changed since the last time this context was current.
 In this case, the application may wish to initialize the render state.
 </p>
 <p>
 A return value of <a href="#CONTEXT_CURRENT"><code>CONTEXT_CURRENT</code></a> indicates that the context has
 been made current, with its previous state restored.
 </p>
 <p>
 If the context could not be made current (for example, because
 the underlying drawable has not ben realized on the display) ,
 a value of <a href="#CONTEXT_NOT_CURRENT"><code>CONTEXT_NOT_CURRENT</code></a> is returned.
 </p>
 <p>
 This method is blocking, i.e. waits until another thread has
 released the context.
 </p>
 <p>
 The drawable's surface is being locked at entry
 and unlocked at <a href="#release()"><code>release()</code></a>
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><ul>
           <li><a href="#CONTEXT_CURRENT_NEW"><code>CONTEXT_CURRENT_NEW</code></a> if the context was successfully made current the 1st time,</li>
           <li><a href="#CONTEXT_CURRENT"><code>CONTEXT_CURRENT</code></a> if the context was successfully made current,</li>
           <li><a href="#CONTEXT_NOT_CURRENT"><code>CONTEXT_NOT_CURRENT</code></a> if the context could not be made current.</li>
         </ul></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if the context could not be created
         or made current due to non-recoverable, system-specific errors.</dd>
</dl>
</li>
</ul>
<a id="release()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>release</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;release()
                      throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Releases control of this GLContext from the current thread.
 <p>
 Recursive call to <a href="#release()"><code>release()</code></a> and hence <a href="#makeCurrent()"><code>makeCurrent()</code></a> are supported.
 </p>
 <p>
 The drawable's surface is being unlocked at exit,
 assumed to be locked by <a href="#makeCurrent()"><code>makeCurrent()</code></a>.
 </p></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if the context had not previously been made
 current on the current thread</dd>
</dl>
</li>
</ul>
<a id="copy(com.jogamp.opengl.GLContext,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>copy</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;copy&#8203;(<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;source,
                          int&nbsp;mask)
                   throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Copies selected groups of OpenGL state variables from the
 supplied source context into this one. The <code>mask</code>
 parameter indicates which groups of state variables are to be
 copied. <code>mask</code> contains the bitwise OR of the same
 symbolic names that are passed to the GL command <a href="GL2.html#glPushAttrib(int)"><code>glPushAttrib</code></a>. The single symbolic constant
 <a href="GL2.html#GL_ALL_ATTRIB_BITS"><code>GL_ALL_ATTRIB_BITS</code></a> can be used to
 copy the maximum possible portion of rendering state. <P>

 Not all values for GL state can be copied. For example, pixel
 pack and unpack state, render mode state, and select and feedback
 state are not copied. The state that can be copied is exactly the
 state that is manipulated by the GL command <a href="GL2.html#glPushAttrib(int)"><code>glPushAttrib</code></a>. <P>

 On most platforms, this context may not be current to any thread,
 including the calling thread, when this method is called. Some
 platforms have additional requirements such as whether this
 context or the source context must occasionally be made current
 in order for the results of the copy to be seen; these
 requirements are beyond the scope of this specification.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>source</code> - the source OpenGL context from which to copy state</dd>
<dd><code>mask</code> - a mask of symbolic names indicating which groups of state to copy</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if an OpenGL-related error occurred</dd>
</dl>
</li>
</ul>
<a id="getCurrentGL()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCurrentGL</h4>
<pre class="methodSignature">public static&nbsp;<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;getCurrentGL()
                       throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Returns the GL object bound to this thread current context.
 If no context is current, throw an GLException</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the current context's GL object on this thread</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if no context is current</dd>
</dl>
</li>
</ul>
<a id="getCurrent()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCurrent</h4>
<pre class="methodSignature">public static&nbsp;<a href="GLContext.html" title="class in com.jogamp.opengl">GLContext</a>&nbsp;getCurrent()</pre>
<div class="block">Returns this thread current context.
 If no context is current, returns null.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the context current on this thread, or null if no context
 is current.</dd>
</dl>
</li>
</ul>
<a id="isCurrent()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isCurrent</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isCurrent()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if this GLContext is current on this thread</dd>
</dl>
</li>
</ul>
<a id="validateCurrent()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>validateCurrent</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;validateCurrent()
                           throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if this GLContext is not current on this thread</dd>
</dl>
</li>
</ul>
<a id="makeCurrentResultToString(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeCurrentResultToString</h4>
<pre class="methodSignature">public static final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;makeCurrentResultToString&#8203;(int&nbsp;res)</pre>
<div class="block">Returns a String representation of the <a href="#makeCurrent()"><code>makeCurrent()</code></a> result.</div>
</li>
</ul>
<a id="destroy()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>destroy</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;destroy()</pre>
<div class="block">Destroys this OpenGL context and frees its associated
 resources.
 <p>
 The context may be current w/o recursion when calling <code>destroy()</code>,
 in which case this method destroys the context and releases the lock.
 </p></div>
</li>
</ul>
<a id="getRootGL()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRootGL</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;getRootGL()</pre>
<div class="block">Returns the implementing root GL instance of this GLContext's GL object,
 considering a wrapped pipelined hierarchy, see <a href="GLBase.html#getDownstreamGL()"><code>GLBase.getDownstreamGL()</code></a>.</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if the root instance is not a GL implementation</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLBase.html#getRootGL()"><code>GLBase.getRootGL()</code></a>, 
<a href="GLBase.html#getDownstreamGL()"><code>GLBase.getDownstreamGL()</code></a>, 
<a href="#getGL()"><code>getGL()</code></a>, 
<a href="#setGL(com.jogamp.opengl.GL)"><code>setGL(GL)</code></a></dd>
</dl>
</li>
</ul>
<a id="getGL()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGL</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;getGL()</pre>
<div class="block">Returns the GL pipeline object for this GLContext.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the aggregated GL instance, or null if this context was not yet made current.</dd>
</dl>
</li>
</ul>
<a id="setGL(com.jogamp.opengl.GL)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setGL</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;setGL&#8203;(<a href="GL.html" title="interface in com.jogamp.opengl">GL</a>&nbsp;gl)</pre>
<div class="block">Sets the GL pipeline object for this GLContext.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the set GL pipeline or null if not successful</dd>
</dl>
</li>
</ul>
<a id="getHandle()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getHandle</h4>
<pre class="methodSignature">public final&nbsp;long&nbsp;getHandle()</pre>
<div class="block">Returns the underlying native OpenGL context handle</div>
</li>
</ul>
<a id="isCreated()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isCreated</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isCreated()</pre>
<div class="block">Indicates whether the underlying native OpenGL context has been created.</div>
</li>
</ul>
<a id="getAttachedObject(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAttachedObject</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;getAttachedObject&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;name)</pre>
<div class="block">Returns the attached user object for the given name to this GLContext.</div>
</li>
</ul>
<a id="attachObject(java.lang.String,java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>attachObject</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;attachObject&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;name,
                                 <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;obj)</pre>
<div class="block">Sets the attached user object for the given name to this GLContext.
 Returns the previously set object or null.</div>
</li>
</ul>
<a id="detachObject(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>detachObject</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a>&nbsp;detachObject&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;name)</pre>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<div class="block">Classname, GL, GLDrawable</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
<a id="append(java.lang.StringBuilder)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>append</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;append&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html?is-external=true" title="class or interface in java.lang" class="externalLink">StringBuilder</a>&nbsp;sb)</pre>
</li>
</ul>
<a id="isFunctionAvailable(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isFunctionAvailable</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;isFunctionAvailable&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;glFunctionName)</pre>
<div class="block">Returns true if the specified OpenGL core- or extension-function can be
 successfully called using this GL context given the current host (OpenGL
 <i>client</i>) and display (OpenGL <i>server</i>) configuration.

 See <a href="GLBase.html#isFunctionAvailable(java.lang.String)"><code>GLBase.isFunctionAvailable(String)</code></a> for more details.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>glFunctionName</code> - the name of the OpenGL function (e.g., use
 "glPolygonOffsetEXT" or "glPolygonOffset" to check if the <a href="GL.html#glPolygonOffset(float,float)"><code>GL.glPolygonOffset(float,float)</code></a> is available).</dd>
</dl>
</li>
</ul>
<a id="isExtensionAvailable(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isExtensionAvailable</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;isExtensionAvailable&#8203;(<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;glExtensionName)</pre>
<div class="block">Returns true if the specified OpenGL extension can be
 successfully called using this GL context given the current host (OpenGL
 <i>client</i>) and display (OpenGL <i>server</i>) configuration.

 See <a href="GLBase.html#isExtensionAvailable(java.lang.String)"><code>GLBase.isExtensionAvailable(String)</code></a> for more details.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>glExtensionName</code> - the name of the OpenGL extension (e.g.,
 "GL_VERTEX_PROGRAM_ARB").</dd>
</dl>
</li>
</ul>
<a id="getPlatformExtensionCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlatformExtensionCount</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getPlatformExtensionCount()</pre>
<div class="block">Returns the number of platform extensions</div>
</li>
</ul>
<a id="getPlatformExtensionsString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlatformExtensionsString</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getPlatformExtensionsString()</pre>
<div class="block">Returns a non-null (but possibly empty) string containing the
      space-separated list of available platform-dependent (e.g., WGL,
      GLX) extensions. Can only be called while this context is
      current.</div>
</li>
</ul>
<a id="getGLExtensionCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLExtensionCount</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getGLExtensionCount()</pre>
<div class="block">Returns the number of OpenGL extensions</div>
</li>
</ul>
<a id="getGLExtensionsString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLExtensionsString</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getGLExtensionsString()</pre>
<div class="block">Returns a non-null (but possibly empty) string containing the
      space-separated list of available extensions.
      Can only be called while this context is current.
      This is equivalent to
      <a href="GL.html#glGetString(int)"><code>glGetString</code></a>(<a href="GL.html#GL_EXTENSIONS"><code>GL_EXTENSIONS</code></a>)</div>
</li>
</ul>
<a id="getContextCreationFlags()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getContextCreationFlags</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getContextCreationFlags()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Additional context creation flags, supported: <a href="#CTX_OPTION_DEBUG"><code>CTX_OPTION_DEBUG</code></a>.</dd>
</dl>
</li>
</ul>
<a id="setContextCreationFlags(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setContextCreationFlags</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;setContextCreationFlags&#8203;(int&nbsp;flags)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>flags</code> - Additional context creation flags, supported: <a href="#CTX_OPTION_DEBUG"><code>CTX_OPTION_DEBUG</code></a>.
              Unsupported flags are masked out.
              Only affects this context state if not created yet via <a href="#makeCurrent()"><code>makeCurrent()</code></a>.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#enableGLDebugMessage(boolean)"><code>enableGLDebugMessage(boolean)</code></a>, 
<a href="GLAutoDrawable.html#setContextCreationFlags(int)"><code>GLAutoDrawable.setContextCreationFlags(int)</code></a></dd>
</dl>
</li>
</ul>
<a id="getGLVersion()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLVersion</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getGLVersion()</pre>
<div class="block">Returns a valid OpenGL version string, ie<br>
 <pre>
     major.minor ([option]?[options,]*) - gl-version
 </pre><br>

 <ul>
   <li> options
   <ul>
     <li> <code>ES profile</code> ES profile</li>
     <li> <code>Compatibility profile</code> Compatibility profile including fixed function pipeline and deprecated functionality</li>
     <li> <code>Core profile</code> Core profile</li>
     <li> <code>forward</code> Forward profile excluding deprecated functionality</li>
     <li> <code>arb</code> refers to an ARB_create_context created context</li>
     <li> <code>debug</code> refers to a debug context</li>
     <li> <code>ES2 compatible</code> refers to an ES2 compatible implementation</li>
     <li> <code>software</code> refers to a software implementation of the rasterizer</li>
     <li> <code>hardware</code> refers to a hardware implementation of the rasterizer</li>
   </ul></li>
   <li> <i>gl-version</i> the GL_VERSION string</li>
 </ul>

 e.g.:
 <table border="0">
 <tr> <td></td> <td></td> </tr>
 <tr>
 <td>row 2, cell 1</td>
 <td>row 2, cell 2</td>
 </tr>
 </table>

 <table border="0">
     <tr><td></td>   <td>ES2</td>  <td><code>2.0 (ES profile, ES2 compatible, hardware) - 2.0 ES Profile</code></td></tr>
     <tr><td>ATI</td><td>GL2</td>  <td><code>3.0 (Compatibility profile, arb, hardware) - 3.2.9704 Compatibility Profile Context</code></td></tr>
     <tr><td>ATI</td><td>GL3</td>  <td><code>3.3 (Core profile, any, new, hardware) - 1.4 (3.2.9704 Compatibility Profile Context)</code></td></tr>
     <tr><td>ATI</td><td>GL3bc</td><td><code>3.3 (Compatibility profile, arb, hardware) - 1.4 (3.2.9704 Compatibility Profile Context)</code></td></tr>
     <tr><td>NV</td><td>GL2</td>   <td><code>3.0 (Compatibility profile, arb, hardware) - 3.0.0 NVIDIA 195.36.07.03</code></td></tr>
     <tr><td>NV</td><td>GL3</td>   <td><code>3.3 (Core profile, arb, hardware) - 3.3.0 NVIDIA 195.36.07.03</code></td></tr>
     <tr><td>NV</td><td>GL3bc</td> <td><code>3.3 (Compatibility profile, arb, hardware) - 3.3.0 NVIDIA 195.36.07.03</code></td></tr>
     <tr><td>NV</td><td>GL2</td>   <td><code>3.0 (Compatibility profile, arb, ES2 compatible, hardware) - 3.0.0 NVIDIA 290.10</code></td></tr>
 </table></div>
</li>
</ul>
<a id="getGLVersionNumber()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLVersionNumber</h4>
<pre class="methodSignature">public final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a>&nbsp;getGLVersionNumber()</pre>
<div class="block">Returns this context OpenGL version.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getGLSLVersionNumber()"><code>getGLSLVersionNumber()</code></a></dd>
</dl>
</li>
</ul>
<a id="getGLVendorVersionNumber()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLVendorVersionNumber</h4>
<pre class="methodSignature">public final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumberString.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumberString</a>&nbsp;getGLVendorVersionNumber()</pre>
<div class="block">Returns the vendor's version, i.e. version number at the end of <code>GL_VERSION</code> not being the GL version.
 <p>
 In case no such version exists within <code>GL_VERSION</code>,
 the <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumberString.html?is-external=true#zeroVersion" title="class or interface in com.jogamp.common.util" class="externalLink"><code>zero version</code></a> instance is returned.
 </p>
 <p>
 The vendor's version is usually the vendor's OpenGL driver version.
 </p></div>
</li>
</ul>
<a id="isGLCompatibilityProfile()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLCompatibilityProfile</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLCompatibilityProfile()</pre>
</li>
</ul>
<a id="isGLCoreProfile()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLCoreProfile</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLCoreProfile()</pre>
</li>
</ul>
<a id="isGLESProfile()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLESProfile</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLESProfile()</pre>
</li>
</ul>
<a id="isGLForwardCompatible()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLForwardCompatible</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLForwardCompatible()</pre>
</li>
</ul>
<a id="isGLDebugEnabled()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLDebugEnabled</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLDebugEnabled()</pre>
</li>
</ul>
<a id="isCreatedWithARBMethod()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isCreatedWithARBMethod</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isCreatedWithARBMethod()</pre>
</li>
</ul>
<a id="getGLSLVersionNumber()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLSLVersionNumber</h4>
<pre class="methodSignature">public final&nbsp;<a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumber.html?is-external=true" title="class or interface in com.jogamp.common.util" class="externalLink">VersionNumber</a>&nbsp;getGLSLVersionNumber()</pre>
<div class="block">Returns the matching GLSL version number, queried by this context GL
 via <a href="GL2ES2.html#GL_SHADING_LANGUAGE_VERSION"><code>GL2ES2.GL_SHADING_LANGUAGE_VERSION</code></a> if &ge; ES2.0 or GL2.0,
 otherwise a static match is being utilized.
 <p>
 The context must have been current once,
 otherwise the <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumberString.html?is-external=true#zeroVersion" title="class or interface in com.jogamp.common.util" class="externalLink"><code>zero version</code></a> instance is returned.
 </p>
 <p>
 Examples w/ <code>major.minor</code>:
 <pre>
    1.00 (ES 2.0), 3.00 (ES 3.0)
    1.10 (GL 2.0), 1.20 (GL 2.1), 1.50 (GL 3.2),
    3.30 (GL 3.3), 4.00 (GL 4.0), 4.10 (GL 4.1), 4.20 (GL 4.2)
 </pre>
 </p>
 <p>
 <i>Matching</i> could also refer to the maximum GLSL version usable by this context
 since <i>normal</i> GL implementations are capable of using a lower GLSL version as well.
 The latter is not true on OSX w/ a GL3 context.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>GLSL version number if context has been made current at least once,
         otherwise the <a href="../../../../../gluegen/javadoc/com/jogamp/common/util/VersionNumberString.html?is-external=true#zeroVersion" title="class or interface in com.jogamp.common.util" class="externalLink"><code>zero version</code></a> instance is returned.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getGLVersionNumber()"><code>getGLVersionNumber()</code></a></dd>
</dl>
</li>
</ul>
<a id="getGLSLVersionString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLSLVersionString</h4>
<pre class="methodSignature">public final&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getGLSLVersionString()</pre>
<div class="block">Returns the GLSL version string as to be used in a shader program, including a terminating newline '\n',
 i.e. for desktop
 <pre>
    #version 110
    ..
    #version 150 core
    #version 330 compatibility
    ...
 </pre>
 And for ES:
 <pre>
    #version 100
    #version 300 es
    ..
 </pre>
 <p>
 If context has not been made current yet, a string of zero length is returned.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getGLSLVersionNumber()"><code>getGLSLVersionNumber()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGLES2Compatible()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES2Compatible</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLES2Compatible()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if this context is an ES2 context or implements
         the extension <code>GL_ARB_ES3_compatibility</code> or <code>GL_ARB_ES2_compatibility</code>, otherwise false</dd>
</dl>
</li>
</ul>
<a id="isGLES3Compatible()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES3Compatible</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLES3Compatible()</pre>
<div class="block">Return true if this context is an ES3 context or implements
 the extension <code>GL_ARB_ES3_compatibility</code>, otherwise false.
 <p>
 Includes [ GL &ge; 4.3, GL &ge; 3.1 w/ GL_ARB_ES3_compatibility and GLES3 ]
 </p></div>
</li>
</ul>
<a id="isGLES31Compatible()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES31Compatible</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLES31Compatible()</pre>
<div class="block">Return true if this context is an ES3 context &ge; 3.1 or implements
 the extension <code>GL_ARB_ES3_1_compatibility</code>, otherwise false.
 <p>
 Includes [ GL &ge; 4.5, GL &ge; 3.1 w/ GL_ARB_ES3_1_compatibility and GLES3 &ge; 3.1 ]
 </p></div>
</li>
</ul>
<a id="isGLES32Compatible()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES32Compatible</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLES32Compatible()</pre>
<div class="block">Return true if this context is an ES3 context &ge; 3.2 or implements
 the extension <code>GL_ARB_ES3_2_compatibility</code>, otherwise false.
 <p>
 Includes [ GL &ge; 4.5, GL &ge; 3.1 w/ GL_ARB_ES3_2_compatibility and GLES3 &ge; 3.2 ]
 </p></div>
</li>
</ul>
<a id="isHardwareRasterizer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isHardwareRasterizer</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isHardwareRasterizer()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if impl. is a hardware rasterizer, otherwise false.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isHardwareRasterizer(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)"><code>isHardwareRasterizer(AbstractGraphicsDevice, GLProfile)</code></a>, 
<a href="GLProfile.html#isHardwareRasterizer()"><code>GLProfile.isHardwareRasterizer()</code></a></dd>
</dl>
</li>
</ul>
<a id="hasGLSL()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasGLSL</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;hasGLSL()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if context supports GLSL, i.e. is either <a href="#isGLES3()"><code>isGLES3()</code></a>, <a href="#isGLES2()"><code>isGLES2()</code></a>, <a href="#isGL3()"><code>isGL3()</code></a> or <a href="#isGL2()"><code>isGL2()</code></a> <i>and</i> major-version > 1.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#hasGLSL()"><code>GLProfile.hasGLSL()</code></a></dd>
</dl>
</li>
</ul>
<a id="hasBasicFBOSupport()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasBasicFBOSupport</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;hasBasicFBOSupport()</pre>
<div class="block">Returns <code>true</code> if basic FBO support is available, otherwise <code>false</code>.
 <p>
 Basic FBO is supported if the context is either GL-ES >= 2.0, GL >= 3.0 [core, compat] or implements the extensions
 <code>GL_ARB_ES2_compatibility</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_EXT_framebuffer_object</code> or <code>GL_OES_framebuffer_object</code>.
 </p>
 <p>
 Basic FBO support may only include one color attachment and no multisampling,
 as well as limited internal formats for renderbuffer.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#CTX_IMPL_FBO"><code>CTX_IMPL_FBO</code></a></dd>
</dl>
</li>
</ul>
<a id="hasFullFBOSupport()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasFullFBOSupport</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;hasFullFBOSupport()</pre>
<div class="block">Returns <code>true</code> if full FBO support is available, otherwise <code>false</code>.
 <p>
 Full FBO is supported if the context is either GL >= 3.0 [ES, core, compat] or implements the extensions
 <code>ARB_framebuffer_object</code>, or all of
 <code>EXT_framebuffer_object</code>, <code>EXT_framebuffer_multisample</code>,
 <code>EXT_framebuffer_blit</code>, <code>GL_EXT_packed_depth_stencil</code>.
 </p>
 <p>
 Full FBO support includes multiple color attachments and multisampling.
 </p></div>
</li>
</ul>
<a id="hasFP32CompatAPI()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasFP32CompatAPI</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;hasFP32CompatAPI()</pre>
<div class="block">Returns <code>true</code> if <code>OES_single_precision</code>, fp32, fixed function point (FFP) compatibility entry points available,
 otherwise <code>false</code>.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#CTX_IMPL_FP32_COMPAT_API"><code>CTX_IMPL_FP32_COMPAT_API</code></a></dd>
</dl>
</li>
</ul>
<a id="getMaxRenderbufferSamples()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMaxRenderbufferSamples</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;getMaxRenderbufferSamples()</pre>
<div class="block">Returns the maximum number of FBO RENDERBUFFER samples
 if <a href="#hasFullFBOSupport()"><code>full FBO is supported</code></a>, otherwise false.</div>
</li>
</ul>
<a id="isNPOTTextureAvailable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isNPOTTextureAvailable</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;isNPOTTextureAvailable()</pre>
<div class="block">Note: The GL impl. may return a const value, ie <a href="GLBase.html#isNPOTTextureAvailable()"><code>GLBase.isNPOTTextureAvailable()</code></a> always returns <code>true</code>.</div>
</li>
</ul>
<a id="isTextureFormatBGRA8888Available()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isTextureFormatBGRA8888Available</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;isTextureFormatBGRA8888Available()</pre>
</li>
</ul>
<a id="isGL4bc()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL4bc</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL4bc()</pre>
<div class="block">Indicates whether this GLContext is capable of GL4bc.  <p>Includes [ GL4bc ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL4bc()"><code>GLProfile.isGL4bc()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL4()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL4</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL4()</pre>
<div class="block">Indicates whether this GLContext is capable of GL4.    <p>Includes [ GL4bc, GL4 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL4()"><code>GLProfile.isGL4()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL4core()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL4core</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL4core()</pre>
<div class="block">Indicates whether this GLContext uses a GL4 core profile. <p>Includes [ GL4 ].</p></div>
</li>
</ul>
<a id="isGL3bc()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL3bc</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL3bc()</pre>
<div class="block">Indicates whether this GLContext is capable of GL3bc.  <p>Includes [ GL4bc, GL3bc ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL3bc()"><code>GLProfile.isGL3bc()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL3()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL3</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL3()</pre>
<div class="block">Indicates whether this GLContext is capable of GL3.    <p>Includes [ GL4bc, GL4, GL3bc, GL3 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL3()"><code>GLProfile.isGL3()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL3core()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL3core</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL3core()</pre>
<div class="block">Indicates whether this GLContext uses a GL3 core profile. <p>Includes [ GL4, GL3 ].</p></div>
</li>
</ul>
<a id="isGLcore()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLcore</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLcore()</pre>
<div class="block">Indicates whether this GLContext uses a GL core profile. <p>Includes [ GL4, GL3, GLES3, GLES2 ].</p></div>
</li>
</ul>
<a id="isCPUDataSourcingAvail()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isCPUDataSourcingAvail</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isCPUDataSourcingAvail()</pre>
<div class="block">Indicates whether this GLContext allows CPU data sourcing (indices, vertices ..) as opposed to using a GPU buffer source (VBO),
 e.g. <a href="GL2ES1.html#glDrawElements(int,int,int,java.nio.Buffer)"><code>GL2ES1.glDrawElements(int, int, int, java.nio.Buffer)</code></a>.
 <p>Includes [GL2ES1, GLES2] == [ GL4bc, GL3bc, GL2, GLES1, GL2ES1, GLES2 ].</p>
 <p>See Bug 852 - https://jogamp.org/bugzilla/show_bug.cgi?id=852 </p></div>
</li>
</ul>
<a id="hasNoDefaultVAO()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasNoDefaultVAO</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;hasNoDefaultVAO()</pre>
<div class="block">Indicates whether this GLContext's native profile does not implement a <i>default vertex array object</i> (VAO),
 starting w/ OpenGL 3.1 core.
 <p>Includes [ GL4, GL3 ].</p>
 <pre>
     Due to GL 3.1 core spec: E.1. DEPRECATED AND REMOVED FEATURES (p 296),
            GL 3.2 core spec: E.2. DEPRECATED AND REMOVED FEATURES (p 331)
     there is no more default VAO buffer 0 bound, hence generating and binding one
     to avoid INVALID_OPERATION at VertexAttribPointer.
     More clear is GL 4.3 core spec: 10.4 (p 307).
 </pre>
 <pre>
     ES 3.x is <i>not</i> included here.
     Due to it's ES 2.0 backward compatibility it still supports the following features:
            <i>client side vertex arrays</i>
            <i>default vertex array object</i>

     Binding a custom VAO with ES 3.0 would cause <i>client side vertex arrays</i> via <a href="fixedfunc/GLPointerFunc.html#glVertexPointer(int,int,int,java.nio.Buffer)"><code>glVertexPointer</code></a>
     to produce <code>GL_INVALID_OPERATION</code>.

     However, they are marked <i>deprecated</i>:
            GL ES 3.0 spec F.1. Legacy Features (p 322).
            GL ES 3.1 spec F.1. Legacy Features (p 454).
 </pre>
 <p>
 If no default VAO is implemented in the native OpenGL profile,
 an own default VAO is being used, see <a href="#getDefaultVAO()"><code>getDefaultVAO()</code></a>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getDefaultVAO()"><code>getDefaultVAO()</code></a></dd>
</dl>
</li>
</ul>
<a id="getDefaultVAO()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultVAO</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getDefaultVAO()</pre>
<div class="block">If this GLContext does not implement a default VAO, see <a href="#hasNoDefaultVAO()"><code>hasNoDefaultVAO()</code></a>,
 an <i>own default VAO</i> will be created and bound at context creation.
 <p>
 If this GLContext does implement a default VAO, i.e. <a href="#hasNoDefaultVAO()"><code>hasNoDefaultVAO()</code></a>
 returns <code>false</code>, this method returns <code>0</code>.
 </p>
 <p>
 Otherwise this method returns the VAO object name
 representing this GLContext's <i>own default VAO</i>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#hasNoDefaultVAO()"><code>hasNoDefaultVAO()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL2()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL2</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL2()</pre>
<div class="block">Indicates whether this GLContext is capable of GL2.    <p>Includes [ GL4bc, GL3bc, GL2  ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL2()"><code>GLProfile.isGL2()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL2GL3()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL2GL3</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL2GL3()</pre>
<div class="block">Indicates whether this GLContext is capable of GL2GL3. <p>Includes [ GL4bc, GL4, GL3bc, GL3, GL2, GL2GL3 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL2GL3()"><code>GLProfile.isGL2GL3()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGLES1()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES1</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLES1()</pre>
<div class="block">Indicates whether this GLContext is capable of GLES1.  <p>Includes [ GLES1 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGLES1()"><code>GLProfile.isGLES1()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGLES2()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES2</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLES2()</pre>
<div class="block">Indicates whether this GLContext is capable of GLES2.  <p>Includes [ GLES2, GLES3 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGLES2()"><code>GLProfile.isGLES2()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGLES3()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES3</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLES3()</pre>
<div class="block">Indicates whether this GLContext is capable of GLES3.  <p>Includes [ GLES3 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGLES3()"><code>GLProfile.isGLES3()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGLES()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGLES()</pre>
<div class="block">Indicates whether this GLContext is capable of GLES.  <p>Includes [ GLES3, GLES1, GLES2 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGLES()"><code>GLProfile.isGLES()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL2ES1()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL2ES1</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL2ES1()</pre>
<div class="block">Indicates whether this GLContext is capable of GL2ES1. <p>Includes [ GL4bc, GL3bc, GL2, GLES1, GL2ES1 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL2ES1()"><code>GLProfile.isGL2ES1()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL2ES2()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL2ES2</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL2ES2()</pre>
<div class="block">Indicates whether this GLContext is capable of GL2ES2. <p>Includes [ GL4bc, GL4, GL3bc, GL3, GLES3, GL2, GL2GL3, GL2ES2, GLES2 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL2ES2()"><code>GLProfile.isGL2ES2()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL2ES3()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL2ES3</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL2ES3()</pre>
<div class="block">Indicates whether this GLContext is capable of GL2ES3. <p>Includes [ GL4bc, GL4, GL3bc, GL3, GLES3, GL3ES3, GL2, GL2GL3 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL2ES3()"><code>GLProfile.isGL2ES3()</code></a>, 
<a href="#isGL3ES3()"><code>isGL3ES3()</code></a>, 
<a href="#isGL2GL3()"><code>isGL2GL3()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL3ES3()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL3ES3</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL3ES3()</pre>
<div class="block">Indicates whether this GLContext is capable of GL3ES3. <p>Includes [ GL4bc, GL4, GL3bc, GL3, GLES3 ].</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL3ES3()"><code>GLProfile.isGL3ES3()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGL4ES3()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL4ES3</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;isGL4ES3()</pre>
<div class="block">Returns true if this profile is capable of GL4ES3, i.e. if <a href="#isGLES3Compatible()"><code>isGLES3Compatible()</code></a> returns true.
 <p>Includes [ GL &ge; 4.3, GL &ge; 3.1 w/ GL_ARB_ES3_compatibility and GLES3 ]</p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="GLProfile.html#isGL4ES3()"><code>GLProfile.isGL4ES3()</code></a></dd>
</dl>
</li>
</ul>
<a id="setSwapInterval(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSwapInterval</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;setSwapInterval&#8203;(int&nbsp;interval)
                        throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Set the swap interval of the current context and attached <i>onscreen <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a></i>.
 <p>
 <i>offscreen <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a></i> are ignored and <code>false</code> is returned.
 </p>
 <p>
 The <code>interval</code> semantics:
 <ul>
   <li><i>0</i> disables the vertical synchronization</li>
   <li><i>&ge;1</i> is the number of vertical refreshes before a swap buffer occurs</li>
   <li><i>&lt;0</i> enables <i>late swaps to occur without synchronization to the video frame</i>, a.k.a <i>EXT_swap_control_tear</i>.
              If supported, the absolute value is the minimum number of
              video frames between buffer swaps. If not supported, the absolute value is being used, see above.
   </li>
 </ul>
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>interval</code> - see above</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the operation was successful, otherwise false</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if the context is not current.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getSwapInterval()"><code>getSwapInterval()</code></a></dd>
</dl>
</li>
</ul>
<a id="getSwapInterval()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSwapInterval</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getSwapInterval()</pre>
<div class="block">Return the current swap interval.
 <p>
 If the context has not been made current at all,
 the default value <code>0</code> is returned.
 </p>
 <p>
 For a valid context w/ an <o>onscreen <a href="GLDrawable.html" title="interface in com.jogamp.opengl"><code>GLDrawable</code></a></i> the default value is <code>1</code>,
 otherwise the default value is <code>0</code>.
 </p></div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setSwapInterval(int)"><code>setSwapInterval(int)</code></a></dd>
</dl>
</li>
</ul>
<a id="queryMaxSwapGroups(int[],int,int[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>queryMaxSwapGroups</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;queryMaxSwapGroups&#8203;(int[]&nbsp;maxGroups,
                                        int&nbsp;maxGroups_offset,
                                        int[]&nbsp;maxBarriers,
                                        int&nbsp;maxBarriers_offset)</pre>
</li>
</ul>
<a id="joinSwapGroup(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>joinSwapGroup</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;joinSwapGroup&#8203;(int&nbsp;group)</pre>
</li>
</ul>
<a id="getSwapGroup()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSwapGroup</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getSwapGroup()</pre>
</li>
</ul>
<a id="bindSwapBarrier(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>bindSwapBarrier</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;bindSwapBarrier&#8203;(int&nbsp;group,
                                     int&nbsp;barrier)</pre>
</li>
</ul>
<a id="getBoundFramebuffer(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBoundFramebuffer</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getBoundFramebuffer&#8203;(int&nbsp;target)</pre>
<div class="block">Return the framebuffer name bound to this context,
 see <a href="GL.html#glBindFramebuffer(int,int)"><code>GL.glBindFramebuffer(int, int)</code></a>.
 <p>
 Method is only thread-safe while context is <a href="#makeCurrent()"><code>made current</code></a>.
 </p></div>
</li>
</ul>
<a id="getDefaultDrawFramebuffer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultDrawFramebuffer</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getDefaultDrawFramebuffer()</pre>
<div class="block">Return the default draw framebuffer name.
 <p>
 May differ from it's default <code>zero</code>
 in case an framebuffer object (<a href="FBObject.html" title="class in com.jogamp.opengl"><code>FBObject</code></a>) based drawable
 is being used.
 </p>
 <p>
 Method is only thread-safe while context is <a href="#makeCurrent()"><code>made current</code></a>.
 </p></div>
</li>
</ul>
<a id="getDefaultReadFramebuffer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultReadFramebuffer</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getDefaultReadFramebuffer()</pre>
<div class="block">Return the default read framebuffer name.
 <p>
 May differ from it's default <code>zero</code>
 in case an framebuffer object (<a href="FBObject.html" title="class in com.jogamp.opengl"><code>FBObject</code></a>) based drawable
 is being used.
 </p>
 <p>
 Method is only thread-safe while context is <a href="#makeCurrent()"><code>made current</code></a>.
 </p></div>
</li>
</ul>
<a id="getDefaultReadBuffer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultReadBuffer</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getDefaultReadBuffer()</pre>
<div class="block">Returns the default color buffer within the current bound
 <a href="#getDefaultReadFramebuffer()"><code>getDefaultReadFramebuffer()</code></a>, i.e. GL_READ_FRAMEBUFFER​,
 which will be used as the source for pixel reading commands,
 like <a href="GL.html#glReadPixels(int,int,int,int,int,int,java.nio.Buffer)"><code>glReadPixels</code></a> etc.
 <p>
 For offscreen framebuffer objects this is <a href="GL.html#GL_COLOR_ATTACHMENT0"><code>GL.GL_COLOR_ATTACHMENT0</code></a>,
 otherwise this is <a href="GL.html#GL_FRONT"><code>GL.GL_FRONT</code></a> for single buffer configurations
 and <a href="GL.html#GL_BACK"><code>GL.GL_BACK</code></a> for double buffer configurations.
 </p>
 <p>
 Note-1: Neither ES1 nor ES2 supports selecting the read buffer via glReadBuffer
 and <a href="GL.html#GL_BACK"><code>GL.GL_BACK</code></a> is the default.
 </p>
 <p>
 Note-2: ES3 only supports <a href="GL.html#GL_BACK"><code>GL.GL_BACK</code></a>, <a href="GL.html#GL_NONE"><code>GL.GL_NONE</code></a> or <a href="GL.html#GL_COLOR_ATTACHMENT0"><code>GL.GL_COLOR_ATTACHMENT0</code></a>+i
 </p>
 <p>
 Note-3: See <a href="util/GLDrawableUtil.html#swapBuffersBeforeRead(com.jogamp.opengl.GLCapabilitiesImmutable)"><code>swapBuffersBeforeRead</code></a>
 for read-pixels and swap-buffers implications.
 </p>
 <p>
 Method is only thread-safe while context is <a href="#makeCurrent()"><code>made current</code></a>.
 </p></div>
</li>
</ul>
<a id="getDefaultPixelDataType()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultPixelDataType</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getDefaultPixelDataType()</pre>
<div class="block">Get the default pixel data type, as required by e.g. <a href="GL.html#glReadPixels(int,int,int,int,int,int,java.nio.Buffer)"><code>GL.glReadPixels(int, int, int, int, int, int, java.nio.Buffer)</code></a>.
 <p>
 Method is only thread-safe while context is <a href="#makeCurrent()"><code>made current</code></a>.
 </p></div>
</li>
</ul>
<a id="getDefaultPixelDataFormat()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDefaultPixelDataFormat</h4>
<pre class="methodSignature">public abstract&nbsp;int&nbsp;getDefaultPixelDataFormat()</pre>
<div class="block">Get the default pixel data format, as required by e.g. <a href="GL.html#glReadPixels(int,int,int,int,int,int,java.nio.Buffer)"><code>GL.glReadPixels(int, int, int, int, int, int, java.nio.Buffer)</code></a>.
 <p>
 Method is only thread-safe while context is <a href="#makeCurrent()"><code>made current</code></a>.
 </p></div>
</li>
</ul>
<a id="getGLDebugMessageExtension()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGLDebugMessageExtension</h4>
<pre class="methodSignature">public abstract&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;getGLDebugMessageExtension()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The extension implementing the GLDebugOutput feature,
         either <a href="GLExtensions.html#ARB_debug_output"><code>GLExtensions.ARB_debug_output</code></a> or <a href="GLExtensions.html#AMD_debug_output"><code>GLExtensions.AMD_debug_output</code></a>.
         If unavailable or called before initialized via <a href="#makeCurrent()"><code>makeCurrent()</code></a>, <i>null</i> is returned.</dd>
</dl>
</li>
</ul>
<a id="isGLDebugSynchronous()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLDebugSynchronous</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;isGLDebugSynchronous()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the current synchronous debug behavior, set via <a href="#setGLDebugSynchronous(boolean)"><code>setGLDebugSynchronous(boolean)</code></a>.</dd>
</dl>
</li>
</ul>
<a id="setGLDebugSynchronous(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setGLDebugSynchronous</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;setGLDebugSynchronous&#8203;(boolean&nbsp;synchronous)</pre>
<div class="block">Enables or disables the synchronous debug behavior via
 <a href="GL2ES2.html#GL_DEBUG_OUTPUT_SYNCHRONOUS"><code>glEnable/glDisable(GL_DEBUG_OUTPUT_SYNCHRONOUS)</code></a>,
 if extension is <a href="GLExtensions.html#ARB_debug_output"><code>GLExtensions.ARB_debug_output</code></a>.
 There is no equivalent for <a href="GLExtensions.html#AMD_debug_output"><code>GLExtensions.AMD_debug_output</code></a>.
 <p> The default is <code>true</code>, ie <a href="GL2ES2.html#GL_DEBUG_OUTPUT_SYNCHRONOUS"><code>GL2ES2.GL_DEBUG_OUTPUT_SYNCHRONOUS</code></a>.</p></div>
</li>
</ul>
<a id="isGLDebugMessageEnabled()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLDebugMessageEnabled</h4>
<pre class="methodSignature">public abstract&nbsp;boolean&nbsp;isGLDebugMessageEnabled()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the GLDebugOutput feature is enabled or not.</dd>
</dl>
</li>
</ul>
<a id="enableGLDebugMessage(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>enableGLDebugMessage</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;enableGLDebugMessage&#8203;(boolean&nbsp;enable)
                                   throws <a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></pre>
<div class="block">Enables or disables the GLDebugOutput feature of extension <a href="GLExtensions.html#ARB_debug_output"><code>GLExtensions.ARB_debug_output</code></a>
 or <a href="GLExtensions.html#AMD_debug_output"><code>GLExtensions.AMD_debug_output</code></a>, if available.

 <p>To enable the GLDebugOutput feature <a href="#enableGLDebugMessage(boolean)"><code>enableGLDebugMessage(true)</code></a>
 or <a href="#setContextCreationFlags(int)"><code>setContextCreationFlags</code></a>(<a href="#CTX_OPTION_DEBUG"><code>CTX_OPTION_DEBUG</code></a>)
 shall be called <b>before</b> context creation via <a href="#makeCurrent()"><code>makeCurrent()</code></a>!</p>

 <p>In case <a href="GLAutoDrawable.html" title="interface in com.jogamp.opengl"><code>GLAutoDrawable</code></a> are being used,
 <a href="GLAutoDrawable.html#setContextCreationFlags(int)"><code>glAutoDrawable.setContextCreationFlags</code></a>(<a href="#CTX_OPTION_DEBUG"><code>CTX_OPTION_DEBUG</code></a>)
 shall be issued before context creation via <a href="#makeCurrent()"><code>makeCurrent()</code></a>!</p>

 <p>After context creation, the GLDebugOutput feature may be enabled or disabled at any time using this method.</p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>enable</code> - If true enables, otherwise disables the GLDebugOutput feature.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="GLException.html" title="class in com.jogamp.opengl">GLException</a></code> - if this context is not current or GLDebugOutput registration failed (enable)</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#setContextCreationFlags(int)"><code>setContextCreationFlags(int)</code></a>, 
<a href="#addGLDebugListener(com.jogamp.opengl.GLDebugListener)"><code>addGLDebugListener(GLDebugListener)</code></a>, 
<a href="GLAutoDrawable.html#setContextCreationFlags(int)"><code>GLAutoDrawable.setContextCreationFlags(int)</code></a></dd>
</dl>
</li>
</ul>
<a id="addGLDebugListener(com.jogamp.opengl.GLDebugListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addGLDebugListener</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;addGLDebugListener&#8203;(<a href="GLDebugListener.html" title="interface in com.jogamp.opengl">GLDebugListener</a>&nbsp;listener)</pre>
<div class="block">Add <a href="GLDebugListener.html" title="interface in com.jogamp.opengl"><code>GLDebugListener</code></a>.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>listener</code> - <a href="GLDebugListener.html" title="interface in com.jogamp.opengl"><code>GLDebugListener</code></a> handling <a href="GLDebugMessage.html" title="class in com.jogamp.opengl"><code>GLDebugMessage</code></a>s</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#enableGLDebugMessage(boolean)"><code>enableGLDebugMessage(boolean)</code></a>, 
<a href="#removeGLDebugListener(com.jogamp.opengl.GLDebugListener)"><code>removeGLDebugListener(GLDebugListener)</code></a></dd>
</dl>
</li>
</ul>
<a id="removeGLDebugListener(com.jogamp.opengl.GLDebugListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeGLDebugListener</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;removeGLDebugListener&#8203;(<a href="GLDebugListener.html" title="interface in com.jogamp.opengl">GLDebugListener</a>&nbsp;listener)</pre>
<div class="block">Remove <a href="GLDebugListener.html" title="interface in com.jogamp.opengl"><code>GLDebugListener</code></a>.<br></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>listener</code> - <a href="GLDebugListener.html" title="interface in com.jogamp.opengl"><code>GLDebugListener</code></a> handling <a href="GLDebugMessage.html" title="class in com.jogamp.opengl"><code>GLDebugMessage</code></a>s</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#enableGLDebugMessage(boolean)"><code>enableGLDebugMessage(boolean)</code></a>, 
<a href="#addGLDebugListener(com.jogamp.opengl.GLDebugListener)"><code>addGLDebugListener(GLDebugListener)</code></a></dd>
</dl>
</li>
</ul>
<a id="glDebugMessageControl(int,int,int,int,java.nio.IntBuffer,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>glDebugMessageControl</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;glDebugMessageControl&#8203;(int&nbsp;source,
                                           int&nbsp;type,
                                           int&nbsp;severity,
                                           int&nbsp;count,
                                           <a href="http://docs.oracle.com/javase/6/docs/api/java/nio/IntBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">IntBuffer</a>&nbsp;ids,
                                           boolean&nbsp;enabled)</pre>
<div class="block">Generic entry for <a href="GL2ES2.html#glDebugMessageControl(int,int,int,int,java.nio.IntBuffer,boolean)"><code>GL2ES2.glDebugMessageControl(int, int, int, int, IntBuffer, boolean)</code></a>
 and <a href="GL2GL3.html#glDebugMessageEnableAMD(int,int,int,java.nio.IntBuffer,boolean)"><code>GL2GL3.glDebugMessageEnableAMD(int, int, int, IntBuffer, boolean)</code></a> of the GLDebugOutput feature.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#enableGLDebugMessage(boolean)"><code>enableGLDebugMessage(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="glDebugMessageControl(int,int,int,int,int[],int,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>glDebugMessageControl</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;glDebugMessageControl&#8203;(int&nbsp;source,
                                           int&nbsp;type,
                                           int&nbsp;severity,
                                           int&nbsp;count,
                                           int[]&nbsp;ids,
                                           int&nbsp;ids_offset,
                                           boolean&nbsp;enabled)</pre>
<div class="block">Generic entry for <a href="GL2ES2.html#glDebugMessageControl(int,int,int,int,int%5B%5D,int,boolean)"><code>GL2ES2.glDebugMessageControl(int, int, int, int, int[], int, boolean)</code></a>
 and <a href="GL2GL3.html#glDebugMessageEnableAMD(int,int,int,int%5B%5D,int,boolean)"><code>GL2GL3.glDebugMessageEnableAMD(int, int, int, int[], int, boolean)</code></a> of the GLDebugOutput feature.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#enableGLDebugMessage(boolean)"><code>enableGLDebugMessage(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="glDebugMessageInsert(int,int,int,int,java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>glDebugMessageInsert</h4>
<pre class="methodSignature">public abstract&nbsp;void&nbsp;glDebugMessageInsert&#8203;(int&nbsp;source,
                                          int&nbsp;type,
                                          int&nbsp;id,
                                          int&nbsp;severity,
                                          <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;buf)</pre>
<div class="block">Generic entry for <a href="GL2ES2.html#glDebugMessageInsert(int,int,int,int,int,java.lang.String)"><code>GL2ES2.glDebugMessageInsert(int, int, int, int, int, String)</code></a>
 and <a href="GL2GL3.html#glDebugMessageInsertAMD(int,int,int,int,java.lang.String)"><code>GL2GL3.glDebugMessageInsertAMD(int, int, int, int, String)</code></a> of the GLDebugOutput feature.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#enableGLDebugMessage(boolean)"><code>enableGLDebugMessage(boolean)</code></a></dd>
</dl>
</li>
</ul>
<a id="getMaxMajor(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMaxMajor</h4>
<pre class="methodSignature">public static final&nbsp;int&nbsp;getMaxMajor&#8203;(int&nbsp;ctxProfile)</pre>
</li>
</ul>
<a id="getMaxMinor(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMaxMinor</h4>
<pre class="methodSignature">public static final&nbsp;int&nbsp;getMaxMinor&#8203;(int&nbsp;ctxProfile,
                                    int&nbsp;major)</pre>
</li>
</ul>
<a id="isValidGLVersion(int,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isValidGLVersion</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isValidGLVersion&#8203;(int&nbsp;ctxProfile,
                                             int&nbsp;major,
                                             int&nbsp;minor)</pre>
<div class="block">Returns true, if the major.minor is not inferior to the lowest
 valid version and does not exceed the highest known major number by more than one.
 Otherwise returns false.
 <p>
 Returns false if more than one bit of the following list in <code>ctxProfile</code> is set
 <ul>
   <li><a href="#CTX_PROFILE_ES"><code>CTX_PROFILE_ES</code></a></li>
   <li><a href="#CTX_PROFILE_CORE"><code>CTX_PROFILE_CORE</code></a></li>
   <li><a href="#CTX_PROFILE_COMPAT"><code>CTX_PROFILE_COMPAT</code></a></li>
 </ul>
 </p>
 <p>
 The minor version number is ignored by the upper limit validation
 and the major version number may exceed by one.
 </p>
 <p>
 The upper limit check is relaxed since we don't want to cut-off
 unforseen new GL version since the release of JOGL.
 </p>
 <p>
 Hence it is important to iterate through GL version from the upper limit
 and <a href="#decrementGLVersion(int,int%5B%5D,int%5B%5D)"><code>decrementGLVersion(int, int[], int[])</code></a> until invalid.
 </p></div>
</li>
</ul>
<a id="clipGLVersion(int,int[],int[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clipGLVersion</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;clipGLVersion&#8203;(int&nbsp;ctxProfile,
                                          int[]&nbsp;major,
                                          int[]&nbsp;minor)</pre>
<div class="block">Clip the given GL version to the maximum known valid version if exceeding.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if clipped, i.e. given value exceeds maximum, otherwise false.</dd>
</dl>
</li>
</ul>
<a id="decrementGLVersion(int,int[],int[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>decrementGLVersion</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;decrementGLVersion&#8203;(int&nbsp;ctxProfile,
                                               int[]&nbsp;major,
                                               int[]&nbsp;minor)</pre>
<div class="block">Decrement the given GL version by one
 and return true if still valid, otherwise false.
 <p>
 If the given version exceeds the maximum known valid version,
 it is <a href="#clipGLVersion(int,int%5B%5D,int%5B%5D)"><code>clipped</code></a> and
 true is returned.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>ctxProfile</code> - </dd>
<dd><code>major</code> - </dd>
<dd><code>minor</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a id="isFBOAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isFBOAvailable</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isFBOAvailable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                           <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</pre>
<div class="block">Returns true if it is possible to create an <i>framebuffer object</i> (FBO).
 <p>
 FBO feature is implemented in OpenGL, hence it is <a href="GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a> dependent.
 </p>
 <p>
 FBO support is queried as described in <a href="#hasBasicFBOSupport()"><code>hasBasicFBOSupport()</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>device</code> - the device to request whether FBO is available for</dd>
<dd><code>glp</code> - <a href="GLProfile.html" title="class in com.jogamp.opengl"><code>GLProfile</code></a> to check for FBO capabilities</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#hasBasicFBOSupport()"><code>hasBasicFBOSupport()</code></a></dd>
</dl>
</li>
</ul>
<a id="isHardwareRasterizer(com.jogamp.nativewindow.AbstractGraphicsDevice,com.jogamp.opengl.GLProfile)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isHardwareRasterizer</h4>
<pre class="methodSignature">public static final&nbsp;int&nbsp;isHardwareRasterizer&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                             <a href="GLProfile.html" title="class in com.jogamp.opengl">GLProfile</a>&nbsp;glp)</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><code>1</code> if using a hardware rasterizer, <code>0</code> if using a software rasterizer and <code>-1</code> if not determined yet.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#isHardwareRasterizer()"><code>isHardwareRasterizer()</code></a>, 
<a href="GLProfile.html#isHardwareRasterizer()"><code>GLProfile.isHardwareRasterizer()</code></a></dd>
</dl>
</li>
</ul>
<a id="isGLES1Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES1Available</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isGLES1Available&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                       boolean[]&nbsp;isHardware)</pre>
</li>
</ul>
<a id="isGLES2Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES2Available</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isGLES2Available&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                       boolean[]&nbsp;isHardware)</pre>
</li>
</ul>
<a id="isGLES3Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES3Available</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isGLES3Available&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                       boolean[]&nbsp;isHardware)</pre>
</li>
</ul>
<a id="isGLES3CompatibleAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES3CompatibleAvailable</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isGLES3CompatibleAvailable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</pre>
<div class="block">Returns true if a ES3 compatible profile is available,
 i.e. either a &ge; 4.3 context or a &ge; 3.1 context supporting <code>GL_ARB_ES3_compatibility</code>,
 otherwise false.
 <p>
 Includes [ GL &ge; 4.3, GL &ge; 3.1 w/ GL_ARB_ES3_compatibility and GLES3 ]
 </p></div>
</li>
</ul>
<a id="isGLES31CompatibleAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES31CompatibleAvailable</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isGLES31CompatibleAvailable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</pre>
<div class="block">Returns true if a ES3 &ge; 3.1 compatible profile is available,
 i.e. either a &ge; 4.5 context or a &ge; 3.1 context supporting <code>GL_ARB_ES3_1_compatibility</code>,
 otherwise false.
 <p>
 Includes [ GL &ge; 4.5, GL &ge; 3.1 w/ GL_ARB_ES3_1_compatibility and GLES3 &ge; 3.1 ]
 </p></div>
</li>
</ul>
<a id="isGLES32CompatibleAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGLES32CompatibleAvailable</h4>
<pre class="methodSignature">public static final&nbsp;boolean&nbsp;isGLES32CompatibleAvailable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device)</pre>
<div class="block">Returns true if a ES3 &ge; 3.2 compatible profile is available,
 i.e. either a &ge; 4.5 context or a &ge; 3.1 context supporting <code>GL_ARB_ES3_2_compatibility</code>,
 otherwise false.
 <p>
 Includes [ GL &ge; 4.5, GL &ge; 3.1 w/ GL_ARB_ES3_2_compatibility and GLES3 &ge; 3.2 ]
 </p></div>
</li>
</ul>
<a id="isGL4bcAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL4bcAvailable</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isGL4bcAvailable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                       boolean[]&nbsp;isHardware)</pre>
</li>
</ul>
<a id="isGL4Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL4Available</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isGL4Available&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                     boolean[]&nbsp;isHardware)</pre>
</li>
</ul>
<a id="isGL3bcAvailable(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL3bcAvailable</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isGL3bcAvailable&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                       boolean[]&nbsp;isHardware)</pre>
</li>
</ul>
<a id="isGL3Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isGL3Available</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isGL3Available&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                     boolean[]&nbsp;isHardware)</pre>
</li>
</ul>
<a id="isGL2Available(com.jogamp.nativewindow.AbstractGraphicsDevice,boolean[])">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>isGL2Available</h4>
<pre class="methodSignature">public static&nbsp;boolean&nbsp;isGL2Available&#8203;(<a href="../nativewindow/AbstractGraphicsDevice.html" title="interface in com.jogamp.nativewindow">AbstractGraphicsDevice</a>&nbsp;device,
                                     boolean[]&nbsp;isHardware)</pre>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../index.html?com/jogamp/opengl/GLContext.html" target="_top">Frames</a></li>
<li><a href="GLContext.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright 2010 JogAmp Community.</small></p>
</footer>
</body>
</html>
