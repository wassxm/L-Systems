<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (11.0.16) on Wed Feb 01 19:28:57 CET 2023 -->
<title>Bitstream (GlueGen Runtime Documentation)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="dc.created" content="2023-02-01">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../jquery/jquery-3.5.1.js"></script>
<script type="text/javascript" src="../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Bitstream (GlueGen Runtime Documentation)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":9,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":9,"i19":10,"i20":9,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":9,"i27":9,"i28":9,"i29":9,"i30":10,"i31":10,"i32":9,"i33":9,"i34":9,"i35":10,"i36":10,"i37":10,"i38":10,"i39":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/common/util/Bitstream.html" target="_top">Frames</a></li>
<li><a href="Bitstream.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">com.jogamp.common.util</a></div>
<h2 title="Class Bitstream" class="title">Class Bitstream&lt;T&gt;</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.jogamp.common.util.Bitstream&lt;T&gt;</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public class <span class="typeNameLabel">Bitstream&lt;T&gt;</span>
extends <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></pre>
<div class="block">Versatile Bitstream implementation supporting:
 <ul>
   <li>Utilize I/O operations on I/O streams, buffers and arrays</li>
   <li>Consider MSBfirst / LSBfirst mode</li>
   <li>Linear bit R/W operations</li>
   <li>Bulk R/W operations w/ endian related type conversion</li>
   <li>Allow mark/reset and switching streams and input/output mode</li>
   <li>Optimized operations</li>
 </ul></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Class</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="Bitstream.ByteArrayStream.html" title="class in com.jogamp.common.util">Bitstream.ByteArrayStream</a></span></code></th>
<td class="colLast">
<div class="block">Specific <a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util"><code>byte stream</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="Bitstream.ByteBufferStream.html" title="class in com.jogamp.common.util">Bitstream.ByteBufferStream</a></span></code></th>
<td class="colLast">
<div class="block">Specific <a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util"><code>byte stream</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="Bitstream.ByteInputStream.html" title="class in com.jogamp.common.util">Bitstream.ByteInputStream</a></span></code></th>
<td class="colLast">
<div class="block">Specific <a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util"><code>byte stream</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="Bitstream.ByteOutputStream.html" title="class in com.jogamp.common.util">Bitstream.ByteOutputStream</a></span></code></th>
<td class="colLast">
<div class="block">Specific <a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util"><code>byte stream</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static interface&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util">Bitstream.ByteStream</a>&lt;<a href="Bitstream.ByteStream.html" title="type parameter in Bitstream.ByteStream">T</a>&gt;</span></code></th>
<td class="colLast">
<div class="block">General byte stream.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#EOS">EOS</a></span></code></th>
<td class="colLast">
<div class="block">End of stream marker, -1 or 0xFFFFFFFF</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(com.jogamp.common.util.Bitstream.ByteStream,boolean)">Bitstream</a></span>&#8203;(<a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util">Bitstream.ByteStream</a>&lt;<a href="Bitstream.html" title="type parameter in Bitstream">T</a>&gt;&nbsp;stream,
         boolean&nbsp;outputMode)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#canInput()">canInput</a></span>()</code></th>
<td class="colLast">
<div class="block">Return true if stream can handle input, i.e.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#canOutput()">canOutput</a></span>()</code></th>
<td class="colLast">
<div class="block">Return true if stream can handle output, i.e.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>static void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#checkBounds(byte%5B%5D,int,int)">checkBounds</a></span>&#8203;(byte[]&nbsp;sb,
           int&nbsp;offset,
           int&nbsp;remaining)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#close()">close</a></span>()</code></th>
<td class="colLast">
<div class="block">Closing the underlying stream, implies <a href="#flush()"><code>flush()</code></a>.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#flush()">flush</a></span>()</code></th>
<td class="colLast">
<div class="block">Synchronizes all underlying <a href="Bitstream.ByteStream.html#canOutput()"><code>output stream</code></a> operations, or do nothing.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getBitBuffer()">getBitBuffer</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the current bit buffer.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getBitCount()">getBitCount</a></span>()</code></th>
<td class="colLast">
<div class="block">Number of remaining bits in cache to read before next byte-read (input mode)
 or number of remaining bits to be cached before next byte-write (output mode).</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getBitPosition()">getBitPosition</a></span>()</code></th>
<td class="colLast">
<div class="block">Return the next bit number to be read or write counting from [0..7].</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getLastBitPos()">getLastBitPos</a></span>()</code></th>
<td class="colLast">
<div class="block">Return the last bit number read or written counting from [0..7].</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code><a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util">Bitstream.ByteStream</a>&lt;<a href="Bitstream.html" title="type parameter in Bitstream">T</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getStream()">getStream</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the currently used <a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util"><code>Bitstream.ByteStream</code></a>.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="Bitstream.html" title="type parameter in Bitstream">T</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSubStream()">getSubStream</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the currently used <a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util"><code>Bitstream.ByteStream</code></a>'s <a href="Bitstream.ByteStream.html#getStream()"><code>Bitstream.ByteStream.getStream()</code></a>.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getThrowIOExceptionOnEOF()">getThrowIOExceptionOnEOF</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns true if I/O methods throw an <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink"><code>IOException</code></a> if <a href="#EOS"><code>EOS</code></a> appears, otherwise false (default).</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#mark(int)">mark</a></span>&#8203;(int&nbsp;readLimit)</code></th>
<td class="colLast">
<div class="block">Set <code>markpos</code> to current position, allowing the stream to be <a href="#reset()"><code>reset()</code></a>.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#position()">position</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the bit position in the stream.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#position(long)">position</a></span>&#8203;(long&nbsp;newPosition)</code></th>
<td class="colLast">
<div class="block">Sets this stream's bit position.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#readBit(boolean)">readBit</a></span>&#8203;(boolean&nbsp;msbFirst)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#readBits31(int)">readBits31</a></span>&#8203;(int&nbsp;n)</code></th>
<td class="colLast">
<div class="block">Return incoming bits as read via <a href="#readBit(boolean)"><code>readBit(boolean)</code></a> LSB-first as little-endian.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#readUInt16(boolean)">readUInt16</a></span>&#8203;(boolean&nbsp;bigEndian)</code></th>
<td class="colLast">
<div class="block">Return incoming <code>uint16_t</code> as read via <a href="#readBits31(int)"><code>readBits31(int)</code></a> LSB-first as little-endian,
 hence bytes are swapped if bigEndian.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#readUInt16(boolean,byte%5B%5D,int)">readUInt16</a></span>&#8203;(boolean&nbsp;bigEndian,
          byte[]&nbsp;bytes,
          int&nbsp;offset)</code></th>
<td class="colLast">
<div class="block">Return incoming <code>uint16_t</code> value and swap bytes according to bigEndian.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#readUInt32(boolean)">readUInt32</a></span>&#8203;(boolean&nbsp;bigEndian)</code></th>
<td class="colLast">
<div class="block">Return incoming <code>uint32_t</code> as read via <a href="#readBits31(int)"><code>readBits31(int)</code></a> LSB-first as little-endian,
 hence bytes are swapped if bigEndian.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>static long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#readUInt32(boolean,byte%5B%5D,int)">readUInt32</a></span>&#8203;(boolean&nbsp;bigEndian,
          byte[]&nbsp;bytes,
          int&nbsp;offset)</code></th>
<td class="colLast">
<div class="block">Return incoming <code>uint32_t</code> and swap bytes according to bigEndian.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#readUInt8()">readUInt8</a></span>()</code></th>
<td class="colLast">
<div class="block">Return incoming <code>uint8_t</code> as read via <a href="#readBits31(int)"><code>readBits31(int)</code></a>.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reset()">reset</a></span>()</code></th>
<td class="colLast">
<div class="block">Reset stream position to <i>markpos</i> as set via <a href="#mark(int)"><code>mark(int)</code></a>.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setStream(T,boolean)">setStream</a></span>&#8203;(<a href="Bitstream.html" title="type parameter in Bitstream">T</a>&nbsp;stream,
         boolean&nbsp;outputMode)</code></th>
<td class="colLast">
<div class="block">Sets the underlying stream, without <a href="#close()"><code>close()</code></a>ing the previous one.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setThrowIOExceptionOnEOF(boolean)">setThrowIOExceptionOnEOF</a></span>&#8203;(boolean&nbsp;enable)</code></th>
<td class="colLast">
<div class="block">Enables or disables throwing an <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink"><code>IOException</code></a> in case <a href="#EOS"><code>EOS</code></a> appears.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#skip(long)">skip</a></span>&#8203;(long&nbsp;n)</code></th>
<td class="colLast">
<div class="block">It is implementation dependent, whether backward skip giving a negative number is supported or not.</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>static <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toBinString(boolean,int,int)">toBinString</a></span>&#8203;(boolean&nbsp;msbFirst,
           int&nbsp;v,
           int&nbsp;bitCount)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>static <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toHexBinString(boolean,byte%5B%5D,int,int)">toHexBinString</a></span>&#8203;(boolean&nbsp;msbFirst,
              byte[]&nbsp;data,
              int&nbsp;offset,
              int&nbsp;len)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>static <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toHexBinString(boolean,int,int)">toHexBinString</a></span>&#8203;(boolean&nbsp;msbFirst,
              int&nbsp;v,
              int&nbsp;bitCount)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>static <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toHexBinString(boolean,java.nio.ByteBuffer,int,int)">toHexBinString</a></span>&#8203;(boolean&nbsp;msbFirst,
              <a href="https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">ByteBuffer</a>&nbsp;data,
              int&nbsp;offset,
              int&nbsp;len)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>protected <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toStringImpl()">toStringImpl</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toUInt32Int(int)">toUInt32Int</a></span>&#8203;(int&nbsp;int32)</code></th>
<td class="colLast">
<div class="block">Returns the reinterpreted given <code>int32_t</code> value
 as <code>uint32_t</code> if &le; <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html?is-external=true#MAX_VALUE" title="class or interface in java.lang" class="externalLink"><code>Integer.MAX_VALUE</code></a>
 as within an <code>int</code> storage.</div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>static long</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toUInt32Long(int)">toUInt32Long</a></span>&#8203;(int&nbsp;int32)</code></th>
<td class="colLast">
<div class="block">Reinterpret the given <code>int32_t</code> value as <code>uint32_t</code>,
 i.e.</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>static int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#uint32LongToInt(long)">uint32LongToInt</a></span>&#8203;(long&nbsp;uint32)</code></th>
<td class="colLast">
<div class="block">Returns the given <code>uint32_t</code> value <code>long</code>
 value as <code>int</code> if &le; <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html?is-external=true#MAX_VALUE" title="class or interface in java.lang" class="externalLink"><code>Integer.MAX_VALUE</code></a>.</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#writeBit(boolean,int)">writeBit</a></span>&#8203;(boolean&nbsp;msbFirst,
        int&nbsp;bit)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#writeBits31(int,int)">writeBits31</a></span>&#8203;(int&nbsp;n,
           int&nbsp;bits)</code></th>
<td class="colLast">
<div class="block">Write the given bits via <a href="#writeBit(boolean,int)"><code>writeBit(boolean, int)</code></a> LSB-first as little-endian.</div>
</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#writeInt16(boolean,short)">writeInt16</a></span>&#8203;(boolean&nbsp;bigEndian,
          short&nbsp;int16)</code></th>
<td class="colLast">
<div class="block">Write the given 16 bits via <a href="#writeBits31(int,int)"><code>writeBits31(int, int)</code></a> LSB-first as little-endian,
 hence bytes are swapped if bigEndian.</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#writeInt32(boolean,int)">writeInt32</a></span>&#8203;(boolean&nbsp;bigEndian,
          int&nbsp;int32)</code></th>
<td class="colLast">
<div class="block">Write the given 32 bits via <a href="#writeBits31(int,int)"><code>writeBits31(int, int)</code></a> LSB-first as little-endian,
 hence bytes are swapped if bigEndian.</div>
</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#writeInt8(byte)">writeInt8</a></span>&#8203;(byte&nbsp;int8)</code></th>
<td class="colLast">
<div class="block">Write the given 8 bits via <a href="#writeBits31(int,int)"><code>writeBits31(int, int)</code></a>.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></h3>
<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang" class="externalLink">clone</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang" class="externalLink">equals</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang" class="externalLink">finalize</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang" class="externalLink">getClass</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang" class="externalLink">hashCode</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang" class="externalLink">notify</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang" class="externalLink">notifyAll</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang" class="externalLink">wait</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait(long,int)" title="class or interface in java.lang" class="externalLink">wait</a></code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="EOS">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>EOS</h4>
<pre>public static final&nbsp;int EOS</pre>
<div class="block">End of stream marker, -1 or 0xFFFFFFFF</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../constant-values.html#com.jogamp.common.util.Bitstream.EOS">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(com.jogamp.common.util.Bitstream.ByteStream,boolean)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Bitstream</h4>
<pre>public&nbsp;Bitstream&#8203;(<a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util">Bitstream.ByteStream</a>&lt;<a href="Bitstream.html" title="type parameter in Bitstream">T</a>&gt;&nbsp;stream,
                 boolean&nbsp;outputMode)
          throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>stream</code> - </dd>
<dd><code>outputMode</code> - </dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if requested <i>outputMode</i> doesn't match stream's <a href="#canInput()"><code>canInput()</code></a> and <a href="#canOutput()"><code>canOutput()</code></a>.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="setThrowIOExceptionOnEOF(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setThrowIOExceptionOnEOF</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setThrowIOExceptionOnEOF&#8203;(boolean&nbsp;enable)</pre>
<div class="block">Enables or disables throwing an <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink"><code>IOException</code></a> in case <a href="#EOS"><code>EOS</code></a> appears.
 <p>
 Default behavior for I/O methods is not to throw an <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink"><code>IOException</code></a>, but to return <a href="#EOS"><code>EOS</code></a>.
 </p></div>
</li>
</ul>
<a id="getThrowIOExceptionOnEOF()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getThrowIOExceptionOnEOF</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;getThrowIOExceptionOnEOF()</pre>
<div class="block">Returns true if I/O methods throw an <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink"><code>IOException</code></a> if <a href="#EOS"><code>EOS</code></a> appears, otherwise false (default).</div>
</li>
</ul>
<a id="setStream(java.lang.Object,boolean)">
<!--   -->
</a><a id="setStream(T,boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setStream</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;setStream&#8203;(<a href="Bitstream.html" title="type parameter in Bitstream">T</a>&nbsp;stream,
                            boolean&nbsp;outputMode)
                     throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a>,
                            <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Sets the underlying stream, without <a href="#close()"><code>close()</code></a>ing the previous one.
 <p>
 If the previous stream was in <a href="#canOutput()"><code>output mode</code></a>,
 <a href="#flush()"><code>flush()</code></a> is being called.
 </p></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if requested <i>outputMode</i> doesn't match stream's <a href="#canInput()"><code>canInput()</code></a> and <a href="#canOutput()"><code>canOutput()</code></a>.</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code> - could be caused by <a href="#flush()"><code>flush()</code></a>.</dd>
</dl>
</li>
</ul>
<a id="getStream()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStream</h4>
<pre class="methodSignature">public final&nbsp;<a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util">Bitstream.ByteStream</a>&lt;<a href="Bitstream.html" title="type parameter in Bitstream">T</a>&gt;&nbsp;getStream()</pre>
<div class="block">Returns the currently used <a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util"><code>Bitstream.ByteStream</code></a>.</div>
</li>
</ul>
<a id="getSubStream()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSubStream</h4>
<pre class="methodSignature">public final&nbsp;<a href="Bitstream.html" title="type parameter in Bitstream">T</a>&nbsp;getSubStream()</pre>
<div class="block">Returns the currently used <a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util"><code>Bitstream.ByteStream</code></a>'s <a href="Bitstream.ByteStream.html#getStream()"><code>Bitstream.ByteStream.getStream()</code></a>.</div>
</li>
</ul>
<a id="close()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>close</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;close()
                 throws <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Closing the underlying stream, implies <a href="#flush()"><code>flush()</code></a>.
 <p>
 Implementation will <code>null</code> the stream references,
 hence <code>#setStream(Object)</code> must be called before re-using instance.
 </p>
 <p>
 If the closed stream was in <a href="#canOutput()"><code>output mode</code></a>,
 <a href="#flush()"><code>flush()</code></a> is being called.
 </p></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="flush()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>flush</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;flush()
                throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                       <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Synchronizes all underlying <a href="Bitstream.ByteStream.html#canOutput()"><code>output stream</code></a> operations, or do nothing.
 <p>
 Method also flushes incomplete bytes to the underlying <a href="Bitstream.ByteStream.html" title="interface in com.jogamp.common.util"><code>Bitstream.ByteStream</code></a>
 and hence skips to the next byte position.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><a href="#EOS"><code>EOS</code></a> caused by writing, otherwise zero.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in output mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="canInput()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>canInput</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;canInput()</pre>
<div class="block">Return true if stream can handle input, i.e. <a href="#readBit(boolean)"><code>readBit(boolean)</code></a>.</div>
</li>
</ul>
<a id="canOutput()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>canOutput</h4>
<pre class="methodSignature">public final&nbsp;boolean&nbsp;canOutput()</pre>
<div class="block">Return true if stream can handle output, i.e. <a href="#writeBit(boolean,int)"><code>writeBit(boolean, int)</code></a>.</div>
</li>
</ul>
<a id="mark(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mark</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;mark&#8203;(int&nbsp;readLimit)
                throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></pre>
<div class="block">Set <code>markpos</code> to current position, allowing the stream to be <a href="#reset()"><code>reset()</code></a>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>readlimit</code> - maximum number of bytes able to read before invalidating the <code>markpos</code>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in input mode or stream closed</dd>
</dl>
</li>
</ul>
<a id="reset()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reset</h4>
<pre class="methodSignature">public final&nbsp;void&nbsp;reset()
                 throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                        <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Reset stream position to <i>markpos</i> as set via <a href="#mark(int)"><code>mark(int)</code></a>.
 <p>
 <i>markpos</i> is kept, hence <a href="#reset()"><code>reset()</code></a> can be called multiple times.
 </p></div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in input mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if <i>markpos</i> has not been set via <a href="#mark(int)"><code>mark(int)</code></a> or reset operation failed.</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code> - if reset operation failed.</dd>
</dl>
</li>
</ul>
<a id="getBitCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBitCount</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;getBitCount()</pre>
<div class="block">Number of remaining bits in cache to read before next byte-read (input mode)
 or number of remaining bits to be cached before next byte-write (output mode).
 <p>
 Counting down from 7..0 7..0, starting with 0.
 </p>
 <p>
 In input mode, zero indicates reading a new byte and cont. w/ 7.
 In output mode, the cached byte is written when flipping over to 0.
 </p></div>
</li>
</ul>
<a id="getLastBitPos()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastBitPos</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;getLastBitPos()</pre>
<div class="block">Return the last bit number read or written counting from [0..7].
 If no bit access has been performed, 7 is returned.
 <p>
 Returned value is normalized [0..7], i.e. independent from <i>msb</i> or <i>lsb</i> read order.
 </p></div>
</li>
</ul>
<a id="getBitPosition()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBitPosition</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;getBitPosition()</pre>
<div class="block">Return the next bit number to be read or write counting from [0..7].
 If no bit access has been performed, 0 is returned.
 <p>
 Returned value is normalized [0..7], i.e. independent from <i>msb</i> or <i>lsb</i> read order.
 </p></div>
</li>
</ul>
<a id="getBitBuffer()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBitBuffer</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;getBitBuffer()</pre>
<div class="block">Returns the current bit buffer.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="#getBitCount()"><code>getBitCount()</code></a></dd>
</dl>
</li>
</ul>
<a id="position()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>position</h4>
<pre class="methodSignature">public final&nbsp;long&nbsp;position()</pre>
<div class="block">Returns the bit position in the stream.</div>
</li>
</ul>
<a id="position(long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>position</h4>
<pre class="methodSignature">public final&nbsp;long&nbsp;position&#8203;(long&nbsp;newPosition)
                    throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/UnsupportedOperationException.html?is-external=true" title="class or interface in java.lang" class="externalLink">UnsupportedOperationException</a>,
                           <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a>,
                           <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                           <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Sets this stream's bit position.
 <p>
 A set mark is cleared.
 </p>
 <p>
 Returns <a href="#EOS"><code>EOS</code></a> is end-of-stream is reached,
 otherwise the new position.
 </p>
 <p>
 Known supporting implementation is <a href="Bitstream.ByteBufferStream.html" title="class in com.jogamp.common.util"><code>Bitstream.ByteBufferStream</code></a> and <a href="Bitstream.ByteArrayStream.html" title="class in com.jogamp.common.util"><code>Bitstream.ByteArrayStream</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newPosition</code> - The new positive position.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The new set position or <a href="#EOS"><code>EOS</code></a> if end-of-stream is reached.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/UnsupportedOperationException.html?is-external=true" title="class or interface in java.lang" class="externalLink">UnsupportedOperationException</a></code> - if not supported, i.e. <a href="Bitstream.ByteInputStream.html" title="class in com.jogamp.common.util"><code>Bitstream.ByteInputStream</code></a> or <a href="Bitstream.ByteOutputStream.html" title="class in com.jogamp.common.util"><code>Bitstream.ByteOutputStream</code></a></dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - If the <code>newPosition</code> is negative</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code> - if read error occurs or EOS is reached and <a href="#setThrowIOExceptionOnEOF(boolean)"><code>setThrowIOExceptionOnEOF(boolean)</code></a> is set to true.</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code></dd>
</dl>
</li>
</ul>
<a id="readBit(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readBit</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;readBit&#8203;(boolean&nbsp;msbFirst)
                  throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/UnsupportedOperationException.html?is-external=true" title="class or interface in java.lang" class="externalLink">UnsupportedOperationException</a>,
                         <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                         <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msbFirst</code> - if true incoming stream bit order is MSB to LSB, otherwise LSB to MSB.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the read bit or <a href="#EOS"><code>EOS</code></a> if end-of-stream is reached.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in input mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/UnsupportedOperationException.html?is-external=true" title="class or interface in java.lang" class="externalLink">UnsupportedOperationException</a></code></dd>
</dl>
</li>
</ul>
<a id="writeBit(boolean,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeBit</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;writeBit&#8203;(boolean&nbsp;msbFirst,
                          int&nbsp;bit)
                   throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                          <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msbFirst</code> - if true outgoing stream bit order is MSB to LSB, otherwise LSB to MSB.</dd>
<dd><code>bit</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the currently written byte or <a href="#EOS"><code>EOS</code></a> if end-of-stream is reached.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in output mode or stream closed</dd>
</dl>
</li>
</ul>
<a id="skip(long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>skip</h4>
<pre class="methodSignature">public&nbsp;long&nbsp;skip&#8203;(long&nbsp;n)
          throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                 <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">It is implementation dependent, whether backward skip giving a negative number is supported or not.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>n</code> - number of bits to skip</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>actual skipped bits</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code> - if read error occurs or EOS is reached and <a href="#setThrowIOExceptionOnEOF(boolean)"><code>setThrowIOExceptionOnEOF(boolean)</code></a> is set to true.</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if closed</dd>
</dl>
</li>
</ul>
<a id="readBits31(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readBits31</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;readBits31&#8203;(int&nbsp;n)
               throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a>,
                      <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Return incoming bits as read via <a href="#readBit(boolean)"><code>readBit(boolean)</code></a> LSB-first as little-endian.
 <p>
 The incoming bit order is from low- to most-significant-bit, maintaining bit LSB-first order.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>n</code> - number of bits, maximum 31 bits</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the read bits from 0-n in the given order or <a href="#EOS"><code>EOS</code></a>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in input mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if n > 31</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="writeBits31(int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeBits31</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;writeBits31&#8203;(int&nbsp;n,
                       int&nbsp;bits)
                throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                       <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a>,
                       <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Write the given bits via <a href="#writeBit(boolean,int)"><code>writeBit(boolean, int)</code></a> LSB-first as little-endian.
 <p>
 The outgoing bit order is from low- to most-significant-bit, maintaining bit LSB-first order.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>n</code> - number of bits, maximum 31 bits</dd>
<dd><code>bits</code> - the bits to write</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the written bits or <a href="#EOS"><code>EOS</code></a>.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in output mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalArgumentException</a></code> - if n > 31</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="readUInt8()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readUInt8</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;readUInt8()
                    throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                           <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Return incoming <code>uint8_t</code> as read via <a href="#readBits31(int)"><code>readBits31(int)</code></a>.
 <p>
 In case of a <code>int8_t</code> 2-complement signed value, simply cast the result to <code>byte</code>
 after checking for <a href="#EOS"><code>EOS</code></a>.
 </p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><a href="#EOS"><code>EOS</code></a> or the 8bit unsigned value within the lower bits.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in input mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="writeInt8(byte)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeInt8</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;writeInt8&#8203;(byte&nbsp;int8)
                    throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                           <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Write the given 8 bits via <a href="#writeBits31(int,int)"><code>writeBits31(int, int)</code></a>.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><a href="#EOS"><code>EOS</code></a> or the written 8bit value.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in output mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="readUInt16(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readUInt16</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;readUInt16&#8203;(boolean&nbsp;bigEndian)
                     throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                            <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Return incoming <code>uint16_t</code> as read via <a href="#readBits31(int)"><code>readBits31(int)</code></a> LSB-first as little-endian,
 hence bytes are swapped if bigEndian.
 <p>
 In case of a <code>int16_t</code> 2-complement signed value, simply cast the result to <code>short</code>
 after checking for <a href="#EOS"><code>EOS</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bigEndian</code> - if true, swap incoming bytes to little-endian, otherwise leave them as little-endian.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><a href="#EOS"><code>EOS</code></a> or the 16bit unsigned value within the lower bits.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in input mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="readUInt16(boolean,byte[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readUInt16</h4>
<pre class="methodSignature">public static final&nbsp;int&nbsp;readUInt16&#8203;(boolean&nbsp;bigEndian,
                                   byte[]&nbsp;bytes,
                                   int&nbsp;offset)
                            throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></pre>
<div class="block">Return incoming <code>uint16_t</code> value and swap bytes according to bigEndian.
 <p>
 In case of a <code>int16_t</code> 2-complement signed value, simply cast the result to <code>short</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bigEndian</code> - if false, swap incoming bytes to little-endian, otherwise leave them as big-endian.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the 16bit unsigned value within the lower bits.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code></dd>
</dl>
</li>
</ul>
<a id="writeInt16(boolean,short)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeInt16</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;writeInt16&#8203;(boolean&nbsp;bigEndian,
                            short&nbsp;int16)
                     throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                            <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Write the given 16 bits via <a href="#writeBits31(int,int)"><code>writeBits31(int, int)</code></a> LSB-first as little-endian,
 hence bytes are swapped if bigEndian.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bigEndian</code> - if true, swap given bytes to little-endian, otherwise leave them as little-endian.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><a href="#EOS"><code>EOS</code></a> or the written 16bit value.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in output mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="readUInt32(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readUInt32</h4>
<pre class="methodSignature">public final&nbsp;long&nbsp;readUInt32&#8203;(boolean&nbsp;bigEndian)
                      throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                             <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Return incoming <code>uint32_t</code> as read via <a href="#readBits31(int)"><code>readBits31(int)</code></a> LSB-first as little-endian,
 hence bytes are swapped if bigEndian.
 <p>
 In case of a <code>int32_t</code> 2-complement signed value, simply cast the result to <code>int</code>
 after checking for <a href="#EOS"><code>EOS</code></a>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bigEndian</code> - if true, swap incoming bytes to little-endian, otherwise leave them as little-endian.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><a href="#EOS"><code>EOS</code></a> or the 32bit unsigned value within the lower bits.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in input mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="readUInt32(boolean,byte[],int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readUInt32</h4>
<pre class="methodSignature">public static final&nbsp;long&nbsp;readUInt32&#8203;(boolean&nbsp;bigEndian,
                                    byte[]&nbsp;bytes,
                                    int&nbsp;offset)
                             throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></pre>
<div class="block">Return incoming <code>uint32_t</code> and swap bytes according to bigEndian.
 <p>
 In case of a <code>int32_t</code> 2-complement signed value, simply cast the result to <code>int</code>.
 </p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bigEndian</code> - if false, swap incoming bytes to little-endian, otherwise leave them as big-endian.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the 32bit unsigned value within the lower bits.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code></dd>
</dl>
</li>
</ul>
<a id="writeInt32(boolean,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeInt32</h4>
<pre class="methodSignature">public final&nbsp;int&nbsp;writeInt32&#8203;(boolean&nbsp;bigEndian,
                            int&nbsp;int32)
                     throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a>,
                            <a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></pre>
<div class="block">Write the given 32 bits via <a href="#writeBits31(int,int)"><code>writeBits31(int, int)</code></a> LSB-first as little-endian,
 hence bytes are swapped if bigEndian.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bigEndian</code> - if true, swap given bytes to little-endian, otherwise leave them as little-endian.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><a href="#EOS"><code>EOS</code></a> or the written 32bit value.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IllegalStateException</a></code> - if not in output mode or stream closed</dd>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io" class="externalLink">IOException</a></code></dd>
</dl>
</li>
</ul>
<a id="toUInt32Long(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toUInt32Long</h4>
<pre class="methodSignature">public static final&nbsp;long&nbsp;toUInt32Long&#8203;(int&nbsp;int32)</pre>
<div class="block">Reinterpret the given <code>int32_t</code> value as <code>uint32_t</code>,
 i.e. perform the following cast to <code>long</code>:
 <pre>
   final long l = 0xffffffffL & int32;
 </pre></div>
</li>
</ul>
<a id="toUInt32Int(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toUInt32Int</h4>
<pre class="methodSignature">public static final&nbsp;int&nbsp;toUInt32Int&#8203;(int&nbsp;int32)</pre>
<div class="block">Returns the reinterpreted given <code>int32_t</code> value
 as <code>uint32_t</code> if &le; <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html?is-external=true#MAX_VALUE" title="class or interface in java.lang" class="externalLink"><code>Integer.MAX_VALUE</code></a>
 as within an <code>int</code> storage.
 Otherwise return -1.</div>
</li>
</ul>
<a id="uint32LongToInt(long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>uint32LongToInt</h4>
<pre class="methodSignature">public static final&nbsp;int&nbsp;uint32LongToInt&#8203;(long&nbsp;uint32)</pre>
<div class="block">Returns the given <code>uint32_t</code> value <code>long</code>
 value as <code>int</code> if &le; <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html?is-external=true#MAX_VALUE" title="class or interface in java.lang" class="externalLink"><code>Integer.MAX_VALUE</code></a>.
 Otherwise return -1.</div>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toString()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang" class="externalLink">toString</a></code>&nbsp;in class&nbsp;<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang" class="externalLink">Object</a></code></dd>
</dl>
</li>
</ul>
<a id="toStringImpl()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toStringImpl</h4>
<pre class="methodSignature">protected&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toStringImpl()</pre>
</li>
</ul>
<a id="toBinString(boolean,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toBinString</h4>
<pre class="methodSignature">public static&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toBinString&#8203;(boolean&nbsp;msbFirst,
                                 int&nbsp;v,
                                 int&nbsp;bitCount)</pre>
</li>
</ul>
<a id="toHexBinString(boolean,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toHexBinString</h4>
<pre class="methodSignature">public static&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toHexBinString&#8203;(boolean&nbsp;msbFirst,
                                    int&nbsp;v,
                                    int&nbsp;bitCount)</pre>
</li>
</ul>
<a id="toHexBinString(boolean,byte[],int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toHexBinString</h4>
<pre class="methodSignature">public static final&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toHexBinString&#8203;(boolean&nbsp;msbFirst,
                                          byte[]&nbsp;data,
                                          int&nbsp;offset,
                                          int&nbsp;len)</pre>
</li>
</ul>
<a id="toHexBinString(boolean,java.nio.ByteBuffer,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toHexBinString</h4>
<pre class="methodSignature">public static final&nbsp;<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang" class="externalLink">String</a>&nbsp;toHexBinString&#8203;(boolean&nbsp;msbFirst,
                                          <a href="https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html?is-external=true" title="class or interface in java.nio" class="externalLink">ByteBuffer</a>&nbsp;data,
                                          int&nbsp;offset,
                                          int&nbsp;len)</pre>
</li>
</ul>
<a id="checkBounds(byte[],int,int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>checkBounds</h4>
<pre class="methodSignature">public static&nbsp;void&nbsp;checkBounds&#8203;(byte[]&nbsp;sb,
                               int&nbsp;offset,
                               int&nbsp;remaining)
                        throws <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang" class="externalLink">IndexOutOfBoundsException</a></code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../index.html?com/jogamp/common/util/Bitstream.html" target="_top">Frames</a></li>
<li><a href="Bitstream.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</body>
</html>
